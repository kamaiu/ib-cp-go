// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package model

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(in *jlexer.Lexer, out *Wagers_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		case "curr":
			out.Curr = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "part":
			out.Part = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(out *jwriter.Writer, in Wagers_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"curr\":"
		out.RawString(prefix)
		out.String(string(in.Curr))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"part\":"
		out.RawString(prefix)
		out.String(string(in.Part))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Wagers_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Wagers_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Wagers_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Wagers_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(in *jlexer.Lexer, out *Wagers_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Wagers_List, 0, 8)
			} else {
				*out = Wagers_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 *Wagers_List_Item
			if in.IsNull() {
				in.Skip()
				v1 = nil
			} else {
				if v1 == nil {
					v1 = new(Wagers_List_Item)
				}
				(*v1).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(out *jwriter.Writer, in Wagers_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			if v3 == nil {
				out.RawString("null")
			} else {
				(*v3).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Wagers_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Wagers_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Wagers_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Wagers_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(in *jlexer.Lexer, out *Trsrv_Stocks_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(out *jwriter.Writer, in Trsrv_Stocks_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Stocks_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Stocks_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Stocks_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Stocks_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cancelDayOrders":
			out.CancelDayOrders = string(in.String())
		case "closingTime":
			out.ClosingTime = int64(in.Int64())
		case "openingTime":
			out.OpeningTime = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cancelDayOrders\":"
		out.RawString(prefix[1:])
		out.String(string(in.CancelDayOrders))
	}
	{
		const prefix string = ",\"closingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.ClosingTime))
	}
	{
		const prefix string = ",\"openingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.OpeningTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "closingTime":
			out.ClosingTime = int64(in.Int64())
		case "openingTime":
			out.OpeningTime = int64(in.Int64())
		case "prop":
			out.Prop = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"closingTime\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ClosingTime))
	}
	{
		const prefix string = ",\"openingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.OpeningTime))
	}
	{
		const prefix string = ",\"prop\":"
		out.RawString(prefix)
		out.String(string(in.Prop))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "clearingCycleEndTime":
			out.ClearingCycleEndTime = int64(in.Int64())
		case "sessions":
			if in.IsNull() {
				in.Skip()
				out.Sessions = nil
			} else {
				if out.Sessions == nil {
					out.Sessions = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions)
				}
				(*out.Sessions).UnmarshalEasyJSON(in)
			}
		case "tradingScheduleDate":
			out.TradingScheduleDate = int64(in.Int64())
		case "tradingTimes":
			if in.IsNull() {
				in.Skip()
				out.TradingTimes = nil
			} else {
				if out.TradingTimes == nil {
					out.TradingTimes = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes)
				}
				(*out.TradingTimes).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"clearingCycleEndTime\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ClearingCycleEndTime))
	}
	{
		const prefix string = ",\"sessions\":"
		out.RawString(prefix)
		if in.Sessions == nil {
			out.RawString("null")
		} else {
			(*in.Sessions).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tradingScheduleDate\":"
		out.RawString(prefix)
		out.Int64(int64(in.TradingScheduleDate))
	}
	{
		const prefix string = ",\"tradingTimes\":"
		out.RawString(prefix)
		if in.TradingTimes == nil {
			out.RawString("null")
		} else {
			(*in.TradingTimes).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Trsrv_Secdef_Schedule_GET_200_Schedules_List, 0, 8)
			} else {
				*out = Trsrv_Secdef_Schedule_GET_200_Schedules_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v4 *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item
			if in.IsNull() {
				in.Skip()
				v4 = nil
			} else {
				if v4 == nil {
					v4 = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item)
				}
				(*v4).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v4)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v5, v6 := range in {
			if v5 > 0 {
				out.RawByte(',')
			}
			if v6 == nil {
				out.RawString("null")
			} else {
				(*v6).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "schedules":
			if in.IsNull() {
				in.Skip()
				out.Schedules = nil
			} else {
				in.Delim('[')
				if out.Schedules == nil {
					if !in.IsDelim(']') {
						out.Schedules = make([]*Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item, 0, 8)
					} else {
						out.Schedules = []*Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item{}
					}
				} else {
					out.Schedules = (out.Schedules)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Schedules = append(out.Schedules, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "tradeVenueId":
			out.TradeVenueId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"schedules\":"
		out.RawString(prefix)
		if in.Schedules == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Schedules {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"tradeVenueId\":"
		out.RawString(prefix)
		out.String(string(in.TradeVenueId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(in *jlexer.Lexer, out *Trsrv_Secdef_POST_Request_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Trsrv_Secdef_POST_Request_Conids_List, 0, 8)
			} else {
				*out = Trsrv_Secdef_POST_Request_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v10 int64
			v10 = int64(in.Int64())
			*out = append(*out, v10)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(out *jwriter.Writer, in Trsrv_Secdef_POST_Request_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v11, v12 := range in {
			if v11 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v12))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_POST_Request_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_POST_Request_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(in *jlexer.Lexer, out *Trsrv_Secdef_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conids":
			if in.IsNull() {
				in.Skip()
				out.Conids = nil
			} else {
				in.Delim('[')
				if out.Conids == nil {
					if !in.IsDelim(']') {
						out.Conids = make([]int64, 0, 8)
					} else {
						out.Conids = []int64{}
					}
				} else {
					out.Conids = (out.Conids)[:0]
				}
				for !in.IsDelim(']') {
					var v13 int64
					v13 = int64(in.Int64())
					out.Conids = append(out.Conids, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(out *jwriter.Writer, in Trsrv_Secdef_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix[1:])
		if in.Conids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Conids {
				if v14 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v15))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(in *jlexer.Lexer, out *Trsrv_Futures_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(out *jwriter.Writer, in Trsrv_Futures_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Futures_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Futures_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Futures_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Futures_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(in *jlexer.Lexer, out *Transactions_Transactions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctid":
			out.Acctid = string(in.String())
		case "amt":
			out.Amt = float64(in.Float64())
		case "conid":
			out.Conid = float64(in.Float64())
		case "cur":
			out.Cur = string(in.String())
		case "date":
			out.Date = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "fxRate":
			out.FxRate = float64(in.Float64())
		case "pr":
			out.Pr = float64(in.Float64())
		case "qty":
			out.Qty = float64(in.Float64())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(out *jwriter.Writer, in Transactions_Transactions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acctid))
	}
	{
		const prefix string = ",\"amt\":"
		out.RawString(prefix)
		out.Float64(float64(in.Amt))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"cur\":"
		out.RawString(prefix)
		out.String(string(in.Cur))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.String(string(in.Date))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"fxRate\":"
		out.RawString(prefix)
		out.Float64(float64(in.FxRate))
	}
	{
		const prefix string = ",\"pr\":"
		out.RawString(prefix)
		out.Float64(float64(in.Pr))
	}
	{
		const prefix string = ",\"qty\":"
		out.RawString(prefix)
		out.Float64(float64(in.Qty))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions_Transactions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions_Transactions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions_Transactions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions_Transactions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(in *jlexer.Lexer, out *Transactions_Transactions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Transactions_Transactions_List, 0, 8)
			} else {
				*out = Transactions_Transactions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v16 *Transactions_Transactions_List_Item
			if in.IsNull() {
				in.Skip()
				v16 = nil
			} else {
				if v16 == nil {
					v16 = new(Transactions_Transactions_List_Item)
				}
				(*v16).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v16)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(out *jwriter.Writer, in Transactions_Transactions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v17, v18 := range in {
			if v17 > 0 {
				out.RawByte(',')
			}
			if v18 == nil {
				out.RawString("null")
			} else {
				(*v18).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions_Transactions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions_Transactions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions_Transactions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions_Transactions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(in *jlexer.Lexer, out *Transactions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "currency":
			out.Currency = string(in.String())
		case "from":
			out.From = float64(in.Float64())
		case "id":
			out.Id = string(in.String())
		case "includesRealTime":
			out.IncludesRealTime = bool(in.Bool())
		case "to":
			out.To = float64(in.Float64())
		case "transactions":
			if in.IsNull() {
				in.Skip()
				out.Transactions = nil
			} else {
				in.Delim('[')
				if out.Transactions == nil {
					if !in.IsDelim(']') {
						out.Transactions = make([]*Transactions_Transactions_List_Item, 0, 8)
					} else {
						out.Transactions = []*Transactions_Transactions_List_Item{}
					}
				} else {
					out.Transactions = (out.Transactions)[:0]
				}
				for !in.IsDelim(']') {
					var v19 *Transactions_Transactions_List_Item
					if in.IsNull() {
						in.Skip()
						v19 = nil
					} else {
						if v19 == nil {
							v19 = new(Transactions_Transactions_List_Item)
						}
						(*v19).UnmarshalEasyJSON(in)
					}
					out.Transactions = append(out.Transactions, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(out *jwriter.Writer, in Transactions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix[1:])
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"from\":"
		out.RawString(prefix)
		out.Float64(float64(in.From))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"includesRealTime\":"
		out.RawString(prefix)
		out.Bool(bool(in.IncludesRealTime))
	}
	{
		const prefix string = ",\"to\":"
		out.RawString(prefix)
		out.Float64(float64(in.To))
	}
	{
		const prefix string = ",\"transactions\":"
		out.RawString(prefix)
		if in.Transactions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Transactions {
				if v20 > 0 {
					out.RawByte(',')
				}
				if v21 == nil {
					out.RawString("null")
				} else {
					(*v21).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(in *jlexer.Lexer, out *Trade) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "clearing_id":
			out.Clearing_id = string(in.String())
		case "clearing_name":
			out.Clearing_name = string(in.String())
		case "comission":
			out.Comission = float64(in.Float64())
		case "company_name":
			out.Company_name = string(in.String())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "execution_id":
			out.Execution_id = string(in.String())
		case "net_amount":
			out.Net_amount = float64(in.Float64())
		case "order_description":
			out.Order_description = string(in.String())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "sec_type":
			out.Sec_type = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "submitter":
			out.Submitter = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "trade_time":
			out.Trade_time = string(in.String())
		case "trade_time_r":
			out.Trade_time_r = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(out *jwriter.Writer, in Trade) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"clearing_id\":"
		out.RawString(prefix)
		out.String(string(in.Clearing_id))
	}
	{
		const prefix string = ",\"clearing_name\":"
		out.RawString(prefix)
		out.String(string(in.Clearing_name))
	}
	{
		const prefix string = ",\"comission\":"
		out.RawString(prefix)
		out.Float64(float64(in.Comission))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"execution_id\":"
		out.RawString(prefix)
		out.String(string(in.Execution_id))
	}
	{
		const prefix string = ",\"net_amount\":"
		out.RawString(prefix)
		out.Float64(float64(in.Net_amount))
	}
	{
		const prefix string = ",\"order_description\":"
		out.RawString(prefix)
		out.String(string(in.Order_description))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"sec_type\":"
		out.RawString(prefix)
		out.String(string(in.Sec_type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"submitter\":"
		out.RawString(prefix)
		out.String(string(in.Submitter))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"trade_time\":"
		out.RawString(prefix)
		out.String(string(in.Trade_time))
	}
	{
		const prefix string = ",\"trade_time_r\":"
		out.RawString(prefix)
		out.Float64(float64(in.Trade_time_r))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trade) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trade) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trade) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trade) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(in *jlexer.Lexer, out *Tickle_POST_200_Iserver_AuthStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "MAC":
			out.MAC = string(in.String())
		case "authenticated":
			out.Authenticated = bool(in.Bool())
		case "competing":
			out.Competing = bool(in.Bool())
		case "connected":
			out.Connected = bool(in.Bool())
		case "message":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(out *jwriter.Writer, in Tickle_POST_200_Iserver_AuthStatus) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"MAC\":"
		out.RawString(prefix[1:])
		out.String(string(in.MAC))
	}
	{
		const prefix string = ",\"authenticated\":"
		out.RawString(prefix)
		out.Bool(bool(in.Authenticated))
	}
	{
		const prefix string = ",\"competing\":"
		out.RawString(prefix)
		out.Bool(bool(in.Competing))
	}
	{
		const prefix string = ",\"connected\":"
		out.RawString(prefix)
		out.Bool(bool(in.Connected))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200_Iserver_AuthStatus) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200_Iserver_AuthStatus) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200_Iserver_AuthStatus) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200_Iserver_AuthStatus) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(in *jlexer.Lexer, out *Tickle_POST_200_Iserver) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authStatus":
			if in.IsNull() {
				in.Skip()
				out.AuthStatus = nil
			} else {
				if out.AuthStatus == nil {
					out.AuthStatus = new(Tickle_POST_200_Iserver_AuthStatus)
				}
				(*out.AuthStatus).UnmarshalEasyJSON(in)
			}
		case "tickle":
			out.Tickle = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(out *jwriter.Writer, in Tickle_POST_200_Iserver) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"authStatus\":"
		out.RawString(prefix[1:])
		if in.AuthStatus == nil {
			out.RawString("null")
		} else {
			(*in.AuthStatus).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tickle\":"
		out.RawString(prefix)
		out.Bool(bool(in.Tickle))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200_Iserver) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200_Iserver) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200_Iserver) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200_Iserver) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(in *jlexer.Lexer, out *Tickle_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "collission":
			out.Collission = bool(in.Bool())
		case "iserver":
			if in.IsNull() {
				in.Skip()
				out.Iserver = nil
			} else {
				if out.Iserver == nil {
					out.Iserver = new(Tickle_POST_200_Iserver)
				}
				(*out.Iserver).UnmarshalEasyJSON(in)
			}
		case "session":
			out.Session = string(in.String())
		case "ssoExpires":
			out.SsoExpires = int64(in.Int64())
		case "userId":
			out.UserId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(out *jwriter.Writer, in Tickle_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"collission\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Collission))
	}
	{
		const prefix string = ",\"iserver\":"
		out.RawString(prefix)
		if in.Iserver == nil {
			out.RawString("null")
		} else {
			(*in.Iserver).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"session\":"
		out.RawString(prefix)
		out.String(string(in.Session))
	}
	{
		const prefix string = ",\"ssoExpires\":"
		out.RawString(prefix)
		out.Int64(int64(in.SsoExpires))
	}
	{
		const prefix string = ",\"userId\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(in *jlexer.Lexer, out *SystemError) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(out *jwriter.Writer, in SystemError) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SystemError) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SystemError) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SystemError) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SystemError) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(in *jlexer.Lexer, out *Summary_Total) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chg":
			out.Chg = string(in.String())
		case "endVal":
			out.EndVal = string(in.String())
		case "incompleteData":
			out.IncompleteData = bool(in.Bool())
		case "rtn":
			out.Rtn = string(in.String())
		case "startVal":
			out.StartVal = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(out *jwriter.Writer, in Summary_Total) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Chg))
	}
	{
		const prefix string = ",\"endVal\":"
		out.RawString(prefix)
		out.String(string(in.EndVal))
	}
	{
		const prefix string = ",\"incompleteData\":"
		out.RawString(prefix)
		out.Bool(bool(in.IncompleteData))
	}
	{
		const prefix string = ",\"rtn\":"
		out.RawString(prefix)
		out.String(string(in.Rtn))
	}
	{
		const prefix string = ",\"startVal\":"
		out.RawString(prefix)
		out.String(string(in.StartVal))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_Total) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_Total) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_Total) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_Total) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(in *jlexer.Lexer, out *Summary_ExcludedAccounts_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "acctNumAtFI":
			out.AcctNumAtFI = string(in.String())
		case "acctTitle":
			out.AcctTitle = string(in.String())
		case "fiName":
			out.FiName = string(in.String())
		case "harvestCode":
			out.HarvestCode = int64(in.Int64())
		case "lastUpdate":
			out.LastUpdate = string(in.String())
		case "lastUpdateAttempt":
			out.LastUpdateAttempt = string(in.String())
		case "lastUpdateStatusCode":
			out.LastUpdateStatusCode = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(out *jwriter.Writer, in Summary_ExcludedAccounts_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"acctNumAtFI\":"
		out.RawString(prefix)
		out.String(string(in.AcctNumAtFI))
	}
	{
		const prefix string = ",\"acctTitle\":"
		out.RawString(prefix)
		out.String(string(in.AcctTitle))
	}
	{
		const prefix string = ",\"fiName\":"
		out.RawString(prefix)
		out.String(string(in.FiName))
	}
	{
		const prefix string = ",\"harvestCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.HarvestCode))
	}
	{
		const prefix string = ",\"lastUpdate\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdate))
	}
	{
		const prefix string = ",\"lastUpdateAttempt\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdateAttempt))
	}
	{
		const prefix string = ",\"lastUpdateStatusCode\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdateStatusCode))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_ExcludedAccounts_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_ExcludedAccounts_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(in *jlexer.Lexer, out *Summary_ExcludedAccounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_ExcludedAccounts_List, 0, 8)
			} else {
				*out = Summary_ExcludedAccounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v22 *Summary_ExcludedAccounts_List_Item
			if in.IsNull() {
				in.Skip()
				v22 = nil
			} else {
				if v22 == nil {
					v22 = new(Summary_ExcludedAccounts_List_Item)
				}
				(*v22).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v22)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(out *jwriter.Writer, in Summary_ExcludedAccounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v23, v24 := range in {
			if v23 > 0 {
				out.RawByte(',')
			}
			if v24 == nil {
				out.RawString("null")
			} else {
				(*v24).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_ExcludedAccounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_ExcludedAccounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List_Item_Date_List_Item_List, 0, 8)
			} else {
				*out = Summary_BalanceByDate_Series_List_Item_Date_List_Item_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v25 float64
			v25 = float64(in.Float64())
			*out = append(*out, v25)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v26, v27 := range in {
			if v26 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v27))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item_Date_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List_Item_Date_List, 0, 2)
			} else {
				*out = Summary_BalanceByDate_Series_List_Item_Date_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v28 []float64
			if in.IsNull() {
				in.Skip()
				v28 = nil
			} else {
				in.Delim('[')
				if v28 == nil {
					if !in.IsDelim(']') {
						v28 = make([]float64, 0, 8)
					} else {
						v28 = []float64{}
					}
				} else {
					v28 = (v28)[:0]
				}
				for !in.IsDelim(']') {
					var v29 float64
					v29 = float64(in.Float64())
					v28 = append(v28, v29)
					in.WantComma()
				}
				in.Delim(']')
			}
			*out = append(*out, v28)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item_Date_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v30, v31 := range in {
			if v30 > 0 {
				out.RawByte(',')
			}
			if v31 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
				out.RawString("null")
			} else {
				out.RawByte('[')
				for v32, v33 := range v31 {
					if v32 > 0 {
						out.RawByte(',')
					}
					out.Float64(float64(v33))
				}
				out.RawByte(']')
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "date":
			if in.IsNull() {
				in.Skip()
				out.Date = nil
			} else {
				in.Delim('[')
				if out.Date == nil {
					if !in.IsDelim(']') {
						out.Date = make([][]float64, 0, 2)
					} else {
						out.Date = [][]float64{}
					}
				} else {
					out.Date = (out.Date)[:0]
				}
				for !in.IsDelim(']') {
					var v34 []float64
					if in.IsNull() {
						in.Skip()
						v34 = nil
					} else {
						in.Delim('[')
						if v34 == nil {
							if !in.IsDelim(']') {
								v34 = make([]float64, 0, 8)
							} else {
								v34 = []float64{}
							}
						} else {
							v34 = (v34)[:0]
						}
						for !in.IsDelim(']') {
							var v35 float64
							v35 = float64(in.Float64())
							v34 = append(v34, v35)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Date = append(out.Date, v34)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "groupId":
			out.GroupId = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix[1:])
		if in.Date == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v36, v37 := range in.Date {
				if v36 > 0 {
					out.RawByte(',')
				}
				if v37 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v38, v39 := range v37 {
						if v38 > 0 {
							out.RawByte(',')
						}
						out.Float64(float64(v39))
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"groupId\":"
		out.RawString(prefix)
		out.String(string(in.GroupId))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List, 0, 8)
			} else {
				*out = Summary_BalanceByDate_Series_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v40 *Summary_BalanceByDate_Series_List_Item
			if in.IsNull() {
				in.Skip()
				v40 = nil
			} else {
				if v40 == nil {
					v40 = new(Summary_BalanceByDate_Series_List_Item)
				}
				(*v40).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v40)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(out *jwriter.Writer, in Summary_BalanceByDate_Series_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v41, v42 := range in {
			if v41 > 0 {
				out.RawByte(',')
			}
			if v42 == nil {
				out.RawString("null")
			} else {
				(*v42).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(in *jlexer.Lexer, out *Summary_BalanceByDate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "series":
			if in.IsNull() {
				in.Skip()
				out.Series = nil
			} else {
				in.Delim('[')
				if out.Series == nil {
					if !in.IsDelim(']') {
						out.Series = make([]*Summary_BalanceByDate_Series_List_Item, 0, 8)
					} else {
						out.Series = []*Summary_BalanceByDate_Series_List_Item{}
					}
				} else {
					out.Series = (out.Series)[:0]
				}
				for !in.IsDelim(']') {
					var v43 *Summary_BalanceByDate_Series_List_Item
					if in.IsNull() {
						in.Skip()
						v43 = nil
					} else {
						if v43 == nil {
							v43 = new(Summary_BalanceByDate_Series_List_Item)
						}
						(*v43).UnmarshalEasyJSON(in)
					}
					out.Series = append(out.Series, v43)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(out *jwriter.Writer, in Summary_BalanceByDate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"series\":"
		out.RawString(prefix[1:])
		if in.Series == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.Series {
				if v44 > 0 {
					out.RawByte(',')
				}
				if v45 == nil {
					out.RawString("null")
				} else {
					(*v45).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(in *jlexer.Lexer, out *Summary_AccountSummaries_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountTypeCode":
			out.AccountTypeCode = string(in.String())
		case "accountTypeName":
			out.AccountTypeName = string(in.String())
		case "chg":
			out.Chg = string(in.String())
		case "endVal":
			out.EndVal = string(in.String())
		case "hasAccounts":
			out.HasAccounts = string(in.String())
		case "rtn":
			out.Rtn = string(in.String())
		case "startVal":
			out.StartVal = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(out *jwriter.Writer, in Summary_AccountSummaries_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountTypeCode\":"
		out.RawString(prefix[1:])
		out.String(string(in.AccountTypeCode))
	}
	{
		const prefix string = ",\"accountTypeName\":"
		out.RawString(prefix)
		out.String(string(in.AccountTypeName))
	}
	{
		const prefix string = ",\"chg\":"
		out.RawString(prefix)
		out.String(string(in.Chg))
	}
	{
		const prefix string = ",\"endVal\":"
		out.RawString(prefix)
		out.String(string(in.EndVal))
	}
	{
		const prefix string = ",\"hasAccounts\":"
		out.RawString(prefix)
		out.String(string(in.HasAccounts))
	}
	{
		const prefix string = ",\"rtn\":"
		out.RawString(prefix)
		out.String(string(in.Rtn))
	}
	{
		const prefix string = ",\"startVal\":"
		out.RawString(prefix)
		out.String(string(in.StartVal))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_AccountSummaries_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_AccountSummaries_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_AccountSummaries_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_AccountSummaries_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(in *jlexer.Lexer, out *Summary_AccountSummaries_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_AccountSummaries_List, 0, 8)
			} else {
				*out = Summary_AccountSummaries_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v46 *Summary_AccountSummaries_List_Item
			if in.IsNull() {
				in.Skip()
				v46 = nil
			} else {
				if v46 == nil {
					v46 = new(Summary_AccountSummaries_List_Item)
				}
				(*v46).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v46)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(out *jwriter.Writer, in Summary_AccountSummaries_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v47, v48 := range in {
			if v47 > 0 {
				out.RawByte(',')
			}
			if v48 == nil {
				out.RawString("null")
			} else {
				(*v48).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_AccountSummaries_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_AccountSummaries_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_AccountSummaries_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_AccountSummaries_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(in *jlexer.Lexer, out *Summary) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountSummaries":
			if in.IsNull() {
				in.Skip()
				out.AccountSummaries = nil
			} else {
				in.Delim('[')
				if out.AccountSummaries == nil {
					if !in.IsDelim(']') {
						out.AccountSummaries = make([]*Summary_AccountSummaries_List_Item, 0, 8)
					} else {
						out.AccountSummaries = []*Summary_AccountSummaries_List_Item{}
					}
				} else {
					out.AccountSummaries = (out.AccountSummaries)[:0]
				}
				for !in.IsDelim(']') {
					var v49 *Summary_AccountSummaries_List_Item
					if in.IsNull() {
						in.Skip()
						v49 = nil
					} else {
						if v49 == nil {
							v49 = new(Summary_AccountSummaries_List_Item)
						}
						(*v49).UnmarshalEasyJSON(in)
					}
					out.AccountSummaries = append(out.AccountSummaries, v49)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "balanceByDate":
			if in.IsNull() {
				in.Skip()
				out.BalanceByDate = nil
			} else {
				if out.BalanceByDate == nil {
					out.BalanceByDate = new(Summary_BalanceByDate)
				}
				(*out.BalanceByDate).UnmarshalEasyJSON(in)
			}
		case "currency":
			out.Currency = string(in.String())
		case "endDate":
			out.EndDate = string(in.String())
		case "excludedAccounts":
			if in.IsNull() {
				in.Skip()
				out.ExcludedAccounts = nil
			} else {
				in.Delim('[')
				if out.ExcludedAccounts == nil {
					if !in.IsDelim(']') {
						out.ExcludedAccounts = make([]*Summary_ExcludedAccounts_List_Item, 0, 8)
					} else {
						out.ExcludedAccounts = []*Summary_ExcludedAccounts_List_Item{}
					}
				} else {
					out.ExcludedAccounts = (out.ExcludedAccounts)[:0]
				}
				for !in.IsDelim(']') {
					var v50 *Summary_ExcludedAccounts_List_Item
					if in.IsNull() {
						in.Skip()
						v50 = nil
					} else {
						if v50 == nil {
							v50 = new(Summary_ExcludedAccounts_List_Item)
						}
						(*v50).UnmarshalEasyJSON(in)
					}
					out.ExcludedAccounts = append(out.ExcludedAccounts, v50)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "hasExternalAccounts":
			out.HasExternalAccounts = bool(in.Bool())
		case "lastSuccessfulUpdate":
			out.LastSuccessfulUpdate = string(in.String())
		case "pm":
			out.Pm = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		case "startDate":
			out.StartDate = string(in.String())
		case "total":
			if in.IsNull() {
				in.Skip()
				out.Total = nil
			} else {
				if out.Total == nil {
					out.Total = new(Summary_Total)
				}
				(*out.Total).UnmarshalEasyJSON(in)
			}
		case "userId":
			out.UserId = string(in.String())
		case "view":
			out.View = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(out *jwriter.Writer, in Summary) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountSummaries\":"
		out.RawString(prefix[1:])
		if in.AccountSummaries == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v51, v52 := range in.AccountSummaries {
				if v51 > 0 {
					out.RawByte(',')
				}
				if v52 == nil {
					out.RawString("null")
				} else {
					(*v52).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"balanceByDate\":"
		out.RawString(prefix)
		if in.BalanceByDate == nil {
			out.RawString("null")
		} else {
			(*in.BalanceByDate).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"endDate\":"
		out.RawString(prefix)
		out.String(string(in.EndDate))
	}
	{
		const prefix string = ",\"excludedAccounts\":"
		out.RawString(prefix)
		if in.ExcludedAccounts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v53, v54 := range in.ExcludedAccounts {
				if v53 > 0 {
					out.RawByte(',')
				}
				if v54 == nil {
					out.RawString("null")
				} else {
					(*v54).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"hasExternalAccounts\":"
		out.RawString(prefix)
		out.Bool(bool(in.HasExternalAccounts))
	}
	{
		const prefix string = ",\"lastSuccessfulUpdate\":"
		out.RawString(prefix)
		out.String(string(in.LastSuccessfulUpdate))
	}
	{
		const prefix string = ",\"pm\":"
		out.RawString(prefix)
		out.String(string(in.Pm))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	{
		const prefix string = ",\"startDate\":"
		out.RawString(prefix)
		out.String(string(in.StartDate))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		if in.Total == nil {
			out.RawString("null")
		} else {
			(*in.Total).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"userId\":"
		out.RawString(prefix)
		out.String(string(in.UserId))
	}
	{
		const prefix string = ",\"view\":"
		out.RawString(prefix)
		out.String(string(in.View))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(in *jlexer.Lexer, out *Stocks_List_Item_Contracts_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = int64(in.Int64())
		case "exchange":
			out.Exchange = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(out *jwriter.Writer, in Stocks_List_Item_Contracts_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item_Contracts_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item_Contracts_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(in *jlexer.Lexer, out *Stocks_List_Item_Contracts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Stocks_List_Item_Contracts_List, 0, 8)
			} else {
				*out = Stocks_List_Item_Contracts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v55 *Stocks_List_Item_Contracts_List_Item
			if in.IsNull() {
				in.Skip()
				v55 = nil
			} else {
				if v55 == nil {
					v55 = new(Stocks_List_Item_Contracts_List_Item)
				}
				(*v55).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v55)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(out *jwriter.Writer, in Stocks_List_Item_Contracts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v56, v57 := range in {
			if v56 > 0 {
				out.RawByte(',')
			}
			if v57 == nil {
				out.RawString("null")
			} else {
				(*v57).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item_Contracts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item_Contracts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(in *jlexer.Lexer, out *Stocks_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			out.AssetClass = string(in.String())
		case "chineseName":
			out.ChineseName = string(in.String())
		case "contracts":
			if in.IsNull() {
				in.Skip()
				out.Contracts = nil
			} else {
				in.Delim('[')
				if out.Contracts == nil {
					if !in.IsDelim(']') {
						out.Contracts = make([]*Stocks_List_Item_Contracts_List_Item, 0, 8)
					} else {
						out.Contracts = []*Stocks_List_Item_Contracts_List_Item{}
					}
				} else {
					out.Contracts = (out.Contracts)[:0]
				}
				for !in.IsDelim(']') {
					var v58 *Stocks_List_Item_Contracts_List_Item
					if in.IsNull() {
						in.Skip()
						v58 = nil
					} else {
						if v58 == nil {
							v58 = new(Stocks_List_Item_Contracts_List_Item)
						}
						(*v58).UnmarshalEasyJSON(in)
					}
					out.Contracts = append(out.Contracts, v58)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(out *jwriter.Writer, in Stocks_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"chineseName\":"
		out.RawString(prefix)
		out.String(string(in.ChineseName))
	}
	{
		const prefix string = ",\"contracts\":"
		out.RawString(prefix)
		if in.Contracts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v59, v60 := range in.Contracts {
				if v59 > 0 {
					out.RawByte(',')
				}
				if v60 == nil {
					out.RawString("null")
				} else {
					(*v60).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(in *jlexer.Lexer, out *Stocks_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Stocks_List, 0, 8)
			} else {
				*out = Stocks_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v61 *Stocks_List_Item
			if in.IsNull() {
				in.Skip()
				v61 = nil
			} else {
				if v61 == nil {
					v61 = new(Stocks_List_Item)
				}
				(*v61).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v61)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(out *jwriter.Writer, in Stocks_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v62, v63 := range in {
			if v62 > 0 {
				out.RawByte(',')
			}
			if v63 == nil {
				out.RawString("null")
			} else {
				(*v63).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(in *jlexer.Lexer, out *StatsData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Conid":
			out.Conid = float64(in.Float64())
		case "Exchange":
			out.Exchange = string(in.String())
		case "P":
			out.P = string(in.String())
		case "T":
			out.T = float64(in.Float64())
		case "TT":
			out.TT = float64(in.Float64())
		case "V":
			out.V = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(out *jwriter.Writer, in StatsData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"Exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"P\":"
		out.RawString(prefix)
		out.String(string(in.P))
	}
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix)
		out.Float64(float64(in.T))
	}
	{
		const prefix string = ",\"TT\":"
		out.RawString(prefix)
		out.Float64(float64(in.TT))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Float64(float64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v StatsData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v StatsData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *StatsData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *StatsData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(in *jlexer.Lexer, out *Sso_Validate_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "AUTH_TIME":
			out.AUTH_TIME = int64(in.Int64())
		case "EXPIRES":
			out.EXPIRES = int64(in.Int64())
		case "IP":
			out.IP = string(in.String())
		case "LOGIN_TYPE":
			out.LOGIN_TYPE = int64(in.Int64())
		case "PAPER_USER_NAME":
			out.PAPER_USER_NAME = string(in.String())
		case "RESULT":
			out.RESULT = bool(in.Bool())
		case "SF_ENABLED":
			out.SF_ENABLED = bool(in.Bool())
		case "USER_ID":
			out.USER_ID = int64(in.Int64())
		case "USER_NAME":
			out.USER_NAME = string(in.String())
		case "expire":
			out.Expire = float64(in.Float64())
		case "features":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Features = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v64 interface{}
					if m, ok := v64.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v64.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v64 = in.Interface()
					}
					(out.Features)[key] = v64
					in.WantComma()
				}
				in.Delim('}')
			}
		case "lastAccessed":
			out.LastAccessed = int64(in.Int64())
		case "loginType":
			out.LoginType = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(out *jwriter.Writer, in Sso_Validate_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"AUTH_TIME\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AUTH_TIME))
	}
	{
		const prefix string = ",\"EXPIRES\":"
		out.RawString(prefix)
		out.Int64(int64(in.EXPIRES))
	}
	{
		const prefix string = ",\"IP\":"
		out.RawString(prefix)
		out.String(string(in.IP))
	}
	{
		const prefix string = ",\"LOGIN_TYPE\":"
		out.RawString(prefix)
		out.Int64(int64(in.LOGIN_TYPE))
	}
	{
		const prefix string = ",\"PAPER_USER_NAME\":"
		out.RawString(prefix)
		out.String(string(in.PAPER_USER_NAME))
	}
	{
		const prefix string = ",\"RESULT\":"
		out.RawString(prefix)
		out.Bool(bool(in.RESULT))
	}
	{
		const prefix string = ",\"SF_ENABLED\":"
		out.RawString(prefix)
		out.Bool(bool(in.SF_ENABLED))
	}
	{
		const prefix string = ",\"USER_ID\":"
		out.RawString(prefix)
		out.Int64(int64(in.USER_ID))
	}
	{
		const prefix string = ",\"USER_NAME\":"
		out.RawString(prefix)
		out.String(string(in.USER_NAME))
	}
	{
		const prefix string = ",\"expire\":"
		out.RawString(prefix)
		out.Float64(float64(in.Expire))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v65First := true
			for v65Name, v65Value := range in.Features {
				if v65First {
					v65First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v65Name))
				out.RawByte(':')
				if m, ok := v65Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v65Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v65Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"lastAccessed\":"
		out.RawString(prefix)
		out.Int64(int64(in.LastAccessed))
	}
	{
		const prefix string = ",\"loginType\":"
		out.RawString(prefix)
		out.Int64(int64(in.LoginType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Sso_Validate_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Sso_Validate_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Sso_Validate_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Sso_Validate_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(in *jlexer.Lexer, out *SetAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(out *jwriter.Writer, in SetAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(in *jlexer.Lexer, out *Secdef_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			out.AssetClass = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "expiry":
			out.Expiry = string(in.String())
		case "fullName":
			out.FullName = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "lastTradingDay":
			out.LastTradingDay = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "pageSize":
			out.PageSize = int64(in.Int64())
		case "putOrCall":
			out.PutOrCall = string(in.String())
		case "sector":
			out.Sector = string(in.String())
		case "sectorGroup":
			out.SectorGroup = string(in.String())
		case "strike":
			out.Strike = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "undConid":
			out.UndConid = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(out *jwriter.Writer, in Secdef_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"expiry\":"
		out.RawString(prefix)
		out.String(string(in.Expiry))
	}
	{
		const prefix string = ",\"fullName\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"lastTradingDay\":"
		out.RawString(prefix)
		out.String(string(in.LastTradingDay))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"pageSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.PageSize))
	}
	{
		const prefix string = ",\"putOrCall\":"
		out.RawString(prefix)
		out.String(string(in.PutOrCall))
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		out.String(string(in.Sector))
	}
	{
		const prefix string = ",\"sectorGroup\":"
		out.RawString(prefix)
		out.String(string(in.SectorGroup))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.Float64(float64(in.Strike))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"undConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UndConid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Secdef_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Secdef_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Secdef_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Secdef_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(in *jlexer.Lexer, out *Secdef_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Secdef_List, 0, 8)
			} else {
				*out = Secdef_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v66 *Secdef_List_Item
			if in.IsNull() {
				in.Skip()
				v66 = nil
			} else {
				if v66 == nil {
					v66 = new(Secdef_List_Item)
				}
				(*v66).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v66)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(out *jwriter.Writer, in Secdef_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v67, v68 := range in {
			if v67 > 0 {
				out.RawByte(',')
			}
			if v68 == nil {
				out.RawString("null")
			} else {
				(*v68).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Secdef_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Secdef_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Secdef_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Secdef_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(in *jlexer.Lexer, out *SecdefInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		case "coupon":
			out.Coupon = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "desc1":
			out.Desc1 = string(in.String())
		case "desc2":
			out.Desc2 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "maturityDate":
			out.MaturityDate = string(in.String())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "right":
			out.Right = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "tradingClass":
			out.TradingClass = string(in.String())
		case "validExchanges":
			out.ValidExchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(out *jwriter.Writer, in SecdefInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"coupon\":"
		out.RawString(prefix)
		out.String(string(in.Coupon))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"desc1\":"
		out.RawString(prefix)
		out.String(string(in.Desc1))
	}
	{
		const prefix string = ",\"desc2\":"
		out.RawString(prefix)
		out.String(string(in.Desc2))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"maturityDate\":"
		out.RawString(prefix)
		out.String(string(in.MaturityDate))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"tradingClass\":"
		out.RawString(prefix)
		out.String(string(in.TradingClass))
	}
	{
		const prefix string = ",\"validExchanges\":"
		out.RawString(prefix)
		out.String(string(in.ValidExchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecdefInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecdefInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecdefInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecdefInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(in *jlexer.Lexer, out *ScannerResult_Contracts_Contract_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "contractID":
			out.ContractID = int64(in.Int64())
		case "distance":
			out.Distance = int64(in.Int64())
		case "inScanTime":
			out.InScanTime = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(out *jwriter.Writer, in ScannerResult_Contracts_Contract_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"contractID\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ContractID))
	}
	{
		const prefix string = ",\"distance\":"
		out.RawString(prefix)
		out.Int64(int64(in.Distance))
	}
	{
		const prefix string = ",\"inScanTime\":"
		out.RawString(prefix)
		out.String(string(in.InScanTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts_Contract_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts_Contract_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(in *jlexer.Lexer, out *ScannerResult_Contracts_Contract_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerResult_Contracts_Contract_List, 0, 8)
			} else {
				*out = ScannerResult_Contracts_Contract_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v69 *ScannerResult_Contracts_Contract_List_Item
			if in.IsNull() {
				in.Skip()
				v69 = nil
			} else {
				if v69 == nil {
					v69 = new(ScannerResult_Contracts_Contract_List_Item)
				}
				(*v69).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v69)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(out *jwriter.Writer, in ScannerResult_Contracts_Contract_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v70, v71 := range in {
			if v70 > 0 {
				out.RawByte(',')
			}
			if v71 == nil {
				out.RawString("null")
			} else {
				(*v71).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts_Contract_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts_Contract_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(in *jlexer.Lexer, out *ScannerResult_Contracts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Contract":
			if in.IsNull() {
				in.Skip()
				out.Contract = nil
			} else {
				in.Delim('[')
				if out.Contract == nil {
					if !in.IsDelim(']') {
						out.Contract = make([]*ScannerResult_Contracts_Contract_List_Item, 0, 8)
					} else {
						out.Contract = []*ScannerResult_Contracts_Contract_List_Item{}
					}
				} else {
					out.Contract = (out.Contract)[:0]
				}
				for !in.IsDelim(']') {
					var v72 *ScannerResult_Contracts_Contract_List_Item
					if in.IsNull() {
						in.Skip()
						v72 = nil
					} else {
						if v72 == nil {
							v72 = new(ScannerResult_Contracts_Contract_List_Item)
						}
						(*v72).UnmarshalEasyJSON(in)
					}
					out.Contract = append(out.Contract, v72)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(out *jwriter.Writer, in ScannerResult_Contracts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Contract\":"
		out.RawString(prefix[1:])
		if in.Contract == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v73, v74 := range in.Contract {
				if v73 > 0 {
					out.RawByte(',')
				}
				if v74 == nil {
					out.RawString("null")
				} else {
					(*v74).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(in *jlexer.Lexer, out *ScannerResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Contracts":
			if in.IsNull() {
				in.Skip()
				out.Contracts = nil
			} else {
				if out.Contracts == nil {
					out.Contracts = new(ScannerResult_Contracts)
				}
				(*out.Contracts).UnmarshalEasyJSON(in)
			}
		case "id":
			out.Id = float64(in.Float64())
		case "offset":
			out.Offset = int64(in.Int64())
		case "position":
			out.Position = string(in.String())
		case "scanTime":
			out.ScanTime = string(in.String())
		case "size":
			out.Size = int64(in.Int64())
		case "total":
			out.Total = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(out *jwriter.Writer, in ScannerResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Contracts\":"
		out.RawString(prefix[1:])
		if in.Contracts == nil {
			out.RawString("null")
		} else {
			(*in.Contracts).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Id))
	}
	{
		const prefix string = ",\"offset\":"
		out.RawString(prefix)
		out.Int64(int64(in.Offset))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"scanTime\":"
		out.RawString(prefix)
		out.String(string(in.ScanTime))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int64(int64(in.Size))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		out.Int64(int64(in.Total))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(in *jlexer.Lexer, out *ScannerParams_ScanTypeList_ScanType_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "displayName":
			out.DisplayName = string(in.String())
		case "instruments":
			out.Instruments = string(in.String())
		case "scanCode":
			out.ScanCode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(out *jwriter.Writer, in ScannerParams_ScanTypeList_ScanType_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix[1:])
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		out.String(string(in.Instruments))
	}
	{
		const prefix string = ",\"scanCode\":"
		out.RawString(prefix)
		out.String(string(in.ScanCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(in *jlexer.Lexer, out *ScannerParams_ScanTypeList_ScanType_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_ScanTypeList_ScanType_List, 0, 8)
			} else {
				*out = ScannerParams_ScanTypeList_ScanType_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v75 *ScannerParams_ScanTypeList_ScanType_List_Item
			if in.IsNull() {
				in.Skip()
				v75 = nil
			} else {
				if v75 == nil {
					v75 = new(ScannerParams_ScanTypeList_ScanType_List_Item)
				}
				(*v75).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v75)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(out *jwriter.Writer, in ScannerParams_ScanTypeList_ScanType_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v76, v77 := range in {
			if v76 > 0 {
				out.RawByte(',')
			}
			if v77 == nil {
				out.RawString("null")
			} else {
				(*v77).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(in *jlexer.Lexer, out *ScannerParams_ScanTypeList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ScanType":
			if in.IsNull() {
				in.Skip()
				out.ScanType = nil
			} else {
				in.Delim('[')
				if out.ScanType == nil {
					if !in.IsDelim(']') {
						out.ScanType = make([]*ScannerParams_ScanTypeList_ScanType_List_Item, 0, 8)
					} else {
						out.ScanType = []*ScannerParams_ScanTypeList_ScanType_List_Item{}
					}
				} else {
					out.ScanType = (out.ScanType)[:0]
				}
				for !in.IsDelim(']') {
					var v78 *ScannerParams_ScanTypeList_ScanType_List_Item
					if in.IsNull() {
						in.Skip()
						v78 = nil
					} else {
						if v78 == nil {
							v78 = new(ScannerParams_ScanTypeList_ScanType_List_Item)
						}
						(*v78).UnmarshalEasyJSON(in)
					}
					out.ScanType = append(out.ScanType, v78)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(out *jwriter.Writer, in ScannerParams_ScanTypeList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ScanType\":"
		out.RawString(prefix[1:])
		if in.ScanType == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v79, v80 := range in.ScanType {
				if v79 > 0 {
					out.RawByte(',')
				}
				if v80 == nil {
					out.RawString("null")
				} else {
					(*v80).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(in *jlexer.Lexer, out *ScannerParams_LocationTree_Location_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "displayName":
			out.DisplayName = string(in.String())
		case "instruments":
			out.Instruments = string(in.String())
		case "locationCode":
			out.LocationCode = string(in.String())
		case "routeExchange":
			out.RouteExchange = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(out *jwriter.Writer, in ScannerParams_LocationTree_Location_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix[1:])
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		out.String(string(in.Instruments))
	}
	{
		const prefix string = ",\"locationCode\":"
		out.RawString(prefix)
		out.String(string(in.LocationCode))
	}
	{
		const prefix string = ",\"routeExchange\":"
		out.RawString(prefix)
		out.String(string(in.RouteExchange))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree_Location_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree_Location_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(in *jlexer.Lexer, out *ScannerParams_LocationTree_Location_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_LocationTree_Location_List, 0, 8)
			} else {
				*out = ScannerParams_LocationTree_Location_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v81 *ScannerParams_LocationTree_Location_List_Item
			if in.IsNull() {
				in.Skip()
				v81 = nil
			} else {
				if v81 == nil {
					v81 = new(ScannerParams_LocationTree_Location_List_Item)
				}
				(*v81).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v81)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(out *jwriter.Writer, in ScannerParams_LocationTree_Location_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v82, v83 := range in {
			if v82 > 0 {
				out.RawByte(',')
			}
			if v83 == nil {
				out.RawString("null")
			} else {
				(*v83).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree_Location_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree_Location_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(in *jlexer.Lexer, out *ScannerParams_LocationTree) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Location":
			if in.IsNull() {
				in.Skip()
				out.Location = nil
			} else {
				in.Delim('[')
				if out.Location == nil {
					if !in.IsDelim(']') {
						out.Location = make([]*ScannerParams_LocationTree_Location_List_Item, 0, 8)
					} else {
						out.Location = []*ScannerParams_LocationTree_Location_List_Item{}
					}
				} else {
					out.Location = (out.Location)[:0]
				}
				for !in.IsDelim(']') {
					var v84 *ScannerParams_LocationTree_Location_List_Item
					if in.IsNull() {
						in.Skip()
						v84 = nil
					} else {
						if v84 == nil {
							v84 = new(ScannerParams_LocationTree_Location_List_Item)
						}
						(*v84).UnmarshalEasyJSON(in)
					}
					out.Location = append(out.Location, v84)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(out *jwriter.Writer, in ScannerParams_LocationTree) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Location\":"
		out.RawString(prefix[1:])
		if in.Location == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v85, v86 := range in.Location {
				if v85 > 0 {
					out.RawByte(',')
				}
				if v86 == nil {
					out.RawString("null")
				} else {
					(*v86).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(in *jlexer.Lexer, out *ScannerParams_InstrumentList_Instrument_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filters":
			out.Filters = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "shortName":
			out.ShortName = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(out *jwriter.Writer, in ScannerParams_InstrumentList_Instrument_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix[1:])
		out.String(string(in.Filters))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"shortName\":"
		out.RawString(prefix)
		out.String(string(in.ShortName))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(in *jlexer.Lexer, out *ScannerParams_InstrumentList_Instrument_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_InstrumentList_Instrument_List, 0, 8)
			} else {
				*out = ScannerParams_InstrumentList_Instrument_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v87 *ScannerParams_InstrumentList_Instrument_List_Item
			if in.IsNull() {
				in.Skip()
				v87 = nil
			} else {
				if v87 == nil {
					v87 = new(ScannerParams_InstrumentList_Instrument_List_Item)
				}
				(*v87).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v87)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(out *jwriter.Writer, in ScannerParams_InstrumentList_Instrument_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v88, v89 := range in {
			if v88 > 0 {
				out.RawByte(',')
			}
			if v89 == nil {
				out.RawString("null")
			} else {
				(*v89).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(in *jlexer.Lexer, out *ScannerParams_InstrumentList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Instrument":
			if in.IsNull() {
				in.Skip()
				out.Instrument = nil
			} else {
				in.Delim('[')
				if out.Instrument == nil {
					if !in.IsDelim(']') {
						out.Instrument = make([]*ScannerParams_InstrumentList_Instrument_List_Item, 0, 8)
					} else {
						out.Instrument = []*ScannerParams_InstrumentList_Instrument_List_Item{}
					}
				} else {
					out.Instrument = (out.Instrument)[:0]
				}
				for !in.IsDelim(']') {
					var v90 *ScannerParams_InstrumentList_Instrument_List_Item
					if in.IsNull() {
						in.Skip()
						v90 = nil
					} else {
						if v90 == nil {
							v90 = new(ScannerParams_InstrumentList_Instrument_List_Item)
						}
						(*v90).UnmarshalEasyJSON(in)
					}
					out.Instrument = append(out.Instrument, v90)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(out *jwriter.Writer, in ScannerParams_InstrumentList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Instrument\":"
		out.RawString(prefix[1:])
		if in.Instrument == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v91, v92 := range in.Instrument {
				if v91 > 0 {
					out.RawByte(',')
				}
				if v92 == nil {
					out.RawString("null")
				} else {
					(*v92).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(in *jlexer.Lexer, out *ScannerParams_FilterList_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_FilterList_List, 0, 8)
			} else {
				*out = ScannerParams_FilterList_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v93 map[string]interface{}
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				v93 = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v94 interface{}
					if m, ok := v94.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v94.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v94 = in.Interface()
					}
					(v93)[key] = v94
					in.WantComma()
				}
				in.Delim('}')
			}
			*out = append(*out, v93)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(out *jwriter.Writer, in ScannerParams_FilterList_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v95, v96 := range in {
			if v95 > 0 {
				out.RawByte(',')
			}
			if v96 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
				out.RawString(`null`)
			} else {
				out.RawByte('{')
				v97First := true
				for v97Name, v97Value := range v96 {
					if v97First {
						v97First = false
					} else {
						out.RawByte(',')
					}
					out.String(string(v97Name))
					out.RawByte(':')
					if m, ok := v97Value.(easyjson.Marshaler); ok {
						m.MarshalEasyJSON(out)
					} else if m, ok := v97Value.(json.Marshaler); ok {
						out.Raw(m.MarshalJSON())
					} else {
						out.Raw(json.Marshal(v97Value))
					}
				}
				out.RawByte('}')
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_FilterList_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_FilterList_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_FilterList_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_FilterList_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(in *jlexer.Lexer, out *ScannerParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "FilterList":
			if in.IsNull() {
				in.Skip()
				out.FilterList = nil
			} else {
				in.Delim('[')
				if out.FilterList == nil {
					if !in.IsDelim(']') {
						out.FilterList = make([]map[string]interface{}, 0, 8)
					} else {
						out.FilterList = []map[string]interface{}{}
					}
				} else {
					out.FilterList = (out.FilterList)[:0]
				}
				for !in.IsDelim(']') {
					var v98 map[string]interface{}
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('{')
						v98 = make(map[string]interface{})
						for !in.IsDelim('}') {
							key := string(in.String())
							in.WantColon()
							var v99 interface{}
							if m, ok := v99.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v99.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v99 = in.Interface()
							}
							(v98)[key] = v99
							in.WantComma()
						}
						in.Delim('}')
					}
					out.FilterList = append(out.FilterList, v98)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "InstrumentList":
			if in.IsNull() {
				in.Skip()
				out.InstrumentList = nil
			} else {
				if out.InstrumentList == nil {
					out.InstrumentList = new(ScannerParams_InstrumentList)
				}
				(*out.InstrumentList).UnmarshalEasyJSON(in)
			}
		case "LocationTree":
			if in.IsNull() {
				in.Skip()
				out.LocationTree = nil
			} else {
				if out.LocationTree == nil {
					out.LocationTree = new(ScannerParams_LocationTree)
				}
				(*out.LocationTree).UnmarshalEasyJSON(in)
			}
		case "ScanTypeList":
			if in.IsNull() {
				in.Skip()
				out.ScanTypeList = nil
			} else {
				if out.ScanTypeList == nil {
					out.ScanTypeList = new(ScannerParams_ScanTypeList)
				}
				(*out.ScanTypeList).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(out *jwriter.Writer, in ScannerParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"FilterList\":"
		out.RawString(prefix[1:])
		if in.FilterList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v100, v101 := range in.FilterList {
				if v100 > 0 {
					out.RawByte(',')
				}
				if v101 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
					out.RawString(`null`)
				} else {
					out.RawByte('{')
					v102First := true
					for v102Name, v102Value := range v101 {
						if v102First {
							v102First = false
						} else {
							out.RawByte(',')
						}
						out.String(string(v102Name))
						out.RawByte(':')
						if m, ok := v102Value.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v102Value.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v102Value))
						}
					}
					out.RawByte('}')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"InstrumentList\":"
		out.RawString(prefix)
		if in.InstrumentList == nil {
			out.RawString("null")
		} else {
			(*in.InstrumentList).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"LocationTree\":"
		out.RawString(prefix)
		if in.LocationTree == nil {
			out.RawString("null")
		} else {
			(*in.LocationTree).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"ScanTypeList\":"
		out.RawString(prefix)
		if in.ScanTypeList == nil {
			out.RawString("null")
		} else {
			(*in.ScanTypeList).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(in *jlexer.Lexer, out *Position_List_Item_ConExchMap_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Position_List_Item_ConExchMap_List, 0, 4)
			} else {
				*out = Position_List_Item_ConExchMap_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v103 string
			v103 = string(in.String())
			*out = append(*out, v103)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(out *jwriter.Writer, in Position_List_Item_ConExchMap_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v104, v105 := range in {
			if v104 > 0 {
				out.RawByte(',')
			}
			out.String(string(v105))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List_Item_ConExchMap_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List_Item_ConExchMap_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List_Item_ConExchMap_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List_Item_ConExchMap_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(in *jlexer.Lexer, out *Position_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "assetClass":
			out.AssetClass = string(in.String())
		case "avgCost":
			out.AvgCost = float64(in.Float64())
		case "avgPrice":
			out.AvgPrice = float64(in.Float64())
		case "baseAvgCost":
			out.BaseAvgCost = float64(in.Float64())
		case "baseAvgPrice":
			out.BaseAvgPrice = float64(in.Float64())
		case "baseMktPrice":
			out.BaseMktPrice = float64(in.Float64())
		case "baseMktValue":
			out.BaseMktValue = float64(in.Float64())
		case "baseRealizedPnl":
			out.BaseRealizedPnl = float64(in.Float64())
		case "baseUnrealizedPnl":
			out.BaseUnrealizedPnl = float64(in.Float64())
		case "conExchMap":
			if in.IsNull() {
				in.Skip()
				out.ConExchMap = nil
			} else {
				in.Delim('[')
				if out.ConExchMap == nil {
					if !in.IsDelim(']') {
						out.ConExchMap = make([]string, 0, 4)
					} else {
						out.ConExchMap = []string{}
					}
				} else {
					out.ConExchMap = (out.ConExchMap)[:0]
				}
				for !in.IsDelim(']') {
					var v106 string
					v106 = string(in.String())
					out.ConExchMap = append(out.ConExchMap, v106)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "conid":
			out.Conid = int64(in.Int64())
		case "contractDesc":
			out.ContractDesc = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "exchs":
			out.Exchs = string(in.String())
		case "exerciseStyle":
			out.ExerciseStyle = string(in.String())
		case "expiry":
			out.Expiry = string(in.String())
		case "fullName":
			out.FullName = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "lastTradingDay":
			out.LastTradingDay = string(in.String())
		case "mktPrice":
			out.MktPrice = float64(in.Float64())
		case "mktValue":
			out.MktValue = float64(in.Float64())
		case "model":
			out.Model = string(in.String())
		case "multiplier":
			out.Multiplier = float64(in.Float64())
		case "name":
			out.Name = string(in.String())
		case "pageSize":
			out.PageSize = int64(in.Int64())
		case "position":
			out.Position = float64(in.Float64())
		case "putOrCall":
			out.PutOrCall = string(in.String())
		case "realizedPnl":
			out.RealizedPnl = float64(in.Float64())
		case "sector":
			out.Sector = string(in.String())
		case "sectorGroup":
			out.SectorGroup = string(in.String())
		case "strike":
			out.Strike = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "undComp":
			out.UndComp = string(in.String())
		case "undConid":
			out.UndConid = int64(in.Int64())
		case "undSym":
			out.UndSym = string(in.String())
		case "unrealizedPnl":
			out.UnrealizedPnl = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(out *jwriter.Writer, in Position_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix)
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"avgCost\":"
		out.RawString(prefix)
		out.Float64(float64(in.AvgCost))
	}
	{
		const prefix string = ",\"avgPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.AvgPrice))
	}
	{
		const prefix string = ",\"baseAvgCost\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseAvgCost))
	}
	{
		const prefix string = ",\"baseAvgPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseAvgPrice))
	}
	{
		const prefix string = ",\"baseMktPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseMktPrice))
	}
	{
		const prefix string = ",\"baseMktValue\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseMktValue))
	}
	{
		const prefix string = ",\"baseRealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseRealizedPnl))
	}
	{
		const prefix string = ",\"baseUnrealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseUnrealizedPnl))
	}
	{
		const prefix string = ",\"conExchMap\":"
		out.RawString(prefix)
		if in.ConExchMap == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v107, v108 := range in.ConExchMap {
				if v107 > 0 {
					out.RawByte(',')
				}
				out.String(string(v108))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"contractDesc\":"
		out.RawString(prefix)
		out.String(string(in.ContractDesc))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"exchs\":"
		out.RawString(prefix)
		out.String(string(in.Exchs))
	}
	{
		const prefix string = ",\"exerciseStyle\":"
		out.RawString(prefix)
		out.String(string(in.ExerciseStyle))
	}
	{
		const prefix string = ",\"expiry\":"
		out.RawString(prefix)
		out.String(string(in.Expiry))
	}
	{
		const prefix string = ",\"fullName\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"lastTradingDay\":"
		out.RawString(prefix)
		out.String(string(in.LastTradingDay))
	}
	{
		const prefix string = ",\"mktPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.MktPrice))
	}
	{
		const prefix string = ",\"mktValue\":"
		out.RawString(prefix)
		out.Float64(float64(in.MktValue))
	}
	{
		const prefix string = ",\"model\":"
		out.RawString(prefix)
		out.String(string(in.Model))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.Float64(float64(in.Multiplier))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"pageSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.PageSize))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Float64(float64(in.Position))
	}
	{
		const prefix string = ",\"putOrCall\":"
		out.RawString(prefix)
		out.String(string(in.PutOrCall))
	}
	{
		const prefix string = ",\"realizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		out.String(string(in.Sector))
	}
	{
		const prefix string = ",\"sectorGroup\":"
		out.RawString(prefix)
		out.String(string(in.SectorGroup))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.Float64(float64(in.Strike))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"undComp\":"
		out.RawString(prefix)
		out.String(string(in.UndComp))
	}
	{
		const prefix string = ",\"undConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UndConid))
	}
	{
		const prefix string = ",\"undSym\":"
		out.RawString(prefix)
		out.String(string(in.UndSym))
	}
	{
		const prefix string = ",\"unrealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.UnrealizedPnl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(in *jlexer.Lexer, out *Position_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Position_List, 0, 8)
			} else {
				*out = Position_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v109 *Position_List_Item
			if in.IsNull() {
				in.Skip()
				v109 = nil
			} else {
				if v109 == nil {
					v109 = new(Position_List_Item)
				}
				(*v109).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v109)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(out *jwriter.Writer, in Position_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v110, v111 := range in {
			if v110 > 0 {
				out.RawByte(',')
			}
			if v111 == nil {
				out.RawString("null")
			} else {
				(*v111).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(in *jlexer.Lexer, out *Portfolio_Allocation_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Portfolio_Allocation_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Portfolio_Allocation_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v112 string
			v112 = string(in.String())
			*out = append(*out, v112)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(out *jwriter.Writer, in Portfolio_Allocation_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v113, v114 := range in {
			if v113 > 0 {
				out.RawByte(',')
			}
			out.String(string(v114))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_Allocation_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_Allocation_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(in *jlexer.Lexer, out *Portfolio_Allocation_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			if in.IsNull() {
				in.Skip()
				out.AcctIds = nil
			} else {
				in.Delim('[')
				if out.AcctIds == nil {
					if !in.IsDelim(']') {
						out.AcctIds = make([]string, 0, 4)
					} else {
						out.AcctIds = []string{}
					}
				} else {
					out.AcctIds = (out.AcctIds)[:0]
				}
				for !in.IsDelim(']') {
					var v115 string
					v115 = string(in.String())
					out.AcctIds = append(out.AcctIds, v115)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(out *jwriter.Writer, in Portfolio_Allocation_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		if in.AcctIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v116, v117 := range in.AcctIds {
				if v116 > 0 {
					out.RawByte(',')
				}
				out.String(string(v117))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_Allocation_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_Allocation_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(in *jlexer.Lexer, out *Performance_Tpps_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Dates_List, 0, 4)
			} else {
				*out = Performance_Tpps_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v118 string
			v118 = string(in.String())
			*out = append(*out, v118)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(out *jwriter.Writer, in Performance_Tpps_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v119, v120 := range in {
			if v119 > 0 {
				out.RawByte(',')
			}
			out.String(string(v120))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(in *jlexer.Lexer, out *Performance_Tpps_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Tpps_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v121 float64
			v121 = float64(in.Float64())
			*out = append(*out, v121)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(out *jwriter.Writer, in Performance_Tpps_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v122, v123 := range in {
			if v122 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v123))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(in *jlexer.Lexer, out *Performance_Tpps_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			if in.IsNull() {
				in.Skip()
				out.Returns = nil
			} else {
				in.Delim('[')
				if out.Returns == nil {
					if !in.IsDelim(']') {
						out.Returns = make([]float64, 0, 8)
					} else {
						out.Returns = []float64{}
					}
				} else {
					out.Returns = (out.Returns)[:0]
				}
				for !in.IsDelim(']') {
					var v124 float64
					v124 = float64(in.Float64())
					out.Returns = append(out.Returns, v124)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(out *jwriter.Writer, in Performance_Tpps_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		if in.Returns == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v125, v126 := range in.Returns {
				if v125 > 0 {
					out.RawByte(',')
				}
				out.Float64(float64(v126))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(in *jlexer.Lexer, out *Performance_Tpps_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Data_List, 0, 8)
			} else {
				*out = Performance_Tpps_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v127 *Performance_Tpps_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v127 = nil
			} else {
				if v127 == nil {
					v127 = new(Performance_Tpps_Data_List_Item)
				}
				(*v127).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v127)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(out *jwriter.Writer, in Performance_Tpps_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v128, v129 := range in {
			if v128 > 0 {
				out.RawByte(',')
			}
			if v129 == nil {
				out.RawString("null")
			} else {
				(*v129).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(in *jlexer.Lexer, out *Performance_Tpps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Performance_Tpps_Data_List_Item, 0, 8)
					} else {
						out.Data = []*Performance_Tpps_Data_List_Item{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v130 *Performance_Tpps_Data_List_Item
					if in.IsNull() {
						in.Skip()
						v130 = nil
					} else {
						if v130 == nil {
							v130 = new(Performance_Tpps_Data_List_Item)
						}
						(*v130).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v130)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "dates":
			if in.IsNull() {
				in.Skip()
				out.Dates = nil
			} else {
				in.Delim('[')
				if out.Dates == nil {
					if !in.IsDelim(']') {
						out.Dates = make([]string, 0, 4)
					} else {
						out.Dates = []string{}
					}
				} else {
					out.Dates = (out.Dates)[:0]
				}
				for !in.IsDelim(']') {
					var v131 string
					v131 = string(in.String())
					out.Dates = append(out.Dates, v131)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(out *jwriter.Writer, in Performance_Tpps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v132, v133 := range in.Data {
				if v132 > 0 {
					out.RawByte(',')
				}
				if v133 == nil {
					out.RawString("null")
				} else {
					(*v133).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		if in.Dates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v134, v135 := range in.Dates {
				if v134 > 0 {
					out.RawByte(',')
				}
				out.String(string(v135))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(in *jlexer.Lexer, out *Performance_Nav_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Dates_List, 0, 4)
			} else {
				*out = Performance_Nav_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v136 string
			v136 = string(in.String())
			*out = append(*out, v136)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(out *jwriter.Writer, in Performance_Nav_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v137, v138 := range in {
			if v137 > 0 {
				out.RawByte(',')
			}
			out.String(string(v138))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(in *jlexer.Lexer, out *Performance_Nav_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Nav_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v139 float64
			v139 = float64(in.Float64())
			*out = append(*out, v139)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(out *jwriter.Writer, in Performance_Nav_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v140, v141 := range in {
			if v140 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v141))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(in *jlexer.Lexer, out *Performance_Nav_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			if in.IsNull() {
				in.Skip()
				out.Returns = nil
			} else {
				in.Delim('[')
				if out.Returns == nil {
					if !in.IsDelim(']') {
						out.Returns = make([]float64, 0, 8)
					} else {
						out.Returns = []float64{}
					}
				} else {
					out.Returns = (out.Returns)[:0]
				}
				for !in.IsDelim(']') {
					var v142 float64
					v142 = float64(in.Float64())
					out.Returns = append(out.Returns, v142)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(out *jwriter.Writer, in Performance_Nav_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		if in.Returns == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v143, v144 := range in.Returns {
				if v143 > 0 {
					out.RawByte(',')
				}
				out.Float64(float64(v144))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(in *jlexer.Lexer, out *Performance_Nav_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Data_List, 0, 8)
			} else {
				*out = Performance_Nav_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v145 *Performance_Nav_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v145 = nil
			} else {
				if v145 == nil {
					v145 = new(Performance_Nav_Data_List_Item)
				}
				(*v145).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v145)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(out *jwriter.Writer, in Performance_Nav_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v146, v147 := range in {
			if v146 > 0 {
				out.RawByte(',')
			}
			if v147 == nil {
				out.RawString("null")
			} else {
				(*v147).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(in *jlexer.Lexer, out *Performance_Nav) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Performance_Nav_Data_List_Item, 0, 8)
					} else {
						out.Data = []*Performance_Nav_Data_List_Item{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v148 *Performance_Nav_Data_List_Item
					if in.IsNull() {
						in.Skip()
						v148 = nil
					} else {
						if v148 == nil {
							v148 = new(Performance_Nav_Data_List_Item)
						}
						(*v148).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v148)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "dates":
			if in.IsNull() {
				in.Skip()
				out.Dates = nil
			} else {
				in.Delim('[')
				if out.Dates == nil {
					if !in.IsDelim(']') {
						out.Dates = make([]string, 0, 4)
					} else {
						out.Dates = []string{}
					}
				} else {
					out.Dates = (out.Dates)[:0]
				}
				for !in.IsDelim(']') {
					var v149 string
					v149 = string(in.String())
					out.Dates = append(out.Dates, v149)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(out *jwriter.Writer, in Performance_Nav) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v150, v151 := range in.Data {
				if v150 > 0 {
					out.RawByte(',')
				}
				if v151 == nil {
					out.RawString("null")
				} else {
					(*v151).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		if in.Dates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v152, v153 := range in.Dates {
				if v152 > 0 {
					out.RawByte(',')
				}
				out.String(string(v153))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(in *jlexer.Lexer, out *Performance_Included_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Included_List, 0, 4)
			} else {
				*out = Performance_Included_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v154 string
			v154 = string(in.String())
			*out = append(*out, v154)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(out *jwriter.Writer, in Performance_Included_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v155, v156 := range in {
			if v155 > 0 {
				out.RawByte(',')
			}
			out.String(string(v156))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Included_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Included_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Included_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Included_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(in *jlexer.Lexer, out *Performance_Cps_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Dates_List, 0, 4)
			} else {
				*out = Performance_Cps_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v157 string
			v157 = string(in.String())
			*out = append(*out, v157)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(out *jwriter.Writer, in Performance_Cps_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v158, v159 := range in {
			if v158 > 0 {
				out.RawByte(',')
			}
			out.String(string(v159))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(in *jlexer.Lexer, out *Performance_Cps_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Cps_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v160 float64
			v160 = float64(in.Float64())
			*out = append(*out, v160)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(out *jwriter.Writer, in Performance_Cps_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v161, v162 := range in {
			if v161 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v162))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(in *jlexer.Lexer, out *Performance_Cps_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			if in.IsNull() {
				in.Skip()
				out.Returns = nil
			} else {
				in.Delim('[')
				if out.Returns == nil {
					if !in.IsDelim(']') {
						out.Returns = make([]float64, 0, 8)
					} else {
						out.Returns = []float64{}
					}
				} else {
					out.Returns = (out.Returns)[:0]
				}
				for !in.IsDelim(']') {
					var v163 float64
					v163 = float64(in.Float64())
					out.Returns = append(out.Returns, v163)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(out *jwriter.Writer, in Performance_Cps_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		if in.Returns == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v164, v165 := range in.Returns {
				if v164 > 0 {
					out.RawByte(',')
				}
				out.Float64(float64(v165))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(in *jlexer.Lexer, out *Performance_Cps_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Data_List, 0, 8)
			} else {
				*out = Performance_Cps_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v166 *Performance_Cps_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v166 = nil
			} else {
				if v166 == nil {
					v166 = new(Performance_Cps_Data_List_Item)
				}
				(*v166).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v166)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(out *jwriter.Writer, in Performance_Cps_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v167, v168 := range in {
			if v167 > 0 {
				out.RawByte(',')
			}
			if v168 == nil {
				out.RawString("null")
			} else {
				(*v168).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(in *jlexer.Lexer, out *Performance_Cps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Performance_Cps_Data_List_Item, 0, 8)
					} else {
						out.Data = []*Performance_Cps_Data_List_Item{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v169 *Performance_Cps_Data_List_Item
					if in.IsNull() {
						in.Skip()
						v169 = nil
					} else {
						if v169 == nil {
							v169 = new(Performance_Cps_Data_List_Item)
						}
						(*v169).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v169)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "dates":
			if in.IsNull() {
				in.Skip()
				out.Dates = nil
			} else {
				in.Delim('[')
				if out.Dates == nil {
					if !in.IsDelim(']') {
						out.Dates = make([]string, 0, 4)
					} else {
						out.Dates = []string{}
					}
				} else {
					out.Dates = (out.Dates)[:0]
				}
				for !in.IsDelim(']') {
					var v170 string
					v170 = string(in.String())
					out.Dates = append(out.Dates, v170)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(out *jwriter.Writer, in Performance_Cps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v171, v172 := range in.Data {
				if v171 > 0 {
					out.RawByte(',')
				}
				if v172 == nil {
					out.RawString("null")
				} else {
					(*v172).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		if in.Dates == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v173, v174 := range in.Dates {
				if v173 > 0 {
					out.RawByte(',')
				}
				out.String(string(v174))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(in *jlexer.Lexer, out *Performance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cps":
			if in.IsNull() {
				in.Skip()
				out.Cps = nil
			} else {
				if out.Cps == nil {
					out.Cps = new(Performance_Cps)
				}
				(*out.Cps).UnmarshalEasyJSON(in)
			}
		case "currencyType":
			out.CurrencyType = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "included":
			if in.IsNull() {
				in.Skip()
				out.Included = nil
			} else {
				in.Delim('[')
				if out.Included == nil {
					if !in.IsDelim(']') {
						out.Included = make([]string, 0, 4)
					} else {
						out.Included = []string{}
					}
				} else {
					out.Included = (out.Included)[:0]
				}
				for !in.IsDelim(']') {
					var v175 string
					v175 = string(in.String())
					out.Included = append(out.Included, v175)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "nav":
			if in.IsNull() {
				in.Skip()
				out.Nav = nil
			} else {
				if out.Nav == nil {
					out.Nav = new(Performance_Nav)
				}
				(*out.Nav).UnmarshalEasyJSON(in)
			}
		case "pm":
			out.Pm = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		case "tpps":
			if in.IsNull() {
				in.Skip()
				out.Tpps = nil
			} else {
				if out.Tpps == nil {
					out.Tpps = new(Performance_Tpps)
				}
				(*out.Tpps).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(out *jwriter.Writer, in Performance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cps\":"
		out.RawString(prefix[1:])
		if in.Cps == nil {
			out.RawString("null")
		} else {
			(*in.Cps).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"currencyType\":"
		out.RawString(prefix)
		out.String(string(in.CurrencyType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"included\":"
		out.RawString(prefix)
		if in.Included == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v176, v177 := range in.Included {
				if v176 > 0 {
					out.RawByte(',')
				}
				out.String(string(v177))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"nav\":"
		out.RawString(prefix)
		if in.Nav == nil {
			out.RawString("null")
		} else {
			(*in.Nav).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pm\":"
		out.RawString(prefix)
		out.String(string(in.Pm))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	{
		const prefix string = ",\"tpps\":"
		out.RawString(prefix)
		if in.Tpps == nil {
			out.RawString("null")
		} else {
			(*in.Tpps).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(in *jlexer.Lexer, out *Pa_Transactions_POST_Request_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Transactions_POST_Request_Conids_List, 0, 8)
			} else {
				*out = Pa_Transactions_POST_Request_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v178 float64
			v178 = float64(in.Float64())
			*out = append(*out, v178)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(out *jwriter.Writer, in Pa_Transactions_POST_Request_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v179, v180 := range in {
			if v179 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v180))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Transactions_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Transactions_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Transactions_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v181 string
			v181 = string(in.String())
			*out = append(*out, v181)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(out *jwriter.Writer, in Pa_Transactions_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v182, v183 := range in {
			if v182 > 0 {
				out.RawByte(',')
			}
			out.String(string(v183))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(in *jlexer.Lexer, out *Pa_Transactions_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			if in.IsNull() {
				in.Skip()
				out.AcctIds = nil
			} else {
				in.Delim('[')
				if out.AcctIds == nil {
					if !in.IsDelim(']') {
						out.AcctIds = make([]string, 0, 4)
					} else {
						out.AcctIds = []string{}
					}
				} else {
					out.AcctIds = (out.AcctIds)[:0]
				}
				for !in.IsDelim(']') {
					var v184 string
					v184 = string(in.String())
					out.AcctIds = append(out.AcctIds, v184)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "conids":
			if in.IsNull() {
				in.Skip()
				out.Conids = nil
			} else {
				in.Delim('[')
				if out.Conids == nil {
					if !in.IsDelim(']') {
						out.Conids = make([]float64, 0, 8)
					} else {
						out.Conids = []float64{}
					}
				} else {
					out.Conids = (out.Conids)[:0]
				}
				for !in.IsDelim(']') {
					var v185 float64
					v185 = float64(in.Float64())
					out.Conids = append(out.Conids, v185)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "currency":
			out.Currency = string(in.String())
		case "days":
			out.Days = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(out *jwriter.Writer, in Pa_Transactions_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		if in.AcctIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v186, v187 := range in.AcctIds {
				if v186 > 0 {
					out.RawByte(',')
				}
				out.String(string(v187))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix)
		if in.Conids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v188, v189 := range in.Conids {
				if v188 > 0 {
					out.RawByte(',')
				}
				out.Float64(float64(v189))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"days\":"
		out.RawString(prefix)
		out.Float64(float64(in.Days))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Summary_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Summary_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Summary_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v190 string
			v190 = string(in.String())
			*out = append(*out, v190)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(out *jwriter.Writer, in Pa_Summary_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v191, v192 := range in {
			if v191 > 0 {
				out.RawByte(',')
			}
			out.String(string(v192))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Summary_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Summary_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Summary_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Summary_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(in *jlexer.Lexer, out *Pa_Summary_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			if in.IsNull() {
				in.Skip()
				out.AcctIds = nil
			} else {
				in.Delim('[')
				if out.AcctIds == nil {
					if !in.IsDelim(']') {
						out.AcctIds = make([]string, 0, 4)
					} else {
						out.AcctIds = []string{}
					}
				} else {
					out.AcctIds = (out.AcctIds)[:0]
				}
				for !in.IsDelim(']') {
					var v193 string
					v193 = string(in.String())
					out.AcctIds = append(out.AcctIds, v193)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(out *jwriter.Writer, in Pa_Summary_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		if in.AcctIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v194, v195 := range in.AcctIds {
				if v194 > 0 {
					out.RawByte(',')
				}
				out.String(string(v195))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Summary_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Summary_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Summary_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Summary_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Performance_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Performance_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Performance_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v196 string
			v196 = string(in.String())
			*out = append(*out, v196)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(out *jwriter.Writer, in Pa_Performance_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v197, v198 := range in {
			if v197 > 0 {
				out.RawByte(',')
			}
			out.String(string(v198))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Performance_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Performance_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Performance_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Performance_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(in *jlexer.Lexer, out *Pa_Performance_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			if in.IsNull() {
				in.Skip()
				out.AcctIds = nil
			} else {
				in.Delim('[')
				if out.AcctIds == nil {
					if !in.IsDelim(']') {
						out.AcctIds = make([]string, 0, 4)
					} else {
						out.AcctIds = []string{}
					}
				} else {
					out.AcctIds = (out.AcctIds)[:0]
				}
				for !in.IsDelim(']') {
					var v199 string
					v199 = string(in.String())
					out.AcctIds = append(out.AcctIds, v199)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(out *jwriter.Writer, in Pa_Performance_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		if in.AcctIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v200, v201 := range in.AcctIds {
				if v200 > 0 {
					out.RawByte(',')
				}
				out.String(string(v201))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Performance_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Performance_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Performance_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Performance_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(in *jlexer.Lexer, out *OrderRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "allocationMethod":
			out.AllocationMethod = string(in.String())
		case "cOID":
			out.COID = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "fxQty":
			out.FxQty = float64(in.Float64())
		case "isCurrencyConversion":
			out.IsCurrencyConversion = bool(in.Bool())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "outsideRTH":
			out.OutsideRTH = bool(in.Bool())
		case "parentId":
			out.ParentId = string(in.String())
		case "price":
			out.Price = float64(in.Float64())
		case "quantity":
			out.Quantity = float64(in.Float64())
		case "referrer":
			out.Referrer = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		case "tif":
			out.Tif = string(in.String())
		case "useAdaptive":
			out.UseAdaptive = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(out *jwriter.Writer, in OrderRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"allocationMethod\":"
		out.RawString(prefix)
		out.String(string(in.AllocationMethod))
	}
	{
		const prefix string = ",\"cOID\":"
		out.RawString(prefix)
		out.String(string(in.COID))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"fxQty\":"
		out.RawString(prefix)
		out.Float64(float64(in.FxQty))
	}
	{
		const prefix string = ",\"isCurrencyConversion\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsCurrencyConversion))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"outsideRTH\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRTH))
	}
	{
		const prefix string = ",\"parentId\":"
		out.RawString(prefix)
		out.String(string(in.ParentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"quantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.Quantity))
	}
	{
		const prefix string = ",\"referrer\":"
		out.RawString(prefix)
		out.String(string(in.Referrer))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"useAdaptive\":"
		out.RawString(prefix)
		out.Bool(bool(in.UseAdaptive))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(in *jlexer.Lexer, out *Order) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acct":
			out.Acct = string(in.String())
		case "bgColor":
			out.BgColor = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "description1":
			out.Description1 = string(in.String())
		case "fgColor":
			out.FgColor = string(in.String())
		case "filledQuantity":
			out.FilledQuantity = string(in.String())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderDesc":
			out.OrderDesc = string(in.String())
		case "orderId":
			out.OrderId = int64(in.Int64())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "origOrderType":
			out.OrigOrderType = string(in.String())
		case "parentId":
			out.ParentId = int64(in.Int64())
		case "price":
			out.Price = float64(in.Float64())
		case "remainingQuantity":
			out.RemainingQuantity = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(out *jwriter.Writer, in Order) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acct\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acct))
	}
	{
		const prefix string = ",\"bgColor\":"
		out.RawString(prefix)
		out.String(string(in.BgColor))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"description1\":"
		out.RawString(prefix)
		out.String(string(in.Description1))
	}
	{
		const prefix string = ",\"fgColor\":"
		out.RawString(prefix)
		out.String(string(in.FgColor))
	}
	{
		const prefix string = ",\"filledQuantity\":"
		out.RawString(prefix)
		out.String(string(in.FilledQuantity))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderDesc\":"
		out.RawString(prefix)
		out.String(string(in.OrderDesc))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"origOrderType\":"
		out.RawString(prefix)
		out.String(string(in.OrigOrderType))
	}
	{
		const prefix string = ",\"parentId\":"
		out.RawString(prefix)
		out.Int64(int64(in.ParentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"remainingQuantity\":"
		out.RawString(prefix)
		out.String(string(in.RemainingQuantity))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Order) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Order) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Order) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Order) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(in *jlexer.Lexer, out *Notifications_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "D":
			out.D = string(in.String())
		case "FC":
			out.FC = string(in.String())
		case "ID":
			out.ID = string(in.String())
		case "MD":
			out.MD = string(in.String())
		case "MS":
			out.MS = string(in.String())
		case "R":
			out.R = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(out *jwriter.Writer, in Notifications_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"D\":"
		out.RawString(prefix[1:])
		out.String(string(in.D))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix)
		out.String(string(in.ID))
	}
	{
		const prefix string = ",\"MD\":"
		out.RawString(prefix)
		out.String(string(in.MD))
	}
	{
		const prefix string = ",\"MS\":"
		out.RawString(prefix)
		out.String(string(in.MS))
	}
	{
		const prefix string = ",\"R\":"
		out.RawString(prefix)
		out.String(string(in.R))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Notifications_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notifications_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notifications_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notifications_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(in *jlexer.Lexer, out *Notifications_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Notifications_List, 0, 8)
			} else {
				*out = Notifications_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v202 *Notifications_List_Item
			if in.IsNull() {
				in.Skip()
				v202 = nil
			} else {
				if v202 == nil {
					v202 = new(Notifications_List_Item)
				}
				(*v202).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v202)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(out *jwriter.Writer, in Notifications_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v203, v204 := range in {
			if v203 > 0 {
				out.RawByte(',')
			}
			if v204 == nil {
				out.RawString("null")
			} else {
				(*v204).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Notifications_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notifications_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notifications_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notifications_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(in *jlexer.Lexer, out *ModifyOrder) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "auxPrice":
			out.AuxPrice = float64(in.Float64())
		case "conid":
			out.Conid = int64(in.Int64())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "outsideRTH":
			out.OutsideRTH = bool(in.Bool())
		case "price":
			out.Price = float64(in.Float64())
		case "quantity":
			out.Quantity = float64(in.Float64())
		case "side":
			out.Side = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		case "tif":
			out.Tif = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(out *jwriter.Writer, in ModifyOrder) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"auxPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.AuxPrice))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"outsideRTH\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRTH))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"quantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.Quantity))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ModifyOrder) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ModifyOrder) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ModifyOrder) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ModifyOrder) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(in *jlexer.Lexer, out *MarketData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Ask":
			out.Ask = float64(in.Float64())
		case "AskSize":
			out.AskSize = float64(in.Float64())
		case "Bid":
			out.Bid = float64(in.Float64())
		case "BidSize":
			out.BidSize = float64(in.Float64())
		case "Conid":
			out.Conid = float64(in.Float64())
		case "Exchange":
			out.Exchange = string(in.String())
		case "Last":
			out.Last = float64(in.Float64())
		case "LastSize":
			out.LastSize = float64(in.Float64())
		case "minTick":
			out.MinTick = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(out *jwriter.Writer, in MarketData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Ask\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Ask))
	}
	{
		const prefix string = ",\"AskSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.AskSize))
	}
	{
		const prefix string = ",\"Bid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Bid))
	}
	{
		const prefix string = ",\"BidSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.BidSize))
	}
	{
		const prefix string = ",\"Conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"Exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"Last\":"
		out.RawString(prefix)
		out.Float64(float64(in.Last))
	}
	{
		const prefix string = ",\"LastSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastSize))
	}
	{
		const prefix string = ",\"minTick\":"
		out.RawString(prefix)
		out.Float64(float64(in.MinTick))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MarketData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MarketData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MarketData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MarketData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(in *jlexer.Lexer, out *Logout_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(out *jwriter.Writer, in Logout_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Logout_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Logout_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Logout_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Logout_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(in *jlexer.Lexer, out *Ledger) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctcode":
			out.Acctcode = string(in.String())
		case "cashbalance":
			out.Cashbalance = float64(in.Float64())
		case "commoditymarketvalue":
			out.Commoditymarketvalue = float64(in.Float64())
		case "corporatebondsmarketvalue":
			out.Corporatebondsmarketvalue = float64(in.Float64())
		case "currency":
			out.Currency = string(in.String())
		case "exchangerate":
			out.Exchangerate = float64(in.Float64())
		case "funds":
			out.Funds = float64(in.Float64())
		case "futuremarketvalue":
			out.Futuremarketvalue = float64(in.Float64())
		case "interest":
			out.Interest = float64(in.Float64())
		case "issueroptionsmarketvalue":
			out.Issueroptionsmarketvalue = float64(in.Float64())
		case "key":
			out.Key = string(in.String())
		case "moneyfunds":
			out.Moneyfunds = float64(in.Float64())
		case "netliquidationvalue":
			out.Netliquidationvalue = float64(in.Float64())
		case "realizedpnl":
			out.Realizedpnl = float64(in.Float64())
		case "sessionid":
			out.Sessionid = int64(in.Int64())
		case "settledcash":
			out.Settledcash = float64(in.Float64())
		case "severity":
			out.Severity = int64(in.Int64())
		case "stockmarketvalue":
			out.Stockmarketvalue = float64(in.Float64())
		case "timestamp":
			out.Timestamp = int64(in.Int64())
		case "unrealizedpnl":
			out.Unrealizedpnl = float64(in.Float64())
		case "warrantsmarketvalue":
			out.Warrantsmarketvalue = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(out *jwriter.Writer, in Ledger) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctcode\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acctcode))
	}
	{
		const prefix string = ",\"cashbalance\":"
		out.RawString(prefix)
		out.Float64(float64(in.Cashbalance))
	}
	{
		const prefix string = ",\"commoditymarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Commoditymarketvalue))
	}
	{
		const prefix string = ",\"corporatebondsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Corporatebondsmarketvalue))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"exchangerate\":"
		out.RawString(prefix)
		out.Float64(float64(in.Exchangerate))
	}
	{
		const prefix string = ",\"funds\":"
		out.RawString(prefix)
		out.Float64(float64(in.Funds))
	}
	{
		const prefix string = ",\"futuremarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Futuremarketvalue))
	}
	{
		const prefix string = ",\"interest\":"
		out.RawString(prefix)
		out.Float64(float64(in.Interest))
	}
	{
		const prefix string = ",\"issueroptionsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Issueroptionsmarketvalue))
	}
	{
		const prefix string = ",\"key\":"
		out.RawString(prefix)
		out.String(string(in.Key))
	}
	{
		const prefix string = ",\"moneyfunds\":"
		out.RawString(prefix)
		out.Float64(float64(in.Moneyfunds))
	}
	{
		const prefix string = ",\"netliquidationvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Netliquidationvalue))
	}
	{
		const prefix string = ",\"realizedpnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.Realizedpnl))
	}
	{
		const prefix string = ",\"sessionid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Sessionid))
	}
	{
		const prefix string = ",\"settledcash\":"
		out.RawString(prefix)
		out.Float64(float64(in.Settledcash))
	}
	{
		const prefix string = ",\"severity\":"
		out.RawString(prefix)
		out.Int64(int64(in.Severity))
	}
	{
		const prefix string = ",\"stockmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stockmarketvalue))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Int64(int64(in.Timestamp))
	}
	{
		const prefix string = ",\"unrealizedpnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.Unrealizedpnl))
	}
	{
		const prefix string = ",\"warrantsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Warrantsmarketvalue))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ledger) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ledger) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ledger) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ledger) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200_Put_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Strikes_GET_200_Put_List, 0, 4)
			} else {
				*out = Iserver_Secdef_Strikes_GET_200_Put_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v205 string
			v205 = string(in.String())
			*out = append(*out, v205)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200_Put_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v206, v207 := range in {
			if v206 > 0 {
				out.RawByte(',')
			}
			out.String(string(v207))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Put_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Put_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Put_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Put_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200_Call_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Strikes_GET_200_Call_List, 0, 4)
			} else {
				*out = Iserver_Secdef_Strikes_GET_200_Call_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v208 string
			v208 = string(in.String())
			*out = append(*out, v208)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200_Call_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v209, v210 := range in {
			if v209 > 0 {
				out.RawByte(',')
			}
			out.String(string(v210))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Call_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Call_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Call_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Call_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "call":
			if in.IsNull() {
				in.Skip()
				out.Call = nil
			} else {
				in.Delim('[')
				if out.Call == nil {
					if !in.IsDelim(']') {
						out.Call = make([]string, 0, 4)
					} else {
						out.Call = []string{}
					}
				} else {
					out.Call = (out.Call)[:0]
				}
				for !in.IsDelim(']') {
					var v211 string
					v211 = string(in.String())
					out.Call = append(out.Call, v211)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "put":
			if in.IsNull() {
				in.Skip()
				out.Put = nil
			} else {
				in.Delim('[')
				if out.Put == nil {
					if !in.IsDelim(']') {
						out.Put = make([]string, 0, 4)
					} else {
						out.Put = []string{}
					}
				} else {
					out.Put = (out.Put)[:0]
				}
				for !in.IsDelim(']') {
					var v212 string
					v212 = string(in.String())
					out.Put = append(out.Put, v212)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"call\":"
		out.RawString(prefix[1:])
		if in.Call == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v213, v214 := range in.Call {
				if v213 > 0 {
					out.RawByte(',')
				}
				out.String(string(v214))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"put\":"
		out.RawString(prefix)
		if in.Put == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v215, v216 := range in.Put {
				if v215 > 0 {
					out.RawByte(',')
				}
				out.String(string(v216))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = bool(in.Bool())
		case "secType":
			out.SecType = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(out *jwriter.Writer, in Iserver_Secdef_Search_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Name))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(out *jwriter.Writer, in Iserver_Secdef_Search_POST_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "exchange":
			out.Exchange = string(in.String())
		case "legSecType":
			out.LegSecType = string(in.String())
		case "months":
			out.Months = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix[1:])
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"legSecType\":"
		out.RawString(prefix)
		out.String(string(in.LegSecType))
	}
	{
		const prefix string = ",\"months\":"
		out.RawString(prefix)
		out.String(string(in.Months))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Search_POST_200_List_Item_Sections_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Search_POST_200_List_Item_Sections_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v217 *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item
			if in.IsNull() {
				in.Skip()
				v217 = nil
			} else {
				if v217 == nil {
					v217 = new(Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item)
				}
				(*v217).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v217)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item_Sections_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v218, v219 := range in {
			if v218 > 0 {
				out.RawByte(',')
			}
			if v219 == nil {
				out.RawString("null")
			} else {
				(*v219).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "companyHeader":
			out.CompanyHeader = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "description":
			out.Description = string(in.String())
		case "fop":
			out.Fop = string(in.String())
		case "opt":
			out.Opt = string(in.String())
		case "restricted":
			out.Restricted = string(in.String())
		case "sections":
			if in.IsNull() {
				in.Skip()
				out.Sections = nil
			} else {
				in.Delim('[')
				if out.Sections == nil {
					if !in.IsDelim(']') {
						out.Sections = make([]*Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item, 0, 8)
					} else {
						out.Sections = []*Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item{}
					}
				} else {
					out.Sections = (out.Sections)[:0]
				}
				for !in.IsDelim(']') {
					var v220 *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item
					if in.IsNull() {
						in.Skip()
						v220 = nil
					} else {
						if v220 == nil {
							v220 = new(Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item)
						}
						(*v220).UnmarshalEasyJSON(in)
					}
					out.Sections = append(out.Sections, v220)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "symbol":
			out.Symbol = string(in.String())
		case "war":
			out.War = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"companyHeader\":"
		out.RawString(prefix[1:])
		out.String(string(in.CompanyHeader))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"fop\":"
		out.RawString(prefix)
		out.String(string(in.Fop))
	}
	{
		const prefix string = ",\"opt\":"
		out.RawString(prefix)
		out.String(string(in.Opt))
	}
	{
		const prefix string = ",\"restricted\":"
		out.RawString(prefix)
		out.String(string(in.Restricted))
	}
	{
		const prefix string = ",\"sections\":"
		out.RawString(prefix)
		if in.Sections == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v221, v222 := range in.Sections {
				if v221 > 0 {
					out.RawByte(',')
				}
				if v222 == nil {
					out.RawString("null")
				} else {
					(*v222).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"war\":"
		out.RawString(prefix)
		out.String(string(in.War))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Search_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Search_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v223 *Iserver_Secdef_Search_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v223 = nil
			} else {
				if v223 == nil {
					v223 = new(Iserver_Secdef_Search_POST_200_List_Item)
				}
				(*v223).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v223)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v224, v225 := range in {
			if v224 > 0 {
				out.RawByte(',')
			}
			if v225 == nil {
				out.RawString("null")
			} else {
				(*v225).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(in *jlexer.Lexer, out *Iserver_Secdef_Info_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(out *jwriter.Writer, in Iserver_Secdef_Info_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Info_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Info_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(in *jlexer.Lexer, out *Iserver_Secdef_Info_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Info_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Info_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v226 *SecdefInfo
			if in.IsNull() {
				in.Skip()
				v226 = nil
			} else {
				if v226 == nil {
					v226 = new(SecdefInfo)
				}
				(*v226).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v226)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(out *jwriter.Writer, in Iserver_Secdef_Info_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v227, v228 := range in {
			if v227 > 0 {
				out.RawByte(',')
			}
			if v228 == nil {
				out.RawString("null")
			} else {
				(*v228).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Info_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Info_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(in *jlexer.Lexer, out *Iserver_Scanner_Run_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "available_chart_periods":
			out.Available_chart_periods = string(in.String())
		case "column_name":
			out.Column_name = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = float64(in.Float64())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		case "listing_exchange":
			out.Listing_exchange = string(in.String())
		case "sec_type":
			out.Sec_type = string(in.String())
		case "server_id":
			out.Server_id = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(out *jwriter.Writer, in Iserver_Scanner_Run_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"available_chart_periods\":"
		out.RawString(prefix[1:])
		out.String(string(in.Available_chart_periods))
	}
	{
		const prefix string = ",\"column_name\":"
		out.RawString(prefix)
		out.String(string(in.Column_name))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Con_id))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	{
		const prefix string = ",\"listing_exchange\":"
		out.RawString(prefix)
		out.String(string(in.Listing_exchange))
	}
	{
		const prefix string = ",\"sec_type\":"
		out.RawString(prefix)
		out.String(string(in.Sec_type))
	}
	{
		const prefix string = ",\"server_id\":"
		out.RawString(prefix)
		out.String(string(in.Server_id))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(in *jlexer.Lexer, out *Iserver_Scanner_Run_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Run_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Run_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v229 *Iserver_Scanner_Run_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v229 = nil
			} else {
				if v229 == nil {
					v229 = new(Iserver_Scanner_Run_POST_200_List_Item)
				}
				(*v229).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v229)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(out *jwriter.Writer, in Iserver_Scanner_Run_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v230, v231 := range in {
			if v230 > 0 {
				out.RawByte(',')
			}
			if v231 == nil {
				out.RawString("null")
			} else {
				(*v231).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List, 0, 4)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v232 string
			v232 = string(in.String())
			*out = append(*out, v232)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v233, v234 := range in {
			if v233 > 0 {
				out.RawByte(',')
			}
			out.String(string(v234))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "display_name":
			out.Display_name = string(in.String())
		case "instruments":
			if in.IsNull() {
				in.Skip()
				out.Instruments = nil
			} else {
				in.Delim('[')
				if out.Instruments == nil {
					if !in.IsDelim(']') {
						out.Instruments = make([]string, 0, 4)
					} else {
						out.Instruments = []string{}
					}
				} else {
					out.Instruments = (out.Instruments)[:0]
				}
				for !in.IsDelim(']') {
					var v235 string
					v235 = string(in.String())
					out.Instruments = append(out.Instruments, v235)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix)
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		if in.Instruments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v236, v237 := range in.Instruments {
				if v236 > 0 {
					out.RawByte(',')
				}
				out.String(string(v237))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Scan_type_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Scan_type_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v238 *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item
			if in.IsNull() {
				in.Skip()
				v238 = nil
			} else {
				if v238 == nil {
					v238 = new(Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item)
				}
				(*v238).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v238)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v239, v240 := range in {
			if v239 > 0 {
				out.RawByte(',')
			}
			if v240 == nil {
				out.RawString("null")
			} else {
				(*v240).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v241 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item
			if in.IsNull() {
				in.Skip()
				v241 = nil
			} else {
				if v241 == nil {
					v241 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item)
				}
				(*v241).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v241)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v242, v243 := range in {
			if v242 > 0 {
				out.RawByte(',')
			}
			if v243 == nil {
				out.RawString("null")
			} else {
				(*v243).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "locations":
			if in.IsNull() {
				in.Skip()
				out.Locations = nil
			} else {
				in.Delim('[')
				if out.Locations == nil {
					if !in.IsDelim(']') {
						out.Locations = make([]*Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item, 0, 8)
					} else {
						out.Locations = []*Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item{}
					}
				} else {
					out.Locations = (out.Locations)[:0]
				}
				for !in.IsDelim(']') {
					var v244 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item
					if in.IsNull() {
						in.Skip()
						v244 = nil
					} else {
						if v244 == nil {
							v244 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item)
						}
						(*v244).UnmarshalEasyJSON(in)
					}
					out.Locations = append(out.Locations, v244)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"locations\":"
		out.RawString(prefix)
		if in.Locations == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v245, v246 := range in.Locations {
				if v245 > 0 {
					out.RawByte(',')
				}
				if v246 == nil {
					out.RawString("null")
				} else {
					(*v246).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Location_tree_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Location_tree_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v247 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item
			if in.IsNull() {
				in.Skip()
				v247 = nil
			} else {
				if v247 == nil {
					v247 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item)
				}
				(*v247).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v247)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v248, v249 := range in {
			if v248 > 0 {
				out.RawByte(',')
			}
			if v249 == nil {
				out.RawString("null")
			} else {
				(*v249).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List, 0, 4)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v250 string
			v250 = string(in.String())
			*out = append(*out, v250)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v251, v252 := range in {
			if v251 > 0 {
				out.RawByte(',')
			}
			out.String(string(v252))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "filters":
			if in.IsNull() {
				in.Skip()
				out.Filters = nil
			} else {
				in.Delim('[')
				if out.Filters == nil {
					if !in.IsDelim(']') {
						out.Filters = make([]string, 0, 4)
					} else {
						out.Filters = []string{}
					}
				} else {
					out.Filters = (out.Filters)[:0]
				}
				for !in.IsDelim(']') {
					var v253 string
					v253 = string(in.String())
					out.Filters = append(out.Filters, v253)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix)
		if in.Filters == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v254, v255 := range in.Filters {
				if v254 > 0 {
					out.RawByte(',')
				}
				out.String(string(v255))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Instrument_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Instrument_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v256 *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item
			if in.IsNull() {
				in.Skip()
				v256 = nil
			} else {
				if v256 == nil {
					v256 = new(Iserver_Scanner_Params_GET_200_Instrument_list_List_Item)
				}
				(*v256).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v256)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v257, v258 := range in {
			if v257 > 0 {
				out.RawByte(',')
			}
			if v258 == nil {
				out.RawString("null")
			} else {
				(*v258).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "display_name":
			out.Display_name = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Filter_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix)
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Filter_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Filter_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Filter_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v259 *Iserver_Scanner_Params_GET_200_Filter_list_List_Item
			if in.IsNull() {
				in.Skip()
				v259 = nil
			} else {
				if v259 == nil {
					v259 = new(Iserver_Scanner_Params_GET_200_Filter_list_List_Item)
				}
				(*v259).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v259)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Filter_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v260, v261 := range in {
			if v260 > 0 {
				out.RawByte(',')
			}
			if v261 == nil {
				out.RawString("null")
			} else {
				(*v261).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filter_list":
			if in.IsNull() {
				in.Skip()
				out.Filter_list = nil
			} else {
				in.Delim('[')
				if out.Filter_list == nil {
					if !in.IsDelim(']') {
						out.Filter_list = make([]*Iserver_Scanner_Params_GET_200_Filter_list_List_Item, 0, 8)
					} else {
						out.Filter_list = []*Iserver_Scanner_Params_GET_200_Filter_list_List_Item{}
					}
				} else {
					out.Filter_list = (out.Filter_list)[:0]
				}
				for !in.IsDelim(']') {
					var v262 *Iserver_Scanner_Params_GET_200_Filter_list_List_Item
					if in.IsNull() {
						in.Skip()
						v262 = nil
					} else {
						if v262 == nil {
							v262 = new(Iserver_Scanner_Params_GET_200_Filter_list_List_Item)
						}
						(*v262).UnmarshalEasyJSON(in)
					}
					out.Filter_list = append(out.Filter_list, v262)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "instrument_list":
			if in.IsNull() {
				in.Skip()
				out.Instrument_list = nil
			} else {
				in.Delim('[')
				if out.Instrument_list == nil {
					if !in.IsDelim(']') {
						out.Instrument_list = make([]*Iserver_Scanner_Params_GET_200_Instrument_list_List_Item, 0, 8)
					} else {
						out.Instrument_list = []*Iserver_Scanner_Params_GET_200_Instrument_list_List_Item{}
					}
				} else {
					out.Instrument_list = (out.Instrument_list)[:0]
				}
				for !in.IsDelim(']') {
					var v263 *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item
					if in.IsNull() {
						in.Skip()
						v263 = nil
					} else {
						if v263 == nil {
							v263 = new(Iserver_Scanner_Params_GET_200_Instrument_list_List_Item)
						}
						(*v263).UnmarshalEasyJSON(in)
					}
					out.Instrument_list = append(out.Instrument_list, v263)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "location_tree":
			if in.IsNull() {
				in.Skip()
				out.Location_tree = nil
			} else {
				in.Delim('[')
				if out.Location_tree == nil {
					if !in.IsDelim(']') {
						out.Location_tree = make([]*Iserver_Scanner_Params_GET_200_Location_tree_List_Item, 0, 8)
					} else {
						out.Location_tree = []*Iserver_Scanner_Params_GET_200_Location_tree_List_Item{}
					}
				} else {
					out.Location_tree = (out.Location_tree)[:0]
				}
				for !in.IsDelim(']') {
					var v264 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item
					if in.IsNull() {
						in.Skip()
						v264 = nil
					} else {
						if v264 == nil {
							v264 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item)
						}
						(*v264).UnmarshalEasyJSON(in)
					}
					out.Location_tree = append(out.Location_tree, v264)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "scan_type_list":
			if in.IsNull() {
				in.Skip()
				out.Scan_type_list = nil
			} else {
				in.Delim('[')
				if out.Scan_type_list == nil {
					if !in.IsDelim(']') {
						out.Scan_type_list = make([]*Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item, 0, 8)
					} else {
						out.Scan_type_list = []*Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item{}
					}
				} else {
					out.Scan_type_list = (out.Scan_type_list)[:0]
				}
				for !in.IsDelim(']') {
					var v265 *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item
					if in.IsNull() {
						in.Skip()
						v265 = nil
					} else {
						if v265 == nil {
							v265 = new(Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item)
						}
						(*v265).UnmarshalEasyJSON(in)
					}
					out.Scan_type_list = append(out.Scan_type_list, v265)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filter_list\":"
		out.RawString(prefix[1:])
		if in.Filter_list == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v266, v267 := range in.Filter_list {
				if v266 > 0 {
					out.RawByte(',')
				}
				if v267 == nil {
					out.RawString("null")
				} else {
					(*v267).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"instrument_list\":"
		out.RawString(prefix)
		if in.Instrument_list == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v268, v269 := range in.Instrument_list {
				if v268 > 0 {
					out.RawByte(',')
				}
				if v269 == nil {
					out.RawString("null")
				} else {
					(*v269).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"location_tree\":"
		out.RawString(prefix)
		if in.Location_tree == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v270, v271 := range in.Location_tree {
				if v270 > 0 {
					out.RawByte(',')
				}
				if v271 == nil {
					out.RawString("null")
				} else {
					(*v271).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"scan_type_list\":"
		out.RawString(prefix)
		if in.Scan_type_list == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v272, v273 := range in.Scan_type_list {
				if v272 > 0 {
					out.RawByte(',')
				}
				if v273 == nil {
					out.RawString("null")
				} else {
					(*v273).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_400) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		case "statusCode":
			out.StatusCode = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_400) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"statusCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.StatusCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_400) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_400) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_400) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_400) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "local_order_id":
			out.Local_order_id = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		case "order_status":
			out.Order_status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"local_order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Local_order_id))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Reply_Replyid_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Reply_Replyid_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v274 *Iserver_Reply_Replyid_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v274 = nil
			} else {
				if v274 == nil {
					v274 = new(Iserver_Reply_Replyid_POST_200_List_Item)
				}
				(*v274).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v274)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v275, v276 := range in {
			if v275 > 0 {
				out.RawByte(',')
			}
			if v276 == nil {
				out.RawString("null")
			} else {
				(*v276).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(in *jlexer.Lexer, out *Iserver_Marketdata_Unsubscribeall_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(out *jwriter.Writer, in Iserver_Marketdata_Unsubscribeall_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Unsubscribeall_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Unsubscribeall_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Unsubscribeall_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Unsubscribeall_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_400) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		case "statusCode":
			out.StatusCode = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_400) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"statusCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.StatusCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_400) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_400) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_400) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_400) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "31":
			out.LastPrice = string(in.String())
		case "55":
			out.Symbol = string(in.String())
		case "58":
			out.Text = string(in.String())
		case "70":
			out.High = string(in.String())
		case "71":
			out.Low = string(in.String())
		case "72":
			out.Position = string(in.String())
		case "73":
			out.MarketValue = string(in.String())
		case "74":
			out.AveragePrice = string(in.String())
		case "75":
			out.UnrealizedPnL = string(in.String())
		case "76":
			out.FormattedPosition = string(in.String())
		case "77":
			out.FormattedUnrealizedPnL = string(in.String())
		case "78":
			out.DailyPnL = string(in.String())
		case "82":
			out.ChangePrice = string(in.String())
		case "83":
			out.ChangePercent = string(in.String())
		case "84":
			out.BidPrice = string(in.String())
		case "85":
			out.AskSize = string(in.String())
		case "86":
			out.AskPrice = string(in.String())
		case "87":
			out.Volume = string(in.String())
		case "88":
			out.BidSize = string(in.String())
		case "6004":
			out.Exchange = string(in.String())
		case "6008":
			out.Conid6008 = string(in.String())
		case "6070":
			out.SecurityType = string(in.String())
		case "6072":
			out.Months = string(in.String())
		case "6073":
			out.RegularExpiry = string(in.String())
		case "6119":
			out.Marker = string(in.String())
		case "6457":
			out.UnderlyingConid = string(in.String())
		case "6509":
			out.MarketDataAvailability = string(in.String())
		case "7051":
			out.CompanyName = string(in.String())
		case "7059":
			out.LastSize = string(in.String())
		case "7094":
			out.ConidAndExchange = string(in.String())
		case "7219":
			out.ContractDescription = string(in.String())
		case "7220":
			out.ContractDescription2 = string(in.String())
		case "7221":
			out.ListingExchange = string(in.String())
		case "7280":
			out.Industry = string(in.String())
		case "7281":
			out.Category = string(in.String())
		case "7282":
			out.AverageDailyVolume = string(in.String())
		case "7284":
			out.HistoricVolume30d = string(in.String())
		case "7285":
			out.PutCallRatio = string(in.String())
		case "7286":
			out.DividendAmount = string(in.String())
		case "7287":
			out.DividendYieldPercent = string(in.String())
		case "7288":
			out.ExDateOfTheDividend = string(in.String())
		case "7289":
			out.MarketCap = string(in.String())
		case "7290":
			out.PE = string(in.String())
		case "7291":
			out.EPS = string(in.String())
		case "7292":
			out.CostBasis = string(in.String())
		case "7293":
			out.High52Week = string(in.String())
		case "7294":
			out.Low52Week = string(in.String())
		case "7295":
			out.OpenPrice = string(in.String())
		case "7296":
			out.ClosePrice = string(in.String())
		case "7308":
			out.Delta = string(in.String())
		case "7309":
			out.Gamma = string(in.String())
		case "7310":
			out.Theta = string(in.String())
		case "7311":
			out.Vega = string(in.String())
		case "7633":
			out.ImpliedVolatility = string(in.String())
		case "87_raw":
			out.VolumeRaw = float64(in.Float64())
		case "_updated":
			out.Updated = int64(in.Int64())
		case "conid":
			out.Conid = int64(in.Int64())
		case "server_id":
			out.Server_id = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"31\":"
		out.RawString(prefix[1:])
		out.String(string(in.LastPrice))
	}
	{
		const prefix string = ",\"55\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"58\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"70\":"
		out.RawString(prefix)
		out.String(string(in.High))
	}
	{
		const prefix string = ",\"71\":"
		out.RawString(prefix)
		out.String(string(in.Low))
	}
	{
		const prefix string = ",\"72\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"73\":"
		out.RawString(prefix)
		out.String(string(in.MarketValue))
	}
	{
		const prefix string = ",\"74\":"
		out.RawString(prefix)
		out.String(string(in.AveragePrice))
	}
	{
		const prefix string = ",\"75\":"
		out.RawString(prefix)
		out.String(string(in.UnrealizedPnL))
	}
	{
		const prefix string = ",\"76\":"
		out.RawString(prefix)
		out.String(string(in.FormattedPosition))
	}
	{
		const prefix string = ",\"77\":"
		out.RawString(prefix)
		out.String(string(in.FormattedUnrealizedPnL))
	}
	{
		const prefix string = ",\"78\":"
		out.RawString(prefix)
		out.String(string(in.DailyPnL))
	}
	{
		const prefix string = ",\"82\":"
		out.RawString(prefix)
		out.String(string(in.ChangePrice))
	}
	{
		const prefix string = ",\"83\":"
		out.RawString(prefix)
		out.String(string(in.ChangePercent))
	}
	{
		const prefix string = ",\"84\":"
		out.RawString(prefix)
		out.String(string(in.BidPrice))
	}
	{
		const prefix string = ",\"85\":"
		out.RawString(prefix)
		out.String(string(in.AskSize))
	}
	{
		const prefix string = ",\"86\":"
		out.RawString(prefix)
		out.String(string(in.AskPrice))
	}
	{
		const prefix string = ",\"87\":"
		out.RawString(prefix)
		out.String(string(in.Volume))
	}
	{
		const prefix string = ",\"88\":"
		out.RawString(prefix)
		out.String(string(in.BidSize))
	}
	{
		const prefix string = ",\"6004\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"6008\":"
		out.RawString(prefix)
		out.String(string(in.Conid6008))
	}
	{
		const prefix string = ",\"6070\":"
		out.RawString(prefix)
		out.String(string(in.SecurityType))
	}
	{
		const prefix string = ",\"6072\":"
		out.RawString(prefix)
		out.String(string(in.Months))
	}
	{
		const prefix string = ",\"6073\":"
		out.RawString(prefix)
		out.String(string(in.RegularExpiry))
	}
	{
		const prefix string = ",\"6119\":"
		out.RawString(prefix)
		out.String(string(in.Marker))
	}
	{
		const prefix string = ",\"6457\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingConid))
	}
	{
		const prefix string = ",\"6509\":"
		out.RawString(prefix)
		out.String(string(in.MarketDataAvailability))
	}
	{
		const prefix string = ",\"7051\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"7059\":"
		out.RawString(prefix)
		out.String(string(in.LastSize))
	}
	{
		const prefix string = ",\"7094\":"
		out.RawString(prefix)
		out.String(string(in.ConidAndExchange))
	}
	{
		const prefix string = ",\"7219\":"
		out.RawString(prefix)
		out.String(string(in.ContractDescription))
	}
	{
		const prefix string = ",\"7220\":"
		out.RawString(prefix)
		out.String(string(in.ContractDescription2))
	}
	{
		const prefix string = ",\"7221\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"7280\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"7281\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"7282\":"
		out.RawString(prefix)
		out.String(string(in.AverageDailyVolume))
	}
	{
		const prefix string = ",\"7284\":"
		out.RawString(prefix)
		out.String(string(in.HistoricVolume30d))
	}
	{
		const prefix string = ",\"7285\":"
		out.RawString(prefix)
		out.String(string(in.PutCallRatio))
	}
	{
		const prefix string = ",\"7286\":"
		out.RawString(prefix)
		out.String(string(in.DividendAmount))
	}
	{
		const prefix string = ",\"7287\":"
		out.RawString(prefix)
		out.String(string(in.DividendYieldPercent))
	}
	{
		const prefix string = ",\"7288\":"
		out.RawString(prefix)
		out.String(string(in.ExDateOfTheDividend))
	}
	{
		const prefix string = ",\"7289\":"
		out.RawString(prefix)
		out.String(string(in.MarketCap))
	}
	{
		const prefix string = ",\"7290\":"
		out.RawString(prefix)
		out.String(string(in.PE))
	}
	{
		const prefix string = ",\"7291\":"
		out.RawString(prefix)
		out.String(string(in.EPS))
	}
	{
		const prefix string = ",\"7292\":"
		out.RawString(prefix)
		out.String(string(in.CostBasis))
	}
	{
		const prefix string = ",\"7293\":"
		out.RawString(prefix)
		out.String(string(in.High52Week))
	}
	{
		const prefix string = ",\"7294\":"
		out.RawString(prefix)
		out.String(string(in.Low52Week))
	}
	{
		const prefix string = ",\"7295\":"
		out.RawString(prefix)
		out.String(string(in.OpenPrice))
	}
	{
		const prefix string = ",\"7296\":"
		out.RawString(prefix)
		out.String(string(in.ClosePrice))
	}
	{
		const prefix string = ",\"7308\":"
		out.RawString(prefix)
		out.String(string(in.Delta))
	}
	{
		const prefix string = ",\"7309\":"
		out.RawString(prefix)
		out.String(string(in.Gamma))
	}
	{
		const prefix string = ",\"7310\":"
		out.RawString(prefix)
		out.String(string(in.Theta))
	}
	{
		const prefix string = ",\"7311\":"
		out.RawString(prefix)
		out.String(string(in.Vega))
	}
	{
		const prefix string = ",\"7633\":"
		out.RawString(prefix)
		out.String(string(in.ImpliedVolatility))
	}
	{
		const prefix string = ",\"87_raw\":"
		out.RawString(prefix)
		out.Float64(float64(in.VolumeRaw))
	}
	{
		const prefix string = ",\"_updated\":"
		out.RawString(prefix)
		out.Int64(int64(in.Updated))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"server_id\":"
		out.RawString(prefix)
		out.String(string(in.Server_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Marketdata_Snapshot_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Marketdata_Snapshot_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v277 *Iserver_Marketdata_Snapshot_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v277 = nil
			} else {
				if v277 == nil {
					v277 = new(Iserver_Marketdata_Snapshot_GET_200_List_Item)
				}
				(*v277).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v277)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v278, v279 := range in {
			if v278 > 0 {
				out.RawByte(',')
			}
			if v279 == nil {
				out.RawString("null")
			} else {
				(*v279).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(in *jlexer.Lexer, out *Iserver_Marketdata_History_GET_429) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(out *jwriter.Writer, in Iserver_Marketdata_History_GET_429) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_History_GET_429) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_History_GET_429) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_History_GET_429) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_History_GET_429) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(in *jlexer.Lexer, out *Iserver_Marketdata_Conid_Unsubscribe_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(out *jwriter.Writer, in Iserver_Marketdata_Conid_Unsubscribe_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.String(string(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Conid_Unsubscribe_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Conid_Unsubscribe_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Conid_Unsubscribe_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Conid_Unsubscribe_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v280 int64
			v280 = int64(in.Int64())
			*out = append(*out, v280)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v281, v282 := range in {
			if v281 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v282))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v283 int64
			v283 = int64(in.Int64())
			*out = append(*out, v283)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v284, v285 := range in {
			if v284 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v285))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v286 int64
			v286 = int64(in.Int64())
			*out = append(*out, v286)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v287, v288 := range in {
			if v287 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v288))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List, 0, 4)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v289 string
			v289 = string(in.String())
			*out = append(*out, v289)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v290, v291 := range in {
			if v290 > 0 {
				out.RawByte(',')
			}
			out.String(string(v291))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "string":
			if in.IsNull() {
				in.Skip()
				out.String = nil
			} else {
				in.Delim('[')
				if out.String == nil {
					if !in.IsDelim(']') {
						out.String = make([]string, 0, 4)
					} else {
						out.String = []string{}
					}
				} else {
					out.String = (out.String)[:0]
				}
				for !in.IsDelim(']') {
					var v292 string
					v292 = string(in.String())
					out.String = append(out.String, v292)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"string\":"
		out.RawString(prefix[1:])
		if in.String == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v293, v294 := range in.String {
				if v293 > 0 {
					out.RawByte(',')
				}
				out.String(string(v294))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v295 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item
			if in.IsNull() {
				in.Skip()
				v295 = nil
			} else {
				if v295 == nil {
					v295 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item)
				}
				(*v295).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v295)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v296, v297 := range in {
			if v296 > 0 {
				out.RawByte(',')
			}
			if v297 == nil {
				out.RawString("null")
			} else {
				(*v297).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v298 int64
			v298 = int64(in.Int64())
			*out = append(*out, v298)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v299, v300 := range in {
			if v299 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v300))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v301 int64
			v301 = int64(in.Int64())
			*out = append(*out, v301)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v302, v303 := range in {
			if v302 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v303))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v304 int64
			v304 = int64(in.Int64())
			*out = append(*out, v304)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v305, v306 := range in {
			if v305 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v306))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cashCcy":
			out.CashCcy = string(in.String())
		case "cashQtyIncr":
			out.CashQtyIncr = float64(in.Float64())
		case "cashSize":
			out.CashSize = int64(in.Int64())
		case "cqtTypes":
			if in.IsNull() {
				in.Skip()
				out.CqtTypes = nil
			} else {
				in.Delim('[')
				if out.CqtTypes == nil {
					if !in.IsDelim(']') {
						out.CqtTypes = make([]int64, 0, 8)
					} else {
						out.CqtTypes = []int64{}
					}
				} else {
					out.CqtTypes = (out.CqtTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v307 int64
					v307 = int64(in.Int64())
					out.CqtTypes = append(out.CqtTypes, v307)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "defaultSize":
			out.DefaultSize = int64(in.Int64())
		case "defaultTIF":
			out.DefaultTIF = string(in.String())
		case "displaySize":
			out.DisplaySize = float64(in.Float64())
		case "error":
			out.Error = string(in.String())
		case "fraqInt":
			out.FraqInt = float64(in.Float64())
		case "fraqTypes":
			if in.IsNull() {
				in.Skip()
				out.FraqTypes = nil
			} else {
				in.Delim('[')
				if out.FraqTypes == nil {
					if !in.IsDelim(']') {
						out.FraqTypes = make([]int64, 0, 8)
					} else {
						out.FraqTypes = []int64{}
					}
				} else {
					out.FraqTypes = (out.FraqTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v308 int64
					v308 = int64(in.Int64())
					out.FraqTypes = append(out.FraqTypes, v308)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "ibalgoTypes":
			if in.IsNull() {
				in.Skip()
				out.IbalgoTypes = nil
			} else {
				in.Delim('[')
				if out.IbalgoTypes == nil {
					if !in.IsDelim(']') {
						out.IbalgoTypes = make([]int64, 0, 8)
					} else {
						out.IbalgoTypes = []int64{}
					}
				} else {
					out.IbalgoTypes = (out.IbalgoTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v309 int64
					v309 = int64(in.Int64())
					out.IbalgoTypes = append(out.IbalgoTypes, v309)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "increment":
			out.Increment = float64(in.Float64())
		case "incrementDigits":
			out.IncrementDigits = int64(in.Int64())
		case "limitPrice":
			out.LimitPrice = float64(in.Float64())
		case "negativeCapable":
			out.NegativeCapable = bool(in.Bool())
		case "orderDefaults":
			if in.IsNull() {
				in.Skip()
				out.OrderDefaults = nil
			} else {
				in.Delim('[')
				if out.OrderDefaults == nil {
					if !in.IsDelim(']') {
						out.OrderDefaults = make([]*Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item, 0, 8)
					} else {
						out.OrderDefaults = []*Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item{}
					}
				} else {
					out.OrderDefaults = (out.OrderDefaults)[:0]
				}
				for !in.IsDelim(']') {
					var v310 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item
					if in.IsNull() {
						in.Skip()
						v310 = nil
					} else {
						if v310 == nil {
							v310 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item)
						}
						(*v310).UnmarshalEasyJSON(in)
					}
					out.OrderDefaults = append(out.OrderDefaults, v310)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "orderOrigination":
			out.OrderOrigination = float64(in.Float64())
		case "orderTypes":
			if in.IsNull() {
				in.Skip()
				out.OrderTypes = nil
			} else {
				in.Delim('[')
				if out.OrderTypes == nil {
					if !in.IsDelim(']') {
						out.OrderTypes = make([]int64, 0, 8)
					} else {
						out.OrderTypes = []int64{}
					}
				} else {
					out.OrderTypes = (out.OrderTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v311 int64
					v311 = int64(in.Int64())
					out.OrderTypes = append(out.OrderTypes, v311)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "orderTypesOutside":
			if in.IsNull() {
				in.Skip()
				out.OrderTypesOutside = nil
			} else {
				in.Delim('[')
				if out.OrderTypesOutside == nil {
					if !in.IsDelim(']') {
						out.OrderTypesOutside = make([]int64, 0, 8)
					} else {
						out.OrderTypesOutside = []int64{}
					}
				} else {
					out.OrderTypesOutside = (out.OrderTypesOutside)[:0]
				}
				for !in.IsDelim(']') {
					var v312 int64
					v312 = int64(in.Int64())
					out.OrderTypesOutside = append(out.OrderTypesOutside, v312)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "preview":
			out.Preview = bool(in.Bool())
		case "priceMagnifier":
			out.PriceMagnifier = float64(in.Float64())
		case "sizeIncrement":
			out.SizeIncrement = int64(in.Int64())
		case "stopprice":
			out.Stopprice = float64(in.Float64())
		case "tifTypes":
			if in.IsNull() {
				in.Skip()
				out.TifTypes = nil
			} else {
				in.Delim('[')
				if out.TifTypes == nil {
					if !in.IsDelim(']') {
						out.TifTypes = make([]int64, 0, 8)
					} else {
						out.TifTypes = []int64{}
					}
				} else {
					out.TifTypes = (out.TifTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v313 int64
					v313 = int64(in.Int64())
					out.TifTypes = append(out.TifTypes, v313)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cashCcy\":"
		out.RawString(prefix[1:])
		out.String(string(in.CashCcy))
	}
	{
		const prefix string = ",\"cashQtyIncr\":"
		out.RawString(prefix)
		out.Float64(float64(in.CashQtyIncr))
	}
	{
		const prefix string = ",\"cashSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.CashSize))
	}
	{
		const prefix string = ",\"cqtTypes\":"
		out.RawString(prefix)
		if in.CqtTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v314, v315 := range in.CqtTypes {
				if v314 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v315))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"defaultSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.DefaultSize))
	}
	{
		const prefix string = ",\"defaultTIF\":"
		out.RawString(prefix)
		out.String(string(in.DefaultTIF))
	}
	{
		const prefix string = ",\"displaySize\":"
		out.RawString(prefix)
		out.Float64(float64(in.DisplaySize))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"fraqInt\":"
		out.RawString(prefix)
		out.Float64(float64(in.FraqInt))
	}
	{
		const prefix string = ",\"fraqTypes\":"
		out.RawString(prefix)
		if in.FraqTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v316, v317 := range in.FraqTypes {
				if v316 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v317))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"ibalgoTypes\":"
		out.RawString(prefix)
		if in.IbalgoTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v318, v319 := range in.IbalgoTypes {
				if v318 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v319))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"increment\":"
		out.RawString(prefix)
		out.Float64(float64(in.Increment))
	}
	{
		const prefix string = ",\"incrementDigits\":"
		out.RawString(prefix)
		out.Int64(int64(in.IncrementDigits))
	}
	{
		const prefix string = ",\"limitPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.LimitPrice))
	}
	{
		const prefix string = ",\"negativeCapable\":"
		out.RawString(prefix)
		out.Bool(bool(in.NegativeCapable))
	}
	{
		const prefix string = ",\"orderDefaults\":"
		out.RawString(prefix)
		if in.OrderDefaults == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v320, v321 := range in.OrderDefaults {
				if v320 > 0 {
					out.RawByte(',')
				}
				if v321 == nil {
					out.RawString("null")
				} else {
					(*v321).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"orderOrigination\":"
		out.RawString(prefix)
		out.Float64(float64(in.OrderOrigination))
	}
	{
		const prefix string = ",\"orderTypes\":"
		out.RawString(prefix)
		if in.OrderTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v322, v323 := range in.OrderTypes {
				if v322 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v323))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"orderTypesOutside\":"
		out.RawString(prefix)
		if in.OrderTypesOutside == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v324, v325 := range in.OrderTypesOutside {
				if v324 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v325))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"preview\":"
		out.RawString(prefix)
		out.Bool(bool(in.Preview))
	}
	{
		const prefix string = ",\"priceMagnifier\":"
		out.RawString(prefix)
		out.Float64(float64(in.PriceMagnifier))
	}
	{
		const prefix string = ",\"sizeIncrement\":"
		out.RawString(prefix)
		out.Int64(int64(in.SizeIncrement))
	}
	{
		const prefix string = ",\"stopprice\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stopprice))
	}
	{
		const prefix string = ",\"tifTypes\":"
		out.RawString(prefix)
		if in.TifTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v326, v327 := range in.TifTypes {
				if v326 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v327))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v328 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item
			if in.IsNull() {
				in.Skip()
				v328 = nil
			} else {
				if v328 == nil {
					v328 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item)
				}
				(*v328).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v328)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v329, v330 := range in {
			if v329 > 0 {
				out.RawByte(',')
			}
			if v330 == nil {
				out.RawString("null")
			} else {
				(*v330).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "allow_sell_long":
			out.Allow_sell_long = bool(in.Bool())
		case "cfi_code":
			out.Cfi_code = string(in.String())
		case "classifier":
			out.Classifier = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = float64(in.Float64())
		case "contract_month":
			out.Contract_month = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "expiry_full":
			out.Expiry_full = float64(in.Float64())
		case "industry":
			out.Industry = string(in.String())
		case "instrument_type":
			out.Instrument_type = string(in.String())
		case "is_zero_commission_security":
			out.Is_zero_commission_security = bool(in.Bool())
		case "local_symbol":
			out.Local_symbol = string(in.String())
		case "maturity_date":
			out.Maturity_date = float64(in.Float64())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "r_t_h":
			out.R_t_h = bool(in.Bool())
		case "right":
			out.Right = string(in.String())
		case "rules":
			if in.IsNull() {
				in.Skip()
				out.Rules = nil
			} else {
				in.Delim('[')
				if out.Rules == nil {
					if !in.IsDelim(']') {
						out.Rules = make([]*Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item, 0, 8)
					} else {
						out.Rules = []*Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item{}
					}
				} else {
					out.Rules = (out.Rules)[:0]
				}
				for !in.IsDelim(']') {
					var v331 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item
					if in.IsNull() {
						in.Skip()
						v331 = nil
					} else {
						if v331 == nil {
							v331 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item)
						}
						(*v331).UnmarshalEasyJSON(in)
					}
					out.Rules = append(out.Rules, v331)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "smart_available":
			out.Smart_available = bool(in.Bool())
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "trading_class":
			out.Trading_class = string(in.String())
		case "underlying_con_id":
			out.Underlying_con_id = float64(in.Float64())
		case "underlying_issuer":
			out.Underlying_issuer = string(in.String())
		case "valid_exchanges":
			out.Valid_exchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"allow_sell_long\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Allow_sell_long))
	}
	{
		const prefix string = ",\"cfi_code\":"
		out.RawString(prefix)
		out.String(string(in.Cfi_code))
	}
	{
		const prefix string = ",\"classifier\":"
		out.RawString(prefix)
		out.String(string(in.Classifier))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Con_id))
	}
	{
		const prefix string = ",\"contract_month\":"
		out.RawString(prefix)
		out.String(string(in.Contract_month))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"expiry_full\":"
		out.RawString(prefix)
		out.Float64(float64(in.Expiry_full))
	}
	{
		const prefix string = ",\"industry\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"instrument_type\":"
		out.RawString(prefix)
		out.String(string(in.Instrument_type))
	}
	{
		const prefix string = ",\"is_zero_commission_security\":"
		out.RawString(prefix)
		out.Bool(bool(in.Is_zero_commission_security))
	}
	{
		const prefix string = ",\"local_symbol\":"
		out.RawString(prefix)
		out.String(string(in.Local_symbol))
	}
	{
		const prefix string = ",\"maturity_date\":"
		out.RawString(prefix)
		out.Float64(float64(in.Maturity_date))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"r_t_h\":"
		out.RawString(prefix)
		out.Bool(bool(in.R_t_h))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"rules\":"
		out.RawString(prefix)
		if in.Rules == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v332, v333 := range in.Rules {
				if v332 > 0 {
					out.RawByte(',')
				}
				if v333 == nil {
					out.RawString("null")
				} else {
					(*v333).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"smart_available\":"
		out.RawString(prefix)
		out.Bool(bool(in.Smart_available))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"trading_class\":"
		out.RawString(prefix)
		out.String(string(in.Trading_class))
	}
	{
		const prefix string = ",\"underlying_con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Underlying_con_id))
	}
	{
		const prefix string = ",\"underlying_issuer\":"
		out.RawString(prefix)
		out.String(string(in.Underlying_issuer))
	}
	{
		const prefix string = ",\"valid_exchanges\":"
		out.RawString(prefix)
		out.String(string(in.Valid_exchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(in *jlexer.Lexer, out *Iserver_Accounts_GET_200_Accounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Accounts_GET_200_Accounts_List, 0, 4)
			} else {
				*out = Iserver_Accounts_GET_200_Accounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v334 string
			v334 = string(in.String())
			*out = append(*out, v334)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(out *jwriter.Writer, in Iserver_Accounts_GET_200_Accounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v335, v336 := range in {
			if v335 > 0 {
				out.RawByte(',')
			}
			out.String(string(v336))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Accounts_GET_200_Accounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Accounts_GET_200_Accounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Accounts_GET_200_Accounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Accounts_GET_200_Accounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(in *jlexer.Lexer, out *Iserver_Accounts_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accounts":
			if in.IsNull() {
				in.Skip()
				out.Accounts = nil
			} else {
				in.Delim('[')
				if out.Accounts == nil {
					if !in.IsDelim(']') {
						out.Accounts = make([]string, 0, 4)
					} else {
						out.Accounts = []string{}
					}
				} else {
					out.Accounts = (out.Accounts)[:0]
				}
				for !in.IsDelim(']') {
					var v337 string
					v337 = string(in.String())
					out.Accounts = append(out.Accounts, v337)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "aliases":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Aliases = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v338 interface{}
					if m, ok := v338.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v338.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v338 = in.Interface()
					}
					(out.Aliases)[key] = v338
					in.WantComma()
				}
				in.Delim('}')
			}
		case "selectedAccount":
			out.SelectedAccount = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(out *jwriter.Writer, in Iserver_Accounts_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accounts\":"
		out.RawString(prefix[1:])
		if in.Accounts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v339, v340 := range in.Accounts {
				if v339 > 0 {
					out.RawByte(',')
				}
				out.String(string(v340))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"aliases\":"
		out.RawString(prefix)
		if in.Aliases == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v341First := true
			for v341Name, v341Value := range in.Aliases {
				if v341First {
					v341First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v341Name))
				out.RawByte(':')
				if m, ok := v341Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v341Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v341Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"selectedAccount\":"
		out.RawString(prefix)
		out.String(string(in.SelectedAccount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Accounts_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Accounts_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Accounts_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Accounts_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(in *jlexer.Lexer, out *Iserver_Account_Trades_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Trades_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Account_Trades_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v342 *Trade
			if in.IsNull() {
				in.Skip()
				v342 = nil
			} else {
				if v342 == nil {
					v342 = new(Trade)
				}
				(*v342).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v342)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(out *jwriter.Writer, in Iserver_Account_Trades_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v343, v344 := range in {
			if v343 > 0 {
				out.RawByte(',')
			}
			if v344 == nil {
				out.RawString("null")
			} else {
				(*v344).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Trades_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Trades_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Trades_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Trades_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(in *jlexer.Lexer, out *Iserver_Account_Pnl_Partitioned_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.AcctId = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v345 interface{}
					if m, ok := v345.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v345.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v345 = in.Interface()
					}
					(out.AcctId)[key] = v345
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(out *jwriter.Writer, in Iserver_Account_Pnl_Partitioned_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		if in.AcctId == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v346First := true
			for v346Name, v346Value := range in.AcctId {
				if v346First {
					v346First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v346Name))
				out.RawByte(':')
				if m, ok := v346Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v346Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v346Value))
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Pnl_Partitioned_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Pnl_Partitioned_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Pnl_Partitioned_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Pnl_Partitioned_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(in *jlexer.Lexer, out *Iserver_Account_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "set":
			out.Set = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(out *jwriter.Writer, in Iserver_Account_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"set\":"
		out.RawString(prefix)
		out.Bool(bool(in.Set))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_Request_Filters_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_GET_Request_Filters_List, 0, 4)
			} else {
				*out = Iserver_Account_Orders_GET_Request_Filters_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v347 string
			v347 = string(in.String())
			*out = append(*out, v347)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(out *jwriter.Writer, in Iserver_Account_Orders_GET_Request_Filters_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v348, v349 := range in {
			if v348 > 0 {
				out.RawByte(',')
			}
			out.String(string(v349))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_Request_Filters_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_Request_Filters_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request_Filters_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request_Filters_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filters":
			if in.IsNull() {
				in.Skip()
				out.Filters = nil
			} else {
				in.Delim('[')
				if out.Filters == nil {
					if !in.IsDelim(']') {
						out.Filters = make([]string, 0, 4)
					} else {
						out.Filters = []string{}
					}
				} else {
					out.Filters = (out.Filters)[:0]
				}
				for !in.IsDelim(']') {
					var v350 string
					v350 = string(in.String())
					out.Filters = append(out.Filters, v350)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(out *jwriter.Writer, in Iserver_Account_Orders_GET_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix[1:])
		if in.Filters == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v351, v352 := range in.Filters {
				if v351 > 0 {
					out.RawByte(',')
				}
				out.String(string(v352))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200_Orders_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acct":
			out.Acct = string(in.String())
		case "bgColor":
			out.BgColor = string(in.String())
		case "cashCcy":
			out.CashCcy = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = float64(in.Float64())
		case "description1":
			out.Description1 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "fgColor":
			out.FgColor = string(in.String())
		case "filledQuantity":
			out.FilledQuantity = float64(in.Float64())
		case "lastExecutionTime":
			out.LastExecutionTime = float64(in.Float64())
		case "lastExecutionTime_r":
			out.LastExecutionTime_r = float64(in.Float64())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderDesc":
			out.OrderDesc = string(in.String())
		case "orderId":
			out.OrderId = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "origOrderType":
			out.OrigOrderType = string(in.String())
		case "price":
			out.Price = float64(in.Float64())
		case "remainingQuantity":
			out.RemainingQuantity = float64(in.Float64())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "sizeAndFills":
			out.SizeAndFills = float64(in.Float64())
		case "status":
			out.Status = string(in.String())
		case "supportsTaxOpt":
			out.SupportsTaxOpt = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "timeInForce":
			out.TimeInForce = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(out *jwriter.Writer, in Iserver_Account_Orders_GET_200_Orders_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acct\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acct))
	}
	{
		const prefix string = ",\"bgColor\":"
		out.RawString(prefix)
		out.String(string(in.BgColor))
	}
	{
		const prefix string = ",\"cashCcy\":"
		out.RawString(prefix)
		out.String(string(in.CashCcy))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"description1\":"
		out.RawString(prefix)
		out.String(string(in.Description1))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"fgColor\":"
		out.RawString(prefix)
		out.String(string(in.FgColor))
	}
	{
		const prefix string = ",\"filledQuantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.FilledQuantity))
	}
	{
		const prefix string = ",\"lastExecutionTime\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastExecutionTime))
	}
	{
		const prefix string = ",\"lastExecutionTime_r\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastExecutionTime_r))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderDesc\":"
		out.RawString(prefix)
		out.String(string(in.OrderDesc))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"origOrderType\":"
		out.RawString(prefix)
		out.String(string(in.OrigOrderType))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"remainingQuantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.RemainingQuantity))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"sizeAndFills\":"
		out.RawString(prefix)
		out.Float64(float64(in.SizeAndFills))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"supportsTaxOpt\":"
		out.RawString(prefix)
		out.Float64(float64(in.SupportsTaxOpt))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"timeInForce\":"
		out.RawString(prefix)
		out.String(string(in.TimeInForce))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200_Orders_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_GET_200_Orders_List, 0, 8)
			} else {
				*out = Iserver_Account_Orders_GET_200_Orders_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v353 *Iserver_Account_Orders_GET_200_Orders_List_Item
			if in.IsNull() {
				in.Skip()
				v353 = nil
			} else {
				if v353 == nil {
					v353 = new(Iserver_Account_Orders_GET_200_Orders_List_Item)
				}
				(*v353).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v353)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(out *jwriter.Writer, in Iserver_Account_Orders_GET_200_Orders_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v354, v355 := range in {
			if v354 > 0 {
				out.RawByte(',')
			}
			if v355 == nil {
				out.RawString("null")
			} else {
				(*v355).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "orders":
			if in.IsNull() {
				in.Skip()
				out.Orders = nil
			} else {
				in.Delim('[')
				if out.Orders == nil {
					if !in.IsDelim(']') {
						out.Orders = make([]*Iserver_Account_Orders_GET_200_Orders_List_Item, 0, 8)
					} else {
						out.Orders = []*Iserver_Account_Orders_GET_200_Orders_List_Item{}
					}
				} else {
					out.Orders = (out.Orders)[:0]
				}
				for !in.IsDelim(']') {
					var v356 *Iserver_Account_Orders_GET_200_Orders_List_Item
					if in.IsNull() {
						in.Skip()
						v356 = nil
					} else {
						if v356 == nil {
							v356 = new(Iserver_Account_Orders_GET_200_Orders_List_Item)
						}
						(*v356).UnmarshalEasyJSON(in)
					}
					out.Orders = append(out.Orders, v356)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "snapshot":
			out.Snapshot = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(out *jwriter.Writer, in Iserver_Account_Orders_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"orders\":"
		out.RawString(prefix[1:])
		if in.Orders == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v357, v358 := range in.Orders {
				if v357 > 0 {
					out.RawByte(',')
				}
				if v358 == nil {
					out.RawString("null")
				} else {
					(*v358).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"snapshot\":"
		out.RawString(prefix)
		out.Bool(bool(in.Snapshot))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v359 string
			v359 = string(in.String())
			*out = append(*out, v359)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v360, v361 := range in {
			if v360 > 0 {
				out.RawByte(',')
			}
			out.String(string(v361))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			if in.IsNull() {
				in.Skip()
				out.Message = nil
			} else {
				in.Delim('[')
				if out.Message == nil {
					if !in.IsDelim(']') {
						out.Message = make([]string, 0, 4)
					} else {
						out.Message = []string{}
					}
				} else {
					out.Message = (out.Message)[:0]
				}
				for !in.IsDelim(']') {
					var v362 string
					v362 = string(in.String())
					out.Message = append(out.Message, v362)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		if in.Message == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v363, v364 := range in.Message {
				if v363 > 0 {
					out.RawByte(',')
				}
				out.String(string(v364))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_FaGroup_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_Orders_FaGroup_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v365 *Iserver_Account_Orders_FaGroup_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v365 = nil
			} else {
				if v365 == nil {
					v365 = new(Iserver_Account_Orders_FaGroup_POST_200_List_Item)
				}
				(*v365).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v365)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v366, v367 := range in {
			if v366 > 0 {
				out.RawByte(',')
			}
			if v367 == nil {
				out.RawString("null")
			} else {
				(*v367).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_Request_Orders_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_Request_Orders_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v368 *OrderRequest
			if in.IsNull() {
				in.Skip()
				v368 = nil
			} else {
				if v368 == nil {
					v368 = new(OrderRequest)
				}
				(*v368).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v368)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_Request_Orders_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v369, v370 := range in {
			if v369 > 0 {
				out.RawByte(',')
			}
			if v370 == nil {
				out.RawString("null")
			} else {
				(*v370).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request_Orders_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request_Orders_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "orders":
			if in.IsNull() {
				in.Skip()
				out.Orders = nil
			} else {
				in.Delim('[')
				if out.Orders == nil {
					if !in.IsDelim(']') {
						out.Orders = make([]*OrderRequest, 0, 8)
					} else {
						out.Orders = []*OrderRequest{}
					}
				} else {
					out.Orders = (out.Orders)[:0]
				}
				for !in.IsDelim(']') {
					var v371 *OrderRequest
					if in.IsNull() {
						in.Skip()
						v371 = nil
					} else {
						if v371 == nil {
							v371 = new(OrderRequest)
						}
						(*v371).UnmarshalEasyJSON(in)
					}
					out.Orders = append(out.Orders, v371)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"orders\":"
		out.RawString(prefix[1:])
		if in.Orders == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v372, v373 := range in.Orders {
				if v372 > 0 {
					out.RawByte(',')
				}
				if v373 == nil {
					out.RawString("null")
				} else {
					(*v373).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v374 string
			v374 = string(in.String())
			*out = append(*out, v374)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v375, v376 := range in {
			if v375 > 0 {
				out.RawByte(',')
			}
			out.String(string(v376))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			if in.IsNull() {
				in.Skip()
				out.Message = nil
			} else {
				in.Delim('[')
				if out.Message == nil {
					if !in.IsDelim(']') {
						out.Message = make([]string, 0, 4)
					} else {
						out.Message = []string{}
					}
				} else {
					out.Message = (out.Message)[:0]
				}
				for !in.IsDelim(']') {
					var v377 string
					v377 = string(in.String())
					out.Message = append(out.Message, v377)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		if in.Message == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v378, v379 := range in.Message {
				if v378 > 0 {
					out.RawByte(',')
				}
				out.String(string(v379))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v380 *Iserver_Account_AccountId_Orders_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v380 = nil
			} else {
				if v380 == nil {
					v380 = new(Iserver_Account_AccountId_Orders_POST_200_List_Item)
				}
				(*v380).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v380)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v381, v382 := range in {
			if v381 > 0 {
				out.RawByte(',')
			}
			if v382 == nil {
				out.RawString("null")
			} else {
				(*v382).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			out.Amount = string(in.String())
		case "commission":
			out.Commission = string(in.String())
		case "total":
			out.Total = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"commission\":"
		out.RawString(prefix)
		out.String(string(in.Commission))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		out.String(string(in.Total))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			if in.IsNull() {
				in.Skip()
				out.Amount = nil
			} else {
				if out.Amount == nil {
					out.Amount = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Amount)
				}
				(*out.Amount).UnmarshalEasyJSON(in)
			}
		case "equity":
			if in.IsNull() {
				in.Skip()
				out.Equity = nil
			} else {
				if out.Equity == nil {
					out.Equity = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Equity)
				}
				(*out.Equity).UnmarshalEasyJSON(in)
			}
		case "error":
			out.Error = string(in.String())
		case "initial":
			if in.IsNull() {
				in.Skip()
				out.Initial = nil
			} else {
				if out.Initial == nil {
					out.Initial = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Initial)
				}
				(*out.Initial).UnmarshalEasyJSON(in)
			}
		case "maintenance":
			if in.IsNull() {
				in.Skip()
				out.Maintenance = nil
			} else {
				if out.Maintenance == nil {
					out.Maintenance = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance)
				}
				(*out.Maintenance).UnmarshalEasyJSON(in)
			}
		case "warn":
			out.Warn = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		if in.Amount == nil {
			out.RawString("null")
		} else {
			(*in.Amount).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		if in.Equity == nil {
			out.RawString("null")
		} else {
			(*in.Equity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"initial\":"
		out.RawString(prefix)
		if in.Initial == nil {
			out.RawString("null")
		} else {
			(*in.Initial).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintenance\":"
		out.RawString(prefix)
		if in.Maintenance == nil {
			out.RawString("null")
		} else {
			(*in.Maintenance).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"warn\":"
		out.RawString(prefix)
		out.String(string(in.Warn))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v383 string
			v383 = string(in.String())
			*out = append(*out, v383)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v384, v385 := range in {
			if v384 > 0 {
				out.RawByte(',')
			}
			out.String(string(v385))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			if in.IsNull() {
				in.Skip()
				out.Message = nil
			} else {
				in.Delim('[')
				if out.Message == nil {
					if !in.IsDelim(']') {
						out.Message = make([]string, 0, 4)
					} else {
						out.Message = []string{}
					}
				} else {
					out.Message = (out.Message)[:0]
				}
				for !in.IsDelim(']') {
					var v386 string
					v386 = string(in.String())
					out.Message = append(out.Message, v386)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		if in.Message == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v387, v388 := range in.Message {
				if v387 > 0 {
					out.RawByte(',')
				}
				out.String(string(v388))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Order_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v389 *Iserver_Account_AccountId_Order_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v389 = nil
			} else {
				if v389 == nil {
					v389 = new(Iserver_Account_AccountId_Order_POST_200_List_Item)
				}
				(*v389).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v389)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v390, v391 := range in {
			if v390 > 0 {
				out.RawByte(',')
			}
			if v391 == nil {
				out.RawString("null")
			} else {
				(*v391).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "local_order_id":
			out.Local_order_id = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		case "order_status":
			out.Order_status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"local_order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Local_order_id))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_OrderId_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Order_OrderId_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v392 *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v392 = nil
			} else {
				if v392 == nil {
					v392 = new(Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item)
				}
				(*v392).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v392)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v393, v394 := range in {
			if v393 > 0 {
				out.RawByte(',')
			}
			if v394 == nil {
				out.RawString("null")
			} else {
				(*v394).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_DELETE_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "msg":
			out.Msg = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_DELETE_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_DELETE_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_DELETE_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_DELETE_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_DELETE_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alerts_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "alert_active":
			out.Alert_active = int64(in.Int64())
		case "alert_name":
			out.Alert_name = string(in.String())
		case "alert_repeatable":
			out.Alert_repeatable = int64(in.Int64())
		case "alert_triggered":
			out.Alert_triggered = bool(in.Bool())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_time":
			out.Order_time = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(out *jwriter.Writer, in Iserver_Account_AccountId_Alerts_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"alert_active\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_active))
	}
	{
		const prefix string = ",\"alert_name\":"
		out.RawString(prefix)
		out.String(string(in.Alert_name))
	}
	{
		const prefix string = ",\"alert_repeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_repeatable))
	}
	{
		const prefix string = ",\"alert_triggered\":"
		out.RawString(prefix)
		out.Bool(bool(in.Alert_triggered))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_time\":"
		out.RawString(prefix)
		out.String(string(in.Order_time))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alerts_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Alerts_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Alerts_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v395 *Iserver_Account_AccountId_Alerts_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v395 = nil
			} else {
				if v395 == nil {
					v395 = new(Iserver_Account_AccountId_Alerts_GET_200_List_Item)
				}
				(*v395).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v395)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(out *jwriter.Writer, in Iserver_Account_AccountId_Alerts_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v396, v397 := range in {
			if v396 > 0 {
				out.RawByte(',')
			}
			if v397 == nil {
				out.RawString("null")
			} else {
				(*v397).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		case "warning_message":
			out.Warning_message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"warning_message\":"
		out.RawString(prefix)
		out.String(string(in.Warning_message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "failure_list":
			out.Failure_list = string(in.String())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_AlertId_DELETE_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"failure_list\":"
		out.RawString(prefix[1:])
		out.String(string(in.Failure_list))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_AlertId_DELETE_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_AlertId_DELETE_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_Activate_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "alertActive":
			out.AlertActive = int64(in.Int64())
		case "alertId":
			out.AlertId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_Activate_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"alertActive\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AlertActive))
	}
	{
		const prefix string = ",\"alertId\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlertId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_Activate_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "failure_list":
			out.Failure_list = string(in.String())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_Activate_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"failure_list\":"
		out.RawString(prefix[1:])
		out.String(string(in.Failure_list))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(in *jlexer.Lexer, out *Inds_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(out *jwriter.Writer, in Inds_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Inds_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Inds_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Inds_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Inds_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(in *jlexer.Lexer, out *Inds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Inds_List, 0, 8)
			} else {
				*out = Inds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v398 *Inds_List_Item
			if in.IsNull() {
				in.Skip()
				v398 = nil
			} else {
				if v398 == nil {
					v398 = new(Inds_List_Item)
				}
				(*v398).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v398)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(out *jwriter.Writer, in Inds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v399, v400 := range in {
			if v399 > 0 {
				out.RawByte(',')
			}
			if v400 == nil {
				out.RawString("null")
			} else {
				(*v400).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Inds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Inds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Inds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Inds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "salutation":
			out.Salutation = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"salutation\":"
		out.RawString(prefix)
		out.String(string(in.Salutation))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v401 map[string]interface{}
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				v401 = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v402 interface{}
					if m, ok := v402.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v402.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v402 = in.Interface()
					}
					(v401)[key] = v402
					in.WantComma()
				}
				in.Delim('}')
			}
			*out = append(*out, v401)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v403, v404 := range in {
			if v403 > 0 {
				out.RawByte(',')
			}
			if v404 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
				out.RawString(`null`)
			} else {
				out.RawByte('{')
				v405First := true
				for v405Name, v405Value := range v404 {
					if v405First {
						v405First = false
					} else {
						out.RawByte(',')
					}
					out.String(string(v405Name))
					out.RawByte(':')
					if m, ok := v405Value.(easyjson.Marshaler); ok {
						m.MarshalEasyJSON(out)
					} else if m, ok := v405Value.(json.Marshaler); ok {
						out.Raw(m.MarshalJSON())
					} else {
						out.Raw(json.Marshal(v405Value))
					}
				}
				out.RawByte('}')
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "city":
			out.City = string(in.String())
		case "compact":
			out.Compact = string(in.String())
		case "country":
			out.Country = string(in.String())
		case "countryCode":
			out.CountryCode = string(in.String())
		case "postalCode":
			out.PostalCode = string(in.String())
		case "state":
			out.State = string(in.String())
		case "street":
			out.Street = string(in.String())
		case "street2":
			out.Street2 = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix[1:])
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"compact\":"
		out.RawString(prefix)
		out.String(string(in.Compact))
	}
	{
		const prefix string = ",\"country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"countryCode\":"
		out.RawString(prefix)
		out.String(string(in.CountryCode))
	}
	{
		const prefix string = ",\"postalCode\":"
		out.RawString(prefix)
		out.String(string(in.PostalCode))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.State))
	}
	{
		const prefix string = ",\"street\":"
		out.RawString(prefix)
		out.String(string(in.Street))
	}
	{
		const prefix string = ",\"street2\":"
		out.RawString(prefix)
		out.String(string(in.Street2))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "address":
			if in.IsNull() {
				in.Skip()
				out.Address = nil
			} else {
				if out.Address == nil {
					out.Address = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address)
				}
				(*out.Address).UnmarshalEasyJSON(in)
			}
		case "canSign":
			out.CanSign = bool(in.Bool())
		case "canTrade":
			out.CanTrade = bool(in.Bool())
		case "identDocs":
			if in.IsNull() {
				in.Skip()
				out.IdentDocs = nil
			} else {
				in.Delim('[')
				if out.IdentDocs == nil {
					if !in.IsDelim(']') {
						out.IdentDocs = make([]map[string]interface{}, 0, 8)
					} else {
						out.IdentDocs = []map[string]interface{}{}
					}
				} else {
					out.IdentDocs = (out.IdentDocs)[:0]
				}
				for !in.IsDelim(']') {
					var v406 map[string]interface{}
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('{')
						v406 = make(map[string]interface{})
						for !in.IsDelim('}') {
							key := string(in.String())
							in.WantColon()
							var v407 interface{}
							if m, ok := v407.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v407.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v407 = in.Interface()
							}
							(v406)[key] = v407
							in.WantComma()
						}
						in.Delim('}')
					}
					out.IdentDocs = append(out.IdentDocs, v406)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "name":
			if in.IsNull() {
				in.Skip()
				out.Name = nil
			} else {
				if out.Name == nil {
					out.Name = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name)
				}
				(*out.Name).UnmarshalEasyJSON(in)
			}
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"address\":"
		out.RawString(prefix[1:])
		if in.Address == nil {
			out.RawString("null")
		} else {
			(*in.Address).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"canSign\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanSign))
	}
	{
		const prefix string = ",\"canTrade\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanTrade))
	}
	{
		const prefix string = ",\"identDocs\":"
		out.RawString(prefix)
		if in.IdentDocs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v408, v409 := range in.IdentDocs {
				if v408 > 0 {
					out.RawByte(',')
				}
				if v409 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
					out.RawString(`null`)
				} else {
					out.RawByte('{')
					v410First := true
					for v410Name, v410Value := range v409 {
						if v410First {
							v410First = false
						} else {
							out.RawByte(',')
						}
						out.String(string(v410Name))
						out.RawByte(':')
						if m, ok := v410Value.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v410Value.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v410Value))
						}
					}
					out.RawByte('}')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		if in.Name == nil {
			out.RawString("null")
		} else {
			(*in.Name).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List_Item_Entities_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List_Item_Entities_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v411 *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item
			if in.IsNull() {
				in.Skip()
				v411 = nil
			} else {
				if v411 == nil {
					v411 = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item)
				}
				(*v411).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v411)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v412, v413 := range in {
			if v412 > 0 {
				out.RawByte(',')
			}
			if v413 == nil {
				out.RawString("null")
			} else {
				(*v413).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "applicantId":
			out.ApplicantId = float64(in.Float64())
		case "entities":
			if in.IsNull() {
				in.Skip()
				out.Entities = nil
			} else {
				in.Delim('[')
				if out.Entities == nil {
					if !in.IsDelim(']') {
						out.Entities = make([]*Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item, 0, 8)
					} else {
						out.Entities = []*Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item{}
					}
				} else {
					out.Entities = (out.Entities)[:0]
				}
				for !in.IsDelim(']') {
					var v414 *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item
					if in.IsNull() {
						in.Skip()
						v414 = nil
					} else {
						if v414 == nil {
							v414 = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item)
						}
						(*v414).UnmarshalEasyJSON(in)
					}
					out.Entities = append(out.Entities, v414)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"applicantId\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.ApplicantId))
	}
	{
		const prefix string = ",\"entities\":"
		out.RawString(prefix)
		if in.Entities == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v415, v416 := range in.Entities {
				if v415 > 0 {
					out.RawByte(',')
				}
				if v416 == nil {
					out.RawString("null")
				} else {
					(*v416).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v417 *Ibcust_Entity_Info_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v417 = nil
			} else {
				if v417 == nil {
					v417 = new(Ibcust_Entity_Info_GET_200_List_Item)
				}
				(*v417).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v417)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v418, v419 := range in {
			if v418 > 0 {
				out.RawByte(',')
			}
			if v419 == nil {
				out.RawString("null")
			} else {
				(*v419).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(in *jlexer.Lexer, out *HistoryResult_Bars) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "close":
			out.Close = float64(in.Float64())
		case "count":
			out.Count = float64(in.Float64())
		case "endTime":
			out.EndTime = string(in.String())
		case "high":
			out.High = float64(in.Float64())
		case "low":
			out.Low = float64(in.Float64())
		case "open":
			out.Open = float64(in.Float64())
		case "time":
			out.Time = string(in.String())
		case "volume":
			out.Volume = float64(in.Float64())
		case "weightedAvg":
			out.WeightedAvg = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(out *jwriter.Writer, in HistoryResult_Bars) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"close\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Close))
	}
	{
		const prefix string = ",\"count\":"
		out.RawString(prefix)
		out.Float64(float64(in.Count))
	}
	{
		const prefix string = ",\"endTime\":"
		out.RawString(prefix)
		out.String(string(in.EndTime))
	}
	{
		const prefix string = ",\"high\":"
		out.RawString(prefix)
		out.Float64(float64(in.High))
	}
	{
		const prefix string = ",\"low\":"
		out.RawString(prefix)
		out.Float64(float64(in.Low))
	}
	{
		const prefix string = ",\"open\":"
		out.RawString(prefix)
		out.Float64(float64(in.Open))
	}
	{
		const prefix string = ",\"time\":"
		out.RawString(prefix)
		out.String(string(in.Time))
	}
	{
		const prefix string = ",\"volume\":"
		out.RawString(prefix)
		out.Float64(float64(in.Volume))
	}
	{
		const prefix string = ",\"weightedAvg\":"
		out.RawString(prefix)
		out.Float64(float64(in.WeightedAvg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryResult_Bars) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryResult_Bars) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryResult_Bars) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryResult_Bars) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(in *jlexer.Lexer, out *HistoryResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "bars":
			if in.IsNull() {
				in.Skip()
				out.Bars = nil
			} else {
				if out.Bars == nil {
					out.Bars = new(HistoryResult_Bars)
				}
				(*out.Bars).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(out *jwriter.Writer, in HistoryResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"bars\":"
		out.RawString(prefix[1:])
		if in.Bars == nil {
			out.RawString("null")
		} else {
			(*in.Bars).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(in *jlexer.Lexer, out *HistoryData_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "c":
			out.C = float64(in.Float64())
		case "h":
			out.H = float64(in.Float64())
		case "l":
			out.L = float64(in.Float64())
		case "o":
			out.O = float64(in.Float64())
		case "t":
			out.T = float64(in.Float64())
		case "v":
			out.V = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(out *jwriter.Writer, in HistoryData_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"c\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.C))
	}
	{
		const prefix string = ",\"h\":"
		out.RawString(prefix)
		out.Float64(float64(in.H))
	}
	{
		const prefix string = ",\"l\":"
		out.RawString(prefix)
		out.Float64(float64(in.L))
	}
	{
		const prefix string = ",\"o\":"
		out.RawString(prefix)
		out.Float64(float64(in.O))
	}
	{
		const prefix string = ",\"t\":"
		out.RawString(prefix)
		out.Float64(float64(in.T))
	}
	{
		const prefix string = ",\"v\":"
		out.RawString(prefix)
		out.Float64(float64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(in *jlexer.Lexer, out *HistoryData_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(HistoryData_Data_List, 0, 8)
			} else {
				*out = HistoryData_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v420 *HistoryData_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v420 = nil
			} else {
				if v420 == nil {
					v420 = new(HistoryData_Data_List_Item)
				}
				(*v420).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v420)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(out *jwriter.Writer, in HistoryData_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v421, v422 := range in {
			if v421 > 0 {
				out.RawByte(',')
			}
			if v422 == nil {
				out.RawString("null")
			} else {
				(*v422).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(in *jlexer.Lexer, out *HistoryData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "barLength":
			out.BarLength = int64(in.Int64())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*HistoryData_Data_List_Item, 0, 8)
					} else {
						out.Data = []*HistoryData_Data_List_Item{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v423 *HistoryData_Data_List_Item
					if in.IsNull() {
						in.Skip()
						v423 = nil
					} else {
						if v423 == nil {
							v423 = new(HistoryData_Data_List_Item)
						}
						(*v423).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v423)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "high":
			out.High = string(in.String())
		case "low":
			out.Low = string(in.String())
		case "mdAvailability":
			out.MdAvailability = string(in.String())
		case "messageVersion":
			out.MessageVersion = int64(in.Int64())
		case "mktDataDelay":
			out.MktDataDelay = int64(in.Int64())
		case "negativeCapable":
			out.NegativeCapable = bool(in.Bool())
		case "outsideRth":
			out.OutsideRth = bool(in.Bool())
		case "points":
			out.Points = int64(in.Int64())
		case "priceDisplayRule":
			out.PriceDisplayRule = int64(in.Int64())
		case "priceDisplayValue":
			out.PriceDisplayValue = string(in.String())
		case "priceFactor":
			out.PriceFactor = int64(in.Int64())
		case "startTime":
			out.StartTime = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "timePeriod":
			out.TimePeriod = string(in.String())
		case "tradingDayDuration":
			out.TradingDayDuration = int64(in.Int64())
		case "travelTime":
			out.TravelTime = int64(in.Int64())
		case "volumeFactor":
			out.VolumeFactor = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(out *jwriter.Writer, in HistoryData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"barLength\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.BarLength))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v424, v425 := range in.Data {
				if v424 > 0 {
					out.RawByte(',')
				}
				if v425 == nil {
					out.RawString("null")
				} else {
					(*v425).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"high\":"
		out.RawString(prefix)
		out.String(string(in.High))
	}
	{
		const prefix string = ",\"low\":"
		out.RawString(prefix)
		out.String(string(in.Low))
	}
	{
		const prefix string = ",\"mdAvailability\":"
		out.RawString(prefix)
		out.String(string(in.MdAvailability))
	}
	{
		const prefix string = ",\"messageVersion\":"
		out.RawString(prefix)
		out.Int64(int64(in.MessageVersion))
	}
	{
		const prefix string = ",\"mktDataDelay\":"
		out.RawString(prefix)
		out.Int64(int64(in.MktDataDelay))
	}
	{
		const prefix string = ",\"negativeCapable\":"
		out.RawString(prefix)
		out.Bool(bool(in.NegativeCapable))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRth))
	}
	{
		const prefix string = ",\"points\":"
		out.RawString(prefix)
		out.Int64(int64(in.Points))
	}
	{
		const prefix string = ",\"priceDisplayRule\":"
		out.RawString(prefix)
		out.Int64(int64(in.PriceDisplayRule))
	}
	{
		const prefix string = ",\"priceDisplayValue\":"
		out.RawString(prefix)
		out.String(string(in.PriceDisplayValue))
	}
	{
		const prefix string = ",\"priceFactor\":"
		out.RawString(prefix)
		out.Int64(int64(in.PriceFactor))
	}
	{
		const prefix string = ",\"startTime\":"
		out.RawString(prefix)
		out.String(string(in.StartTime))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"timePeriod\":"
		out.RawString(prefix)
		out.String(string(in.TimePeriod))
	}
	{
		const prefix string = ",\"tradingDayDuration\":"
		out.RawString(prefix)
		out.Int64(int64(in.TradingDayDuration))
	}
	{
		const prefix string = ",\"travelTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.TravelTime))
	}
	{
		const prefix string = ",\"volumeFactor\":"
		out.RawString(prefix)
		out.Int64(int64(in.VolumeFactor))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(in *jlexer.Lexer, out *Fyi_Unreadnumber_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BN":
			out.BN = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(out *jwriter.Writer, in Fyi_Unreadnumber_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BN\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.BN))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Unreadnumber_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Unreadnumber_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Unreadnumber_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Unreadnumber_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(in *jlexer.Lexer, out *Fyi_Settings_Typecode_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "enabled":
			out.Enabled = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(out *jwriter.Writer, in Fyi_Settings_Typecode_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"enabled\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Enabled))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_Typecode_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_Typecode_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_Typecode_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_Typecode_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(in *jlexer.Lexer, out *Fyi_Settings_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "A":
			out.A = int64(in.Int64())
		case "FC":
			out.FC = string(in.String())
		case "FD":
			out.FD = string(in.String())
		case "FN":
			out.FN = string(in.String())
		case "H":
			out.H = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(out *jwriter.Writer, in Fyi_Settings_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"A\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.A))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	{
		const prefix string = ",\"FD\":"
		out.RawString(prefix)
		out.String(string(in.FD))
	}
	{
		const prefix string = ",\"FN\":"
		out.RawString(prefix)
		out.String(string(in.FN))
	}
	{
		const prefix string = ",\"H\":"
		out.RawString(prefix)
		out.Int64(int64(in.H))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(in *jlexer.Lexer, out *Fyi_Settings_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Fyi_Settings_GET_200_List, 0, 8)
			} else {
				*out = Fyi_Settings_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v426 *Fyi_Settings_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v426 = nil
			} else {
				if v426 == nil {
					v426 = new(Fyi_Settings_GET_200_List_Item)
				}
				(*v426).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v426)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(out *jwriter.Writer, in Fyi_Settings_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v427, v428 := range in {
			if v427 > 0 {
				out.RawByte(',')
			}
			if v428 == nil {
				out.RawString("null")
			} else {
				(*v428).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(in *jlexer.Lexer, out *Fyi_Disclaimer_Typecode_PUT_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(out *jwriter.Writer, in Fyi_Disclaimer_Typecode_PUT_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Disclaimer_Typecode_PUT_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Disclaimer_Typecode_PUT_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_PUT_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_PUT_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(in *jlexer.Lexer, out *Fyi_Disclaimer_Typecode_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "DT":
			out.DT = string(in.String())
		case "FC":
			out.FC = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(out *jwriter.Writer, in Fyi_Disclaimer_Typecode_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"DT\":"
		out.RawString(prefix[1:])
		out.String(string(in.DT))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Disclaimer_Typecode_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Disclaimer_Typecode_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200_E_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "A":
			out.A = string(in.String())
		case "I":
			out.I = string(in.String())
		case "NM":
			out.NM = string(in.String())
		case "UI":
			out.UI = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200_E_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"A\":"
		out.RawString(prefix[1:])
		out.String(string(in.A))
	}
	{
		const prefix string = ",\"I\":"
		out.RawString(prefix)
		out.String(string(in.I))
	}
	{
		const prefix string = ",\"NM\":"
		out.RawString(prefix)
		out.String(string(in.NM))
	}
	{
		const prefix string = ",\"UI\":"
		out.RawString(prefix)
		out.String(string(in.UI))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200_E_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Fyi_Deliveryoptions_GET_200_E_List, 0, 8)
			} else {
				*out = Fyi_Deliveryoptions_GET_200_E_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v429 *Fyi_Deliveryoptions_GET_200_E_List_Item
			if in.IsNull() {
				in.Skip()
				v429 = nil
			} else {
				if v429 == nil {
					v429 = new(Fyi_Deliveryoptions_GET_200_E_List_Item)
				}
				(*v429).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v429)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200_E_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v430, v431 := range in {
			if v430 > 0 {
				out.RawByte(',')
			}
			if v431 == nil {
				out.RawString("null")
			} else {
				(*v431).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "E":
			if in.IsNull() {
				in.Skip()
				out.E = nil
			} else {
				in.Delim('[')
				if out.E == nil {
					if !in.IsDelim(']') {
						out.E = make([]*Fyi_Deliveryoptions_GET_200_E_List_Item, 0, 8)
					} else {
						out.E = []*Fyi_Deliveryoptions_GET_200_E_List_Item{}
					}
				} else {
					out.E = (out.E)[:0]
				}
				for !in.IsDelim(']') {
					var v432 *Fyi_Deliveryoptions_GET_200_E_List_Item
					if in.IsNull() {
						in.Skip()
						v432 = nil
					} else {
						if v432 == nil {
							v432 = new(Fyi_Deliveryoptions_GET_200_E_List_Item)
						}
						(*v432).UnmarshalEasyJSON(in)
					}
					out.E = append(out.E, v432)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "M":
			out.M = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"E\":"
		out.RawString(prefix[1:])
		if in.E == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v433, v434 := range in.E {
				if v433 > 0 {
					out.RawByte(',')
				}
				if v434 == nil {
					out.RawString("null")
				} else {
					(*v434).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"M\":"
		out.RawString(prefix)
		out.Int64(int64(in.M))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Email_PUT_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(out *jwriter.Writer, in Fyi_Deliveryoptions_Email_PUT_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Email_PUT_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Email_PUT_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Email_PUT_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Email_PUT_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Device_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "deviceId":
			out.DeviceId = string(in.String())
		case "devicename":
			out.Devicename = string(in.String())
		case "enabled":
			out.Enabled = bool(in.Bool())
		case "uiName":
			out.UiName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(out *jwriter.Writer, in Fyi_Deliveryoptions_Device_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"deviceId\":"
		out.RawString(prefix[1:])
		out.String(string(in.DeviceId))
	}
	{
		const prefix string = ",\"devicename\":"
		out.RawString(prefix)
		out.String(string(in.Devicename))
	}
	{
		const prefix string = ",\"enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.Enabled))
	}
	{
		const prefix string = ",\"uiName\":"
		out.RawString(prefix)
		out.String(string(in.UiName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Device_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(out *jwriter.Writer, in Fyi_Deliveryoptions_Device_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(in *jlexer.Lexer, out *Futures_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = int64(in.Int64())
		case "expirationDate":
			out.ExpirationDate = string(in.String())
		case "ltd":
			out.Ltd = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "underlyingConid":
			out.UnderlyingConid = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(out *jwriter.Writer, in Futures_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"expirationDate\":"
		out.RawString(prefix)
		out.String(string(in.ExpirationDate))
	}
	{
		const prefix string = ",\"ltd\":"
		out.RawString(prefix)
		out.String(string(in.Ltd))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"underlyingConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UnderlyingConid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Futures_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Futures_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Futures_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Futures_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(in *jlexer.Lexer, out *Futures_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Futures_List, 0, 8)
			} else {
				*out = Futures_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v435 *Futures_List_Item
			if in.IsNull() {
				in.Skip()
				v435 = nil
			} else {
				if v435 == nil {
					v435 = new(Futures_List_Item)
				}
				(*v435).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v435)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(out *jwriter.Writer, in Futures_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v436, v437 := range in {
			if v436 > 0 {
				out.RawByte(',')
			}
			if v437 == nil {
				out.RawString("null")
			} else {
				(*v437).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Futures_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Futures_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Futures_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Futures_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(in *jlexer.Lexer, out *Events_List_Item_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Events_List_Item_Conids_List, 0, 4)
			} else {
				*out = Events_List_Item_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v438 string
			v438 = string(in.String())
			*out = append(*out, v438)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(out *jwriter.Writer, in Events_List_Item_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v439, v440 := range in {
			if v439 > 0 {
				out.RawByte(',')
			}
			out.String(string(v440))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List_Item_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List_Item_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List_Item_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List_Item_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(in *jlexer.Lexer, out *Events_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conids":
			if in.IsNull() {
				in.Skip()
				out.Conids = nil
			} else {
				in.Delim('[')
				if out.Conids == nil {
					if !in.IsDelim(']') {
						out.Conids = make([]string, 0, 4)
					} else {
						out.Conids = []string{}
					}
				} else {
					out.Conids = (out.Conids)[:0]
				}
				for !in.IsDelim(']') {
					var v441 string
					v441 = string(in.String())
					out.Conids = append(out.Conids, v441)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "data":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Data = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v442 interface{}
					if m, ok := v442.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v442.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v442 = in.Interface()
					}
					(out.Data)[key] = v442
					in.WantComma()
				}
				in.Delim('}')
			}
		case "event_key":
			out.Event_key = string(in.String())
		case "event_type":
			out.Event_type = string(in.String())
		case "index_date":
			out.Index_date = string(in.String())
		case "index_date_type":
			out.Index_date_type = string(in.String())
		case "source":
			out.Source = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "tooltips":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Tooltips = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v443 interface{}
					if m, ok := v443.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v443.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v443 = in.Interface()
					}
					(out.Tooltips)[key] = v443
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(out *jwriter.Writer, in Events_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix[1:])
		if in.Conids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v444, v445 := range in.Conids {
				if v444 > 0 {
					out.RawByte(',')
				}
				out.String(string(v445))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v446First := true
			for v446Name, v446Value := range in.Data {
				if v446First {
					v446First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v446Name))
				out.RawByte(':')
				if m, ok := v446Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v446Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v446Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"event_key\":"
		out.RawString(prefix)
		out.String(string(in.Event_key))
	}
	{
		const prefix string = ",\"event_type\":"
		out.RawString(prefix)
		out.String(string(in.Event_type))
	}
	{
		const prefix string = ",\"index_date\":"
		out.RawString(prefix)
		out.String(string(in.Index_date))
	}
	{
		const prefix string = ",\"index_date_type\":"
		out.RawString(prefix)
		out.String(string(in.Index_date_type))
	}
	{
		const prefix string = ",\"source\":"
		out.RawString(prefix)
		out.String(string(in.Source))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"tooltips\":"
		out.RawString(prefix)
		if in.Tooltips == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v447First := true
			for v447Name, v447Value := range in.Tooltips {
				if v447First {
					v447First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v447Name))
				out.RawByte(':')
				if m, ok := v447Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v447Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v447Value))
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(in *jlexer.Lexer, out *Events_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Events_List, 0, 8)
			} else {
				*out = Events_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v448 *Events_List_Item
			if in.IsNull() {
				in.Skip()
				v448 = nil
			} else {
				if v448 == nil {
					v448 = new(Events_List_Item)
				}
				(*v448).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v448)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(out *jwriter.Writer, in Events_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v449, v450 := range in {
			if v449 > 0 {
				out.RawByte(',')
			}
			if v450 == nil {
				out.RawString("null")
			} else {
				(*v450).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(in *jlexer.Lexer, out *Contract_Rules_TifTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_TifTypes_List, 0, 4)
			} else {
				*out = Contract_Rules_TifTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v451 string
			v451 = string(in.String())
			*out = append(*out, v451)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(out *jwriter.Writer, in Contract_Rules_TifTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v452, v453 := range in {
			if v452 > 0 {
				out.RawByte(',')
			}
			out.String(string(v453))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_TifTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_TifTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_TifTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_TifTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(in *jlexer.Lexer, out *Contract_Rules_OrderTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_OrderTypes_List, 0, 4)
			} else {
				*out = Contract_Rules_OrderTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v454 string
			v454 = string(in.String())
			*out = append(*out, v454)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(out *jwriter.Writer, in Contract_Rules_OrderTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v455, v456 := range in {
			if v455 > 0 {
				out.RawByte(',')
			}
			out.String(string(v456))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_OrderTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_OrderTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_OrderTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_OrderTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(in *jlexer.Lexer, out *Contract_Rules_OrderTypesOutside_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_OrderTypesOutside_List, 0, 4)
			} else {
				*out = Contract_Rules_OrderTypesOutside_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v457 string
			v457 = string(in.String())
			*out = append(*out, v457)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(out *jwriter.Writer, in Contract_Rules_OrderTypesOutside_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v458, v459 := range in {
			if v458 > 0 {
				out.RawByte(',')
			}
			out.String(string(v459))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_OrderTypesOutside_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_OrderTypesOutside_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_OrderTypesOutside_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_OrderTypesOutside_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(in *jlexer.Lexer, out *Contract_Rules) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "defaultSize":
			out.DefaultSize = float64(in.Float64())
		case "displaySize":
			out.DisplaySize = string(in.String())
		case "increment":
			out.Increment = string(in.String())
		case "limitPrice":
			out.LimitPrice = float64(in.Float64())
		case "orderTypes":
			if in.IsNull() {
				in.Skip()
				out.OrderTypes = nil
			} else {
				in.Delim('[')
				if out.OrderTypes == nil {
					if !in.IsDelim(']') {
						out.OrderTypes = make([]string, 0, 4)
					} else {
						out.OrderTypes = []string{}
					}
				} else {
					out.OrderTypes = (out.OrderTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v460 string
					v460 = string(in.String())
					out.OrderTypes = append(out.OrderTypes, v460)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "orderTypesOutside":
			if in.IsNull() {
				in.Skip()
				out.OrderTypesOutside = nil
			} else {
				in.Delim('[')
				if out.OrderTypesOutside == nil {
					if !in.IsDelim(']') {
						out.OrderTypesOutside = make([]string, 0, 4)
					} else {
						out.OrderTypesOutside = []string{}
					}
				} else {
					out.OrderTypesOutside = (out.OrderTypesOutside)[:0]
				}
				for !in.IsDelim(']') {
					var v461 string
					v461 = string(in.String())
					out.OrderTypesOutside = append(out.OrderTypesOutside, v461)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "preview":
			out.Preview = bool(in.Bool())
		case "sizeIncrement":
			out.SizeIncrement = float64(in.Float64())
		case "stopprice":
			out.Stopprice = float64(in.Float64())
		case "tifTypes":
			if in.IsNull() {
				in.Skip()
				out.TifTypes = nil
			} else {
				in.Delim('[')
				if out.TifTypes == nil {
					if !in.IsDelim(']') {
						out.TifTypes = make([]string, 0, 4)
					} else {
						out.TifTypes = []string{}
					}
				} else {
					out.TifTypes = (out.TifTypes)[:0]
				}
				for !in.IsDelim(']') {
					var v462 string
					v462 = string(in.String())
					out.TifTypes = append(out.TifTypes, v462)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(out *jwriter.Writer, in Contract_Rules) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"defaultSize\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.DefaultSize))
	}
	{
		const prefix string = ",\"displaySize\":"
		out.RawString(prefix)
		out.String(string(in.DisplaySize))
	}
	{
		const prefix string = ",\"increment\":"
		out.RawString(prefix)
		out.String(string(in.Increment))
	}
	{
		const prefix string = ",\"limitPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.LimitPrice))
	}
	{
		const prefix string = ",\"orderTypes\":"
		out.RawString(prefix)
		if in.OrderTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v463, v464 := range in.OrderTypes {
				if v463 > 0 {
					out.RawByte(',')
				}
				out.String(string(v464))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"orderTypesOutside\":"
		out.RawString(prefix)
		if in.OrderTypesOutside == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v465, v466 := range in.OrderTypesOutside {
				if v465 > 0 {
					out.RawByte(',')
				}
				out.String(string(v466))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"preview\":"
		out.RawString(prefix)
		out.Bool(bool(in.Preview))
	}
	{
		const prefix string = ",\"sizeIncrement\":"
		out.RawString(prefix)
		out.Float64(float64(in.SizeIncrement))
	}
	{
		const prefix string = ",\"stopprice\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stopprice))
	}
	{
		const prefix string = ",\"tifTypes\":"
		out.RawString(prefix)
		if in.TifTypes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v467, v468 := range in.TifTypes {
				if v467 > 0 {
					out.RawByte(',')
				}
				out.String(string(v468))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(in *jlexer.Lexer, out *Contract) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "allow_sell_long":
			out.Allow_sell_long = bool(in.Bool())
		case "category":
			out.Category = string(in.String())
		case "cfi_code":
			out.Cfi_code = string(in.String())
		case "classifier":
			out.Classifier = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = int64(in.Int64())
		case "contract_month":
			out.Contract_month = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "expiry_full":
			out.Expiry_full = string(in.String())
		case "industry":
			out.Industry = string(in.String())
		case "instrument_type":
			out.Instrument_type = string(in.String())
		case "is_zero_commission_security":
			out.Is_zero_commission_security = bool(in.Bool())
		case "local_symbol":
			out.Local_symbol = string(in.String())
		case "maturity_date":
			out.Maturity_date = string(in.String())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "r_t_h":
			out.R_t_h = bool(in.Bool())
		case "right":
			out.Right = string(in.String())
		case "rules":
			if in.IsNull() {
				in.Skip()
				out.Rules = nil
			} else {
				if out.Rules == nil {
					out.Rules = new(Contract_Rules)
				}
				(*out.Rules).UnmarshalEasyJSON(in)
			}
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "trading_class":
			out.Trading_class = string(in.String())
		case "underlying_con_id":
			out.Underlying_con_id = int64(in.Int64())
		case "underlying_issuer":
			out.Underlying_issuer = string(in.String())
		case "valid_exchanges":
			out.Valid_exchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(out *jwriter.Writer, in Contract) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"allow_sell_long\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Allow_sell_long))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"cfi_code\":"
		out.RawString(prefix)
		out.String(string(in.Cfi_code))
	}
	{
		const prefix string = ",\"classifier\":"
		out.RawString(prefix)
		out.String(string(in.Classifier))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Con_id))
	}
	{
		const prefix string = ",\"contract_month\":"
		out.RawString(prefix)
		out.String(string(in.Contract_month))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"expiry_full\":"
		out.RawString(prefix)
		out.String(string(in.Expiry_full))
	}
	{
		const prefix string = ",\"industry\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"instrument_type\":"
		out.RawString(prefix)
		out.String(string(in.Instrument_type))
	}
	{
		const prefix string = ",\"is_zero_commission_security\":"
		out.RawString(prefix)
		out.Bool(bool(in.Is_zero_commission_security))
	}
	{
		const prefix string = ",\"local_symbol\":"
		out.RawString(prefix)
		out.String(string(in.Local_symbol))
	}
	{
		const prefix string = ",\"maturity_date\":"
		out.RawString(prefix)
		out.String(string(in.Maturity_date))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"r_t_h\":"
		out.RawString(prefix)
		out.Bool(bool(in.R_t_h))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"rules\":"
		out.RawString(prefix)
		if in.Rules == nil {
			out.RawString("null")
		} else {
			(*in.Rules).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"trading_class\":"
		out.RawString(prefix)
		out.String(string(in.Trading_class))
	}
	{
		const prefix string = ",\"underlying_con_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Underlying_con_id))
	}
	{
		const prefix string = ",\"underlying_issuer\":"
		out.RawString(prefix)
		out.String(string(in.Underlying_issuer))
	}
	{
		const prefix string = ",\"valid_exchanges\":"
		out.RawString(prefix)
		out.String(string(in.Valid_exchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Contract) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(in *jlexer.Lexer, out *Calendar_request_Filters) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "DivExDates":
			out.DivExDates = string(in.String())
		case "corporate_earnings":
			out.Corporate_earnings = string(in.String())
		case "corporate_events":
			out.Corporate_events = string(in.String())
		case "country":
			out.Country = string(in.String())
		case "economic_events":
			out.Economic_events = string(in.String())
		case "ipo":
			out.Ipo = string(in.String())
		case "limit":
			out.Limit = string(in.String())
		case "limit_region":
			out.Limit_region = string(in.String())
		case "option_show_monthly":
			out.Option_show_monthly = string(in.String())
		case "option_show_weekly":
			out.Option_show_weekly = string(in.String())
		case "recently_held":
			out.Recently_held = string(in.String())
		case "splits":
			out.Splits = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(out *jwriter.Writer, in Calendar_request_Filters) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"DivExDates\":"
		out.RawString(prefix[1:])
		out.String(string(in.DivExDates))
	}
	{
		const prefix string = ",\"corporate_earnings\":"
		out.RawString(prefix)
		out.String(string(in.Corporate_earnings))
	}
	{
		const prefix string = ",\"corporate_events\":"
		out.RawString(prefix)
		out.String(string(in.Corporate_events))
	}
	{
		const prefix string = ",\"country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"economic_events\":"
		out.RawString(prefix)
		out.String(string(in.Economic_events))
	}
	{
		const prefix string = ",\"ipo\":"
		out.RawString(prefix)
		out.String(string(in.Ipo))
	}
	{
		const prefix string = ",\"limit\":"
		out.RawString(prefix)
		out.String(string(in.Limit))
	}
	{
		const prefix string = ",\"limit_region\":"
		out.RawString(prefix)
		out.String(string(in.Limit_region))
	}
	{
		const prefix string = ",\"option_show_monthly\":"
		out.RawString(prefix)
		out.String(string(in.Option_show_monthly))
	}
	{
		const prefix string = ",\"option_show_weekly\":"
		out.RawString(prefix)
		out.String(string(in.Option_show_weekly))
	}
	{
		const prefix string = ",\"recently_held\":"
		out.RawString(prefix)
		out.String(string(in.Recently_held))
	}
	{
		const prefix string = ",\"splits\":"
		out.RawString(prefix)
		out.String(string(in.Splits))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request_Filters) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request_Filters) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request_Filters) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request_Filters) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(in *jlexer.Lexer, out *Calendar_request_Date) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "end":
			out.End = string(in.String())
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(out *jwriter.Writer, in Calendar_request_Date) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix[1:])
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request_Date) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request_Date) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request_Date) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request_Date) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(in *jlexer.Lexer, out *Calendar_request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "date":
			if in.IsNull() {
				in.Skip()
				out.Date = nil
			} else {
				if out.Date == nil {
					out.Date = new(Calendar_request_Date)
				}
				(*out.Date).UnmarshalEasyJSON(in)
			}
		case "filters":
			if in.IsNull() {
				in.Skip()
				out.Filters = nil
			} else {
				if out.Filters == nil {
					out.Filters = new(Calendar_request_Filters)
				}
				(*out.Filters).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(out *jwriter.Writer, in Calendar_request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix[1:])
		if in.Date == nil {
			out.RawString("null")
		} else {
			(*in.Date).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix)
		if in.Filters == nil {
			out.RawString("null")
		} else {
			(*in.Filters).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(in *jlexer.Lexer, out *AuthStatus_Prompts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AuthStatus_Prompts_List, 0, 4)
			} else {
				*out = AuthStatus_Prompts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v469 string
			v469 = string(in.String())
			*out = append(*out, v469)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(out *jwriter.Writer, in AuthStatus_Prompts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v470, v471 := range in {
			if v470 > 0 {
				out.RawByte(',')
			}
			out.String(string(v471))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AuthStatus_Prompts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AuthStatus_Prompts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AuthStatus_Prompts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AuthStatus_Prompts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(in *jlexer.Lexer, out *AuthStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authenticated":
			out.Authenticated = bool(in.Bool())
		case "competing":
			out.Competing = bool(in.Bool())
		case "connected":
			out.Connected = bool(in.Bool())
		case "fail":
			out.Fail = string(in.String())
		case "message":
			out.Message = string(in.String())
		case "prompts":
			if in.IsNull() {
				in.Skip()
				out.Prompts = nil
			} else {
				in.Delim('[')
				if out.Prompts == nil {
					if !in.IsDelim(']') {
						out.Prompts = make([]string, 0, 4)
					} else {
						out.Prompts = []string{}
					}
				} else {
					out.Prompts = (out.Prompts)[:0]
				}
				for !in.IsDelim(']') {
					var v472 string
					v472 = string(in.String())
					out.Prompts = append(out.Prompts, v472)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(out *jwriter.Writer, in AuthStatus) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"authenticated\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Authenticated))
	}
	{
		const prefix string = ",\"competing\":"
		out.RawString(prefix)
		out.Bool(bool(in.Competing))
	}
	{
		const prefix string = ",\"connected\":"
		out.RawString(prefix)
		out.Bool(bool(in.Connected))
	}
	{
		const prefix string = ",\"fail\":"
		out.RawString(prefix)
		out.String(string(in.Fail))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"prompts\":"
		out.RawString(prefix)
		if in.Prompts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v473, v474 := range in.Prompts {
				if v473 > 0 {
					out.RawByte(',')
				}
				out.String(string(v474))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AuthStatus) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AuthStatus) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AuthStatus) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AuthStatus) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(in *jlexer.Lexer, out *Any) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Any)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v475 interface{}
			if m, ok := v475.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := v475.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				v475 = in.Interface()
			}
			(*out)[key] = v475
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(out *jwriter.Writer, in Any) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v476First := true
		for v476Name, v476Value := range in {
			if v476First {
				v476First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v476Name))
			out.RawByte(':')
			if m, ok := v476Value.(easyjson.Marshaler); ok {
				m.MarshalEasyJSON(out)
			} else if m, ok := v476Value.(json.Marshaler); ok {
				out.Raw(m.MarshalJSON())
			} else {
				out.Raw(json.Marshal(v476Value))
			}
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Any) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Any) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Any) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Any) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(in *jlexer.Lexer, out *Allocation_List_Item_Sector_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Consumer":
			out.Consumer = float64(in.Float64())
		case "Diversified":
			out.Diversified = float64(in.Float64())
		case "Industrial":
			out.Industrial = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(out *jwriter.Writer, in Allocation_List_Item_Sector_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Consumer\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Consumer))
	}
	{
		const prefix string = ",\"Diversified\":"
		out.RawString(prefix)
		out.Float64(float64(in.Diversified))
	}
	{
		const prefix string = ",\"Industrial\":"
		out.RawString(prefix)
		out.Float64(float64(in.Industrial))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(in *jlexer.Lexer, out *Allocation_List_Item_Sector_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Communications":
			out.Communications = float64(in.Float64())
		case "Energy":
			out.Energy = float64(in.Float64())
		case "Financial":
			out.Financial = float64(in.Float64())
		case "Others":
			out.Others = float64(in.Float64())
		case "Technology":
			out.Technology = float64(in.Float64())
		case "Utilities":
			out.Utilities = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(out *jwriter.Writer, in Allocation_List_Item_Sector_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Communications\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Communications))
	}
	{
		const prefix string = ",\"Energy\":"
		out.RawString(prefix)
		out.Float64(float64(in.Energy))
	}
	{
		const prefix string = ",\"Financial\":"
		out.RawString(prefix)
		out.Float64(float64(in.Financial))
	}
	{
		const prefix string = ",\"Others\":"
		out.RawString(prefix)
		out.Float64(float64(in.Others))
	}
	{
		const prefix string = ",\"Technology\":"
		out.RawString(prefix)
		out.Float64(float64(in.Technology))
	}
	{
		const prefix string = ",\"Utilities\":"
		out.RawString(prefix)
		out.Float64(float64(in.Utilities))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(in *jlexer.Lexer, out *Allocation_List_Item_Sector) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_Sector_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_Sector_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(out *jwriter.Writer, in Allocation_List_Item_Sector) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(in *jlexer.Lexer, out *Allocation_List_Item_Group_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Airlines":
			out.Airlines = float64(in.Float64())
		case "Banks":
			out.Banks = float64(in.Float64())
		case "Internet":
			out.Internet = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(out *jwriter.Writer, in Allocation_List_Item_Group_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Airlines\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Airlines))
	}
	{
		const prefix string = ",\"Banks\":"
		out.RawString(prefix)
		out.Float64(float64(in.Banks))
	}
	{
		const prefix string = ",\"Internet\":"
		out.RawString(prefix)
		out.Float64(float64(in.Internet))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(in *jlexer.Lexer, out *Allocation_List_Item_Group_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Apparel":
			out.Apparel = float64(in.Float64())
		case "Chemicals":
			out.Chemicals = float64(in.Float64())
		case "Communications":
			out.Communications = float64(in.Float64())
		case "Computers":
			out.Computers = float64(in.Float64())
		case "Others":
			out.Others = float64(in.Float64())
		case "Semiconductors":
			out.Semiconductors = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(out *jwriter.Writer, in Allocation_List_Item_Group_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Apparel\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Apparel))
	}
	{
		const prefix string = ",\"Chemicals\":"
		out.RawString(prefix)
		out.Float64(float64(in.Chemicals))
	}
	{
		const prefix string = ",\"Communications\":"
		out.RawString(prefix)
		out.Float64(float64(in.Communications))
	}
	{
		const prefix string = ",\"Computers\":"
		out.RawString(prefix)
		out.Float64(float64(in.Computers))
	}
	{
		const prefix string = ",\"Others\":"
		out.RawString(prefix)
		out.Float64(float64(in.Others))
	}
	{
		const prefix string = ",\"Semiconductors\":"
		out.RawString(prefix)
		out.Float64(float64(in.Semiconductors))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(in *jlexer.Lexer, out *Allocation_List_Item_Group) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_Group_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_Group_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(out *jwriter.Writer, in Allocation_List_Item_Group) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BOND":
			out.BOND = float64(in.Float64())
		case "CASH":
			out.CASH = float64(in.Float64())
		case "FUT":
			out.FUT = float64(in.Float64())
		case "OPT":
			out.OPT = float64(in.Float64())
		case "STK":
			out.STK = float64(in.Float64())
		case "WAR":
			out.WAR = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(out *jwriter.Writer, in Allocation_List_Item_AssetClass_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BOND\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.BOND))
	}
	{
		const prefix string = ",\"CASH\":"
		out.RawString(prefix)
		out.Float64(float64(in.CASH))
	}
	{
		const prefix string = ",\"FUT\":"
		out.RawString(prefix)
		out.Float64(float64(in.FUT))
	}
	{
		const prefix string = ",\"OPT\":"
		out.RawString(prefix)
		out.Float64(float64(in.OPT))
	}
	{
		const prefix string = ",\"STK\":"
		out.RawString(prefix)
		out.Float64(float64(in.STK))
	}
	{
		const prefix string = ",\"WAR\":"
		out.RawString(prefix)
		out.Float64(float64(in.WAR))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BOND":
			out.BOND = float64(in.Float64())
		case "CASH":
			out.CASH = float64(in.Float64())
		case "FUT":
			out.FUT = float64(in.Float64())
		case "OPT":
			out.OPT = float64(in.Float64())
		case "STK":
			out.STK = float64(in.Float64())
		case "WAR":
			out.WAR = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(out *jwriter.Writer, in Allocation_List_Item_AssetClass_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BOND\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.BOND))
	}
	{
		const prefix string = ",\"CASH\":"
		out.RawString(prefix)
		out.Float64(float64(in.CASH))
	}
	{
		const prefix string = ",\"FUT\":"
		out.RawString(prefix)
		out.Float64(float64(in.FUT))
	}
	{
		const prefix string = ",\"OPT\":"
		out.RawString(prefix)
		out.Float64(float64(in.OPT))
	}
	{
		const prefix string = ",\"STK\":"
		out.RawString(prefix)
		out.Float64(float64(in.STK))
	}
	{
		const prefix string = ",\"WAR\":"
		out.RawString(prefix)
		out.Float64(float64(in.WAR))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_AssetClass_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_AssetClass_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(out *jwriter.Writer, in Allocation_List_Item_AssetClass) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(in *jlexer.Lexer, out *Allocation_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			if in.IsNull() {
				in.Skip()
				out.AssetClass = nil
			} else {
				if out.AssetClass == nil {
					out.AssetClass = new(Allocation_List_Item_AssetClass)
				}
				(*out.AssetClass).UnmarshalEasyJSON(in)
			}
		case "group":
			if in.IsNull() {
				in.Skip()
				out.Group = nil
			} else {
				if out.Group == nil {
					out.Group = new(Allocation_List_Item_Group)
				}
				(*out.Group).UnmarshalEasyJSON(in)
			}
		case "sector":
			if in.IsNull() {
				in.Skip()
				out.Sector = nil
			} else {
				if out.Sector == nil {
					out.Sector = new(Allocation_List_Item_Sector)
				}
				(*out.Sector).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(out *jwriter.Writer, in Allocation_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		if in.AssetClass == nil {
			out.RawString("null")
		} else {
			(*in.AssetClass).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		if in.Group == nil {
			out.RawString("null")
		} else {
			(*in.Group).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		if in.Sector == nil {
			out.RawString("null")
		} else {
			(*in.Sector).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(in *jlexer.Lexer, out *Allocation_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Allocation_List, 0, 8)
			} else {
				*out = Allocation_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v477 *Allocation_List_Item
			if in.IsNull() {
				in.Skip()
				v477 = nil
			} else {
				if v477 == nil {
					v477 = new(Allocation_List_Item)
				}
				(*v477).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v477)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(out *jwriter.Writer, in Allocation_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v478, v479 := range in {
			if v478 > 0 {
				out.RawByte(',')
			}
			if v479 == nil {
				out.RawString("null")
			} else {
				(*v479).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(in *jlexer.Lexer, out *AlertResponse_Conditions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "condition_logic_bind":
			out.Condition_logic_bind = string(in.String())
		case "condition_operator":
			out.Condition_operator = string(in.String())
		case "condition_time_zone":
			out.Condition_time_zone = string(in.String())
		case "condition_trigger_method":
			out.Condition_trigger_method = string(in.String())
		case "condition_type":
			out.Condition_type = int64(in.Int64())
		case "condition_value":
			out.Condition_value = string(in.String())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(out *jwriter.Writer, in AlertResponse_Conditions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"condition_logic_bind\":"
		out.RawString(prefix[1:])
		out.String(string(in.Condition_logic_bind))
	}
	{
		const prefix string = ",\"condition_operator\":"
		out.RawString(prefix)
		out.String(string(in.Condition_operator))
	}
	{
		const prefix string = ",\"condition_time_zone\":"
		out.RawString(prefix)
		out.String(string(in.Condition_time_zone))
	}
	{
		const prefix string = ",\"condition_trigger_method\":"
		out.RawString(prefix)
		out.String(string(in.Condition_trigger_method))
	}
	{
		const prefix string = ",\"condition_type\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_type))
	}
	{
		const prefix string = ",\"condition_value\":"
		out.RawString(prefix)
		out.String(string(in.Condition_value))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse_Conditions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse_Conditions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse_Conditions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse_Conditions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(in *jlexer.Lexer, out *AlertResponse_Conditions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AlertResponse_Conditions_List, 0, 8)
			} else {
				*out = AlertResponse_Conditions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v480 *AlertResponse_Conditions_List_Item
			if in.IsNull() {
				in.Skip()
				v480 = nil
			} else {
				if v480 == nil {
					v480 = new(AlertResponse_Conditions_List_Item)
				}
				(*v480).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v480)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(out *jwriter.Writer, in AlertResponse_Conditions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v481, v482 := range in {
			if v481 > 0 {
				out.RawByte(',')
			}
			if v482 == nil {
				out.RawString("null")
			} else {
				(*v482).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse_Conditions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse_Conditions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse_Conditions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse_Conditions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(in *jlexer.Lexer, out *AlertResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "alert_active":
			out.Alert_active = int64(in.Int64())
		case "alert_default_type":
			out.Alert_default_type = string(in.String())
		case "alert_email":
			out.Alert_email = string(in.String())
		case "alert_message":
			out.Alert_message = string(in.String())
		case "alert_mta_currency":
			out.Alert_mta_currency = string(in.String())
		case "alert_mta_defaults":
			out.Alert_mta_defaults = string(in.String())
		case "alert_name":
			out.Alert_name = string(in.String())
		case "alert_play_audio":
			out.Alert_play_audio = string(in.String())
		case "alert_repeatable":
			out.Alert_repeatable = int64(in.Int64())
		case "alert_send_message":
			out.Alert_send_message = int64(in.Int64())
		case "alert_show_popup":
			out.Alert_show_popup = int64(in.Int64())
		case "alert_triggered":
			out.Alert_triggered = bool(in.Bool())
		case "condition_outside_rth":
			out.Condition_outside_rth = int64(in.Int64())
		case "condition_size":
			out.Condition_size = int64(in.Int64())
		case "conditions":
			if in.IsNull() {
				in.Skip()
				out.Conditions = nil
			} else {
				in.Delim('[')
				if out.Conditions == nil {
					if !in.IsDelim(']') {
						out.Conditions = make([]*AlertResponse_Conditions_List_Item, 0, 8)
					} else {
						out.Conditions = []*AlertResponse_Conditions_List_Item{}
					}
				} else {
					out.Conditions = (out.Conditions)[:0]
				}
				for !in.IsDelim(']') {
					var v483 *AlertResponse_Conditions_List_Item
					if in.IsNull() {
						in.Skip()
						v483 = nil
					} else {
						if v483 == nil {
							v483 = new(AlertResponse_Conditions_List_Item)
						}
						(*v483).UnmarshalEasyJSON(in)
					}
					out.Conditions = append(out.Conditions, v483)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "expire_time":
			out.Expire_time = string(in.String())
		case "itws_orders_only":
			out.Itws_orders_only = int64(in.Int64())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_not_editable":
			out.Order_not_editable = bool(in.Bool())
		case "order_status":
			out.Order_status = string(in.String())
		case "outsideRth":
			out.OutsideRth = int64(in.Int64())
		case "tif":
			out.Tif = string(in.String())
		case "time_zone":
			out.Time_zone = string(in.String())
		case "tool_id":
			out.Tool_id = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(out *jwriter.Writer, in AlertResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"alert_active\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_active))
	}
	{
		const prefix string = ",\"alert_default_type\":"
		out.RawString(prefix)
		out.String(string(in.Alert_default_type))
	}
	{
		const prefix string = ",\"alert_email\":"
		out.RawString(prefix)
		out.String(string(in.Alert_email))
	}
	{
		const prefix string = ",\"alert_message\":"
		out.RawString(prefix)
		out.String(string(in.Alert_message))
	}
	{
		const prefix string = ",\"alert_mta_currency\":"
		out.RawString(prefix)
		out.String(string(in.Alert_mta_currency))
	}
	{
		const prefix string = ",\"alert_mta_defaults\":"
		out.RawString(prefix)
		out.String(string(in.Alert_mta_defaults))
	}
	{
		const prefix string = ",\"alert_name\":"
		out.RawString(prefix)
		out.String(string(in.Alert_name))
	}
	{
		const prefix string = ",\"alert_play_audio\":"
		out.RawString(prefix)
		out.String(string(in.Alert_play_audio))
	}
	{
		const prefix string = ",\"alert_repeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_repeatable))
	}
	{
		const prefix string = ",\"alert_send_message\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_send_message))
	}
	{
		const prefix string = ",\"alert_show_popup\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_show_popup))
	}
	{
		const prefix string = ",\"alert_triggered\":"
		out.RawString(prefix)
		out.Bool(bool(in.Alert_triggered))
	}
	{
		const prefix string = ",\"condition_outside_rth\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_outside_rth))
	}
	{
		const prefix string = ",\"condition_size\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_size))
	}
	{
		const prefix string = ",\"conditions\":"
		out.RawString(prefix)
		if in.Conditions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v484, v485 := range in.Conditions {
				if v484 > 0 {
					out.RawByte(',')
				}
				if v485 == nil {
					out.RawString("null")
				} else {
					(*v485).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"expire_time\":"
		out.RawString(prefix)
		out.String(string(in.Expire_time))
	}
	{
		const prefix string = ",\"itws_orders_only\":"
		out.RawString(prefix)
		out.Int64(int64(in.Itws_orders_only))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_not_editable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Order_not_editable))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Int64(int64(in.OutsideRth))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"time_zone\":"
		out.RawString(prefix)
		out.String(string(in.Time_zone))
	}
	{
		const prefix string = ",\"tool_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Tool_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(in *jlexer.Lexer, out *AlertRequest_Conditions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conidex":
			out.Conidex = string(in.String())
		case "logicBind":
			out.LogicBind = string(in.String())
		case "operator":
			out.Operator = string(in.String())
		case "timeZone":
			out.TimeZone = string(in.String())
		case "triggerMethod":
			out.TriggerMethod = string(in.String())
		case "type":
			out.Type = int64(in.Int64())
		case "value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(out *jwriter.Writer, in AlertRequest_Conditions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix[1:])
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"logicBind\":"
		out.RawString(prefix)
		out.String(string(in.LogicBind))
	}
	{
		const prefix string = ",\"operator\":"
		out.RawString(prefix)
		out.String(string(in.Operator))
	}
	{
		const prefix string = ",\"timeZone\":"
		out.RawString(prefix)
		out.String(string(in.TimeZone))
	}
	{
		const prefix string = ",\"triggerMethod\":"
		out.RawString(prefix)
		out.String(string(in.TriggerMethod))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int64(int64(in.Type))
	}
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest_Conditions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest_Conditions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest_Conditions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest_Conditions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(in *jlexer.Lexer, out *AlertRequest_Conditions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AlertRequest_Conditions_List, 0, 8)
			} else {
				*out = AlertRequest_Conditions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v486 *AlertRequest_Conditions_List_Item
			if in.IsNull() {
				in.Skip()
				v486 = nil
			} else {
				if v486 == nil {
					v486 = new(AlertRequest_Conditions_List_Item)
				}
				(*v486).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v486)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(out *jwriter.Writer, in AlertRequest_Conditions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v487, v488 := range in {
			if v487 > 0 {
				out.RawByte(',')
			}
			if v488 == nil {
				out.RawString("null")
			} else {
				(*v488).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest_Conditions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest_Conditions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest_Conditions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest_Conditions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(in *jlexer.Lexer, out *AlertRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "alertMessage":
			out.AlertMessage = string(in.String())
		case "alertName":
			out.AlertName = string(in.String())
		case "alertRepeatable":
			out.AlertRepeatable = int64(in.Int64())
		case "conditions":
			if in.IsNull() {
				in.Skip()
				out.Conditions = nil
			} else {
				in.Delim('[')
				if out.Conditions == nil {
					if !in.IsDelim(']') {
						out.Conditions = make([]*AlertRequest_Conditions_List_Item, 0, 8)
					} else {
						out.Conditions = []*AlertRequest_Conditions_List_Item{}
					}
				} else {
					out.Conditions = (out.Conditions)[:0]
				}
				for !in.IsDelim(']') {
					var v489 *AlertRequest_Conditions_List_Item
					if in.IsNull() {
						in.Skip()
						v489 = nil
					} else {
						if v489 == nil {
							v489 = new(AlertRequest_Conditions_List_Item)
						}
						(*v489).UnmarshalEasyJSON(in)
					}
					out.Conditions = append(out.Conditions, v489)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "email":
			out.Email = string(in.String())
		case "expireTime":
			out.ExpireTime = string(in.String())
		case "iTWSOrdersOnly":
			out.ITWSOrdersOnly = int64(in.Int64())
		case "orderId":
			out.OrderId = int64(in.Int64())
		case "outsideRth":
			out.OutsideRth = int64(in.Int64())
		case "playAudio":
			out.PlayAudio = string(in.String())
		case "sendMessage":
			out.SendMessage = int64(in.Int64())
		case "showPopup":
			out.ShowPopup = int64(in.Int64())
		case "tif":
			out.Tif = string(in.String())
		case "toolId":
			out.ToolId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(out *jwriter.Writer, in AlertRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"alertMessage\":"
		out.RawString(prefix[1:])
		out.String(string(in.AlertMessage))
	}
	{
		const prefix string = ",\"alertName\":"
		out.RawString(prefix)
		out.String(string(in.AlertName))
	}
	{
		const prefix string = ",\"alertRepeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlertRepeatable))
	}
	{
		const prefix string = ",\"conditions\":"
		out.RawString(prefix)
		if in.Conditions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v490, v491 := range in.Conditions {
				if v490 > 0 {
					out.RawByte(',')
				}
				if v491 == nil {
					out.RawString("null")
				} else {
					(*v491).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"expireTime\":"
		out.RawString(prefix)
		out.String(string(in.ExpireTime))
	}
	{
		const prefix string = ",\"iTWSOrdersOnly\":"
		out.RawString(prefix)
		out.Int64(int64(in.ITWSOrdersOnly))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Int64(int64(in.OutsideRth))
	}
	{
		const prefix string = ",\"playAudio\":"
		out.RawString(prefix)
		out.String(string(in.PlayAudio))
	}
	{
		const prefix string = ",\"sendMessage\":"
		out.RawString(prefix)
		out.Int64(int64(in.SendMessage))
	}
	{
		const prefix string = ",\"showPopup\":"
		out.RawString(prefix)
		out.Int64(int64(in.ShowPopup))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"toolId\":"
		out.RawString(prefix)
		out.Int64(int64(in.ToolId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(in *jlexer.Lexer, out *Accounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Accounts_List, 0, 8)
			} else {
				*out = Accounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v492 *Account
			if in.IsNull() {
				in.Skip()
				v492 = nil
			} else {
				if v492 == nil {
					v492 = new(Account)
				}
				(*v492).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v492)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(out *jwriter.Writer, in Accounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v493, v494 := range in {
			if v493 > 0 {
				out.RawByte(',')
			}
			if v494 == nil {
				out.RawString("null")
			} else {
				(*v494).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Accounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Accounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Accounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Accounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(in *jlexer.Lexer, out *Account_Master) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "officialTitle":
			out.OfficialTitle = string(in.String())
		case "title":
			out.Title = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(out *jwriter.Writer, in Account_Master) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"officialTitle\":"
		out.RawString(prefix[1:])
		out.String(string(in.OfficialTitle))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Account_Master) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Account_Master) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Account_Master) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Account_Master) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(in *jlexer.Lexer, out *Account) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountAlias":
			out.AccountAlias = string(in.String())
		case "accountId":
			out.AccountId = string(in.String())
		case "accountStatus":
			out.AccountStatus = float64(in.Float64())
		case "accountTitle":
			out.AccountTitle = string(in.String())
		case "accountVan":
			out.AccountVan = string(in.String())
		case "covestor":
			out.Covestor = bool(in.Bool())
		case "currency":
			out.Currency = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "displayName":
			out.DisplayName = string(in.String())
		case "faclient":
			out.Faclient = bool(in.Bool())
		case "id":
			out.Id = string(in.String())
		case "master":
			if in.IsNull() {
				in.Skip()
				out.Master = nil
			} else {
				if out.Master == nil {
					out.Master = new(Account_Master)
				}
				(*out.Master).UnmarshalEasyJSON(in)
			}
		case "parent":
			out.Parent = string(in.String())
		case "tradingType":
			out.TradingType = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(out *jwriter.Writer, in Account) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountAlias\":"
		out.RawString(prefix[1:])
		out.String(string(in.AccountAlias))
	}
	{
		const prefix string = ",\"accountId\":"
		out.RawString(prefix)
		out.String(string(in.AccountId))
	}
	{
		const prefix string = ",\"accountStatus\":"
		out.RawString(prefix)
		out.Float64(float64(in.AccountStatus))
	}
	{
		const prefix string = ",\"accountTitle\":"
		out.RawString(prefix)
		out.String(string(in.AccountTitle))
	}
	{
		const prefix string = ",\"accountVan\":"
		out.RawString(prefix)
		out.String(string(in.AccountVan))
	}
	{
		const prefix string = ",\"covestor\":"
		out.RawString(prefix)
		out.Bool(bool(in.Covestor))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix)
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"faclient\":"
		out.RawString(prefix)
		out.Bool(bool(in.Faclient))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"master\":"
		out.RawString(prefix)
		if in.Master == nil {
			out.RawString("null")
		} else {
			(*in.Master).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"parent\":"
		out.RawString(prefix)
		out.String(string(in.Parent))
	}
	{
		const prefix string = ",\"tradingType\":"
		out.RawString(prefix)
		out.String(string(in.TradingType))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Account) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Account) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Account) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Account) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(l, v)
}
