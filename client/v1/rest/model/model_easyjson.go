// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package model

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(in *jlexer.Lexer, out *Wagers_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		case "curr":
			out.Curr = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "part":
			out.Part = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(out *jwriter.Writer, in Wagers_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"curr\":"
		out.RawString(prefix)
		out.String(string(in.Curr))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"part\":"
		out.RawString(prefix)
		out.String(string(in.Part))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Wagers_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Wagers_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Wagers_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Wagers_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagersList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(in *jlexer.Lexer, out *Wagers_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Wagers_List, 0, 8)
			} else {
				*out = Wagers_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 *Wagers_List_Item
			if in.IsNull() {
				in.Skip()
				v1 = nil
			} else {
				if v1 == nil {
					v1 = new(Wagers_List_Item)
				}
				(*v1).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(out *jwriter.Writer, in Wagers_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			if v3 == nil {
				out.RawString("null")
			} else {
				(*v3).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Wagers_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Wagers_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelWagers(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Wagers_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Wagers_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelWagers(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(in *jlexer.Lexer, out *Trsrv_Stocks_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(out *jwriter.Writer, in Trsrv_Stocks_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Stocks_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Stocks_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Stocks_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Stocks_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(in *jlexer.Lexer, out *Trsrv_Stocks_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Trsrv_Stocks_GET_200)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v4 Stocks_List
			(v4).UnmarshalEasyJSON(in)
			(*out)[key] = v4
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(out *jwriter.Writer, in Trsrv_Stocks_GET_200) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v5First := true
		for v5Name, v5Value := range in {
			if v5First {
				v5First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v5Name))
			out.RawByte(':')
			(v5Value).MarshalEasyJSON(out)
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Stocks_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Stocks_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Stocks_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Stocks_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvStocksGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cancelDayOrders":
			out.CancelDayOrders = string(in.String())
		case "closingTime":
			out.ClosingTime = int64(in.Int64())
		case "openingTime":
			out.OpeningTime = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cancelDayOrders\":"
		out.RawString(prefix[1:])
		out.String(string(in.CancelDayOrders))
	}
	{
		const prefix string = ",\"closingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.ClosingTime))
	}
	{
		const prefix string = ",\"openingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.OpeningTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "closingTime":
			out.ClosingTime = int64(in.Int64())
		case "openingTime":
			out.OpeningTime = int64(in.Int64())
		case "prop":
			out.Prop = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"closingTime\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ClosingTime))
	}
	{
		const prefix string = ",\"openingTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.OpeningTime))
	}
	{
		const prefix string = ",\"prop\":"
		out.RawString(prefix)
		out.String(string(in.Prop))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "clearingCycleEndTime":
			out.ClearingCycleEndTime = int64(in.Int64())
		case "sessions":
			if in.IsNull() {
				in.Skip()
				out.Sessions = nil
			} else {
				if out.Sessions == nil {
					out.Sessions = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_Sessions)
				}
				(*out.Sessions).UnmarshalEasyJSON(in)
			}
		case "tradingScheduleDate":
			out.TradingScheduleDate = int64(in.Int64())
		case "tradingTimes":
			if in.IsNull() {
				in.Skip()
				out.TradingTimes = nil
			} else {
				if out.TradingTimes == nil {
					out.TradingTimes = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item_TradingTimes)
				}
				(*out.TradingTimes).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"clearingCycleEndTime\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ClearingCycleEndTime))
	}
	{
		const prefix string = ",\"sessions\":"
		out.RawString(prefix)
		if in.Sessions == nil {
			out.RawString("null")
		} else {
			(*in.Sessions).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tradingScheduleDate\":"
		out.RawString(prefix)
		out.Int64(int64(in.TradingScheduleDate))
	}
	{
		const prefix string = ",\"tradingTimes\":"
		out.RawString(prefix)
		if in.TradingTimes == nil {
			out.RawString("null")
		} else {
			(*in.TradingTimes).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200SchedulesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200_Schedules_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Trsrv_Secdef_Schedule_GET_200_Schedules_List, 0, 8)
			} else {
				*out = Trsrv_Secdef_Schedule_GET_200_Schedules_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v6 *Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item
			if in.IsNull() {
				in.Skip()
				v6 = nil
			} else {
				if v6 == nil {
					v6 = new(Trsrv_Secdef_Schedule_GET_200_Schedules_List_Item)
				}
				(*v6).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v6)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200_Schedules_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v7, v8 := range in {
			if v7 > 0 {
				out.RawByte(',')
			}
			if v8 == nil {
				out.RawString("null")
			} else {
				(*v8).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200_Schedules_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200_Schedules_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET200Schedules(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(in *jlexer.Lexer, out *Trsrv_Secdef_Schedule_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "schedules":
			(out.Schedules).UnmarshalEasyJSON(in)
		case "tradeVenueId":
			out.TradeVenueId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(out *jwriter.Writer, in Trsrv_Secdef_Schedule_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"schedules\":"
		out.RawString(prefix)
		(in.Schedules).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"tradeVenueId\":"
		out.RawString(prefix)
		out.String(string(in.TradeVenueId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_Schedule_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_Schedule_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefScheduleGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(in *jlexer.Lexer, out *Trsrv_Secdef_POST_Request_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Trsrv_Secdef_POST_Request_Conids_List, 0, 8)
			} else {
				*out = Trsrv_Secdef_POST_Request_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v9 int64
			v9 = int64(in.Int64())
			*out = append(*out, v9)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(out *jwriter.Writer, in Trsrv_Secdef_POST_Request_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v10, v11 := range in {
			if v10 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v11))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_POST_Request_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_POST_Request_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOSTRequestConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(in *jlexer.Lexer, out *Trsrv_Secdef_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conids":
			(out.Conids).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(out *jwriter.Writer, in Trsrv_Secdef_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix[1:])
		(in.Conids).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Secdef_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Secdef_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Secdef_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvSecdefPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(in *jlexer.Lexer, out *Trsrv_Futures_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(out *jwriter.Writer, in Trsrv_Futures_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Futures_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Futures_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Futures_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Futures_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(in *jlexer.Lexer, out *Trsrv_Futures_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Trsrv_Futures_GET_200)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v12 Futures_List
			(v12).UnmarshalEasyJSON(in)
			(*out)[key] = v12
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(out *jwriter.Writer, in Trsrv_Futures_GET_200) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v13First := true
		for v13Name, v13Value := range in {
			if v13First {
				v13First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v13Name))
			out.RawByte(':')
			(v13Value).MarshalEasyJSON(out)
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Trsrv_Futures_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trsrv_Futures_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trsrv_Futures_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trsrv_Futures_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTrsrvFuturesGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(in *jlexer.Lexer, out *Transactions_Transactions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctid":
			out.Acctid = string(in.String())
		case "amt":
			out.Amt = float64(in.Float64())
		case "conid":
			out.Conid = float64(in.Float64())
		case "cur":
			out.Cur = string(in.String())
		case "date":
			out.Date = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "fxRate":
			out.FxRate = float64(in.Float64())
		case "pr":
			out.Pr = float64(in.Float64())
		case "qty":
			out.Qty = float64(in.Float64())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(out *jwriter.Writer, in Transactions_Transactions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acctid))
	}
	{
		const prefix string = ",\"amt\":"
		out.RawString(prefix)
		out.Float64(float64(in.Amt))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"cur\":"
		out.RawString(prefix)
		out.String(string(in.Cur))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.String(string(in.Date))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"fxRate\":"
		out.RawString(prefix)
		out.Float64(float64(in.FxRate))
	}
	{
		const prefix string = ",\"pr\":"
		out.RawString(prefix)
		out.Float64(float64(in.Pr))
	}
	{
		const prefix string = ",\"qty\":"
		out.RawString(prefix)
		out.Float64(float64(in.Qty))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions_Transactions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions_Transactions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions_Transactions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions_Transactions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(in *jlexer.Lexer, out *Transactions_Transactions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Transactions_Transactions_List, 0, 8)
			} else {
				*out = Transactions_Transactions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v14 *Transactions_Transactions_List_Item
			if in.IsNull() {
				in.Skip()
				v14 = nil
			} else {
				if v14 == nil {
					v14 = new(Transactions_Transactions_List_Item)
				}
				(*v14).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v14)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(out *jwriter.Writer, in Transactions_Transactions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v15, v16 := range in {
			if v15 > 0 {
				out.RawByte(',')
			}
			if v16 == nil {
				out.RawString("null")
			} else {
				(*v16).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions_Transactions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions_Transactions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions_Transactions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions_Transactions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTransactionsTransactions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(in *jlexer.Lexer, out *Transactions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "currency":
			out.Currency = string(in.String())
		case "from":
			out.From = float64(in.Float64())
		case "id":
			out.Id = string(in.String())
		case "includesRealTime":
			out.IncludesRealTime = bool(in.Bool())
		case "to":
			out.To = float64(in.Float64())
		case "transactions":
			(out.Transactions).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(out *jwriter.Writer, in Transactions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix[1:])
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"from\":"
		out.RawString(prefix)
		out.Float64(float64(in.From))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"includesRealTime\":"
		out.RawString(prefix)
		out.Bool(bool(in.IncludesRealTime))
	}
	{
		const prefix string = ",\"to\":"
		out.RawString(prefix)
		out.Float64(float64(in.To))
	}
	{
		const prefix string = ",\"transactions\":"
		out.RawString(prefix)
		(in.Transactions).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Transactions) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Transactions) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Transactions) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Transactions) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(in *jlexer.Lexer, out *Trade) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "clearing_id":
			out.Clearing_id = string(in.String())
		case "clearing_name":
			out.Clearing_name = string(in.String())
		case "comission":
			out.Comission = float64(in.Float64())
		case "company_name":
			out.Company_name = string(in.String())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "execution_id":
			out.Execution_id = string(in.String())
		case "net_amount":
			out.Net_amount = float64(in.Float64())
		case "order_description":
			out.Order_description = string(in.String())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "sec_type":
			out.Sec_type = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "submitter":
			out.Submitter = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "trade_time":
			out.Trade_time = string(in.String())
		case "trade_time_r":
			out.Trade_time_r = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(out *jwriter.Writer, in Trade) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"clearing_id\":"
		out.RawString(prefix)
		out.String(string(in.Clearing_id))
	}
	{
		const prefix string = ",\"clearing_name\":"
		out.RawString(prefix)
		out.String(string(in.Clearing_name))
	}
	{
		const prefix string = ",\"comission\":"
		out.RawString(prefix)
		out.Float64(float64(in.Comission))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"execution_id\":"
		out.RawString(prefix)
		out.String(string(in.Execution_id))
	}
	{
		const prefix string = ",\"net_amount\":"
		out.RawString(prefix)
		out.Float64(float64(in.Net_amount))
	}
	{
		const prefix string = ",\"order_description\":"
		out.RawString(prefix)
		out.String(string(in.Order_description))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"sec_type\":"
		out.RawString(prefix)
		out.String(string(in.Sec_type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"submitter\":"
		out.RawString(prefix)
		out.String(string(in.Submitter))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"trade_time\":"
		out.RawString(prefix)
		out.String(string(in.Trade_time))
	}
	{
		const prefix string = ",\"trade_time_r\":"
		out.RawString(prefix)
		out.Float64(float64(in.Trade_time_r))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trade) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trade) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trade) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trade) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(in *jlexer.Lexer, out *Tickle_POST_200_Iserver_AuthStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "MAC":
			out.MAC = string(in.String())
		case "authenticated":
			out.Authenticated = bool(in.Bool())
		case "competing":
			out.Competing = bool(in.Bool())
		case "connected":
			out.Connected = bool(in.Bool())
		case "message":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(out *jwriter.Writer, in Tickle_POST_200_Iserver_AuthStatus) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"MAC\":"
		out.RawString(prefix[1:])
		out.String(string(in.MAC))
	}
	{
		const prefix string = ",\"authenticated\":"
		out.RawString(prefix)
		out.Bool(bool(in.Authenticated))
	}
	{
		const prefix string = ",\"competing\":"
		out.RawString(prefix)
		out.Bool(bool(in.Competing))
	}
	{
		const prefix string = ",\"connected\":"
		out.RawString(prefix)
		out.Bool(bool(in.Connected))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200_Iserver_AuthStatus) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200_Iserver_AuthStatus) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200_Iserver_AuthStatus) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200_Iserver_AuthStatus) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200Iserver(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(in *jlexer.Lexer, out *Tickle_POST_200_Iserver) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authStatus":
			if in.IsNull() {
				in.Skip()
				out.AuthStatus = nil
			} else {
				if out.AuthStatus == nil {
					out.AuthStatus = new(Tickle_POST_200_Iserver_AuthStatus)
				}
				(*out.AuthStatus).UnmarshalEasyJSON(in)
			}
		case "tickle":
			out.Tickle = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(out *jwriter.Writer, in Tickle_POST_200_Iserver) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"authStatus\":"
		out.RawString(prefix[1:])
		if in.AuthStatus == nil {
			out.RawString("null")
		} else {
			(*in.AuthStatus).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tickle\":"
		out.RawString(prefix)
		out.Bool(bool(in.Tickle))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200_Iserver) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200_Iserver) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200_Iserver) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200_Iserver) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(in *jlexer.Lexer, out *Tickle_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "collission":
			out.Collission = bool(in.Bool())
		case "iserver":
			if in.IsNull() {
				in.Skip()
				out.Iserver = nil
			} else {
				if out.Iserver == nil {
					out.Iserver = new(Tickle_POST_200_Iserver)
				}
				(*out.Iserver).UnmarshalEasyJSON(in)
			}
		case "session":
			out.Session = string(in.String())
		case "ssoExpires":
			out.SsoExpires = int64(in.Int64())
		case "userId":
			out.UserId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(out *jwriter.Writer, in Tickle_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"collission\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Collission))
	}
	{
		const prefix string = ",\"iserver\":"
		out.RawString(prefix)
		if in.Iserver == nil {
			out.RawString("null")
		} else {
			(*in.Iserver).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"session\":"
		out.RawString(prefix)
		out.String(string(in.Session))
	}
	{
		const prefix string = ",\"ssoExpires\":"
		out.RawString(prefix)
		out.Int64(int64(in.SsoExpires))
	}
	{
		const prefix string = ",\"userId\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Tickle_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Tickle_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Tickle_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Tickle_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelTicklePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(in *jlexer.Lexer, out *SystemError) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(out *jwriter.Writer, in SystemError) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SystemError) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SystemError) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SystemError) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SystemError) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(in *jlexer.Lexer, out *Summary_Total) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chg":
			out.Chg = string(in.String())
		case "endVal":
			out.EndVal = string(in.String())
		case "incompleteData":
			out.IncompleteData = bool(in.Bool())
		case "rtn":
			out.Rtn = string(in.String())
		case "startVal":
			out.StartVal = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(out *jwriter.Writer, in Summary_Total) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Chg))
	}
	{
		const prefix string = ",\"endVal\":"
		out.RawString(prefix)
		out.String(string(in.EndVal))
	}
	{
		const prefix string = ",\"incompleteData\":"
		out.RawString(prefix)
		out.Bool(bool(in.IncompleteData))
	}
	{
		const prefix string = ",\"rtn\":"
		out.RawString(prefix)
		out.String(string(in.Rtn))
	}
	{
		const prefix string = ",\"startVal\":"
		out.RawString(prefix)
		out.String(string(in.StartVal))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_Total) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_Total) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_Total) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_Total) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(in *jlexer.Lexer, out *Summary_ExcludedAccounts_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "acctNumAtFI":
			out.AcctNumAtFI = string(in.String())
		case "acctTitle":
			out.AcctTitle = string(in.String())
		case "fiName":
			out.FiName = string(in.String())
		case "harvestCode":
			out.HarvestCode = int64(in.Int64())
		case "lastUpdate":
			out.LastUpdate = string(in.String())
		case "lastUpdateAttempt":
			out.LastUpdateAttempt = string(in.String())
		case "lastUpdateStatusCode":
			out.LastUpdateStatusCode = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(out *jwriter.Writer, in Summary_ExcludedAccounts_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"acctNumAtFI\":"
		out.RawString(prefix)
		out.String(string(in.AcctNumAtFI))
	}
	{
		const prefix string = ",\"acctTitle\":"
		out.RawString(prefix)
		out.String(string(in.AcctTitle))
	}
	{
		const prefix string = ",\"fiName\":"
		out.RawString(prefix)
		out.String(string(in.FiName))
	}
	{
		const prefix string = ",\"harvestCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.HarvestCode))
	}
	{
		const prefix string = ",\"lastUpdate\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdate))
	}
	{
		const prefix string = ",\"lastUpdateAttempt\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdateAttempt))
	}
	{
		const prefix string = ",\"lastUpdateStatusCode\":"
		out.RawString(prefix)
		out.String(string(in.LastUpdateStatusCode))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_ExcludedAccounts_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_ExcludedAccounts_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccountsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(in *jlexer.Lexer, out *Summary_ExcludedAccounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_ExcludedAccounts_List, 0, 8)
			} else {
				*out = Summary_ExcludedAccounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v17 *Summary_ExcludedAccounts_List_Item
			if in.IsNull() {
				in.Skip()
				v17 = nil
			} else {
				if v17 == nil {
					v17 = new(Summary_ExcludedAccounts_List_Item)
				}
				(*v17).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v17)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(out *jwriter.Writer, in Summary_ExcludedAccounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v18, v19 := range in {
			if v18 > 0 {
				out.RawByte(',')
			}
			if v19 == nil {
				out.RawString("null")
			} else {
				(*v19).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_ExcludedAccounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_ExcludedAccounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_ExcludedAccounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryExcludedAccounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List_Item_Date_List_Item_List, 0, 8)
			} else {
				*out = Summary_BalanceByDate_Series_List_Item_Date_List_Item_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v20 float64
			v20 = float64(in.Float64())
			*out = append(*out, v20)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v21, v22 := range in {
			if v21 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v22))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List_Item_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDateListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item_Date_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List_Item_Date_List, 0, 2)
			} else {
				*out = Summary_BalanceByDate_Series_List_Item_Date_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v23 Summary_BalanceByDate_Series_List_Item_Date_List_Item_List
			(v23).UnmarshalEasyJSON(in)
			*out = append(*out, v23)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item_Date_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v24, v25 := range in {
			if v24 > 0 {
				out.RawByte(',')
			}
			(v25).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item_Date_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item_Date_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesListItemDate(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "date":
			(out.Date).UnmarshalEasyJSON(in)
		case "groupId":
			out.GroupId = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(out *jwriter.Writer, in Summary_BalanceByDate_Series_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix[1:])
		(in.Date).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"groupId\":"
		out.RawString(prefix)
		out.String(string(in.GroupId))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeriesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(in *jlexer.Lexer, out *Summary_BalanceByDate_Series_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_BalanceByDate_Series_List, 0, 8)
			} else {
				*out = Summary_BalanceByDate_Series_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v26 *Summary_BalanceByDate_Series_List_Item
			if in.IsNull() {
				in.Skip()
				v26 = nil
			} else {
				if v26 == nil {
					v26 = new(Summary_BalanceByDate_Series_List_Item)
				}
				(*v26).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v26)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(out *jwriter.Writer, in Summary_BalanceByDate_Series_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v27, v28 := range in {
			if v27 > 0 {
				out.RawByte(',')
			}
			if v28 == nil {
				out.RawString("null")
			} else {
				(*v28).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate_Series_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate_Series_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate_Series_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryBalanceByDateSeries(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(in *jlexer.Lexer, out *Summary_BalanceByDate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "series":
			(out.Series).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(out *jwriter.Writer, in Summary_BalanceByDate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"series\":"
		out.RawString(prefix[1:])
		(in.Series).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_BalanceByDate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_BalanceByDate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_BalanceByDate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_BalanceByDate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummary1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(in *jlexer.Lexer, out *Summary_AccountSummaries_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountTypeCode":
			out.AccountTypeCode = string(in.String())
		case "accountTypeName":
			out.AccountTypeName = string(in.String())
		case "chg":
			out.Chg = string(in.String())
		case "endVal":
			out.EndVal = string(in.String())
		case "hasAccounts":
			out.HasAccounts = string(in.String())
		case "rtn":
			out.Rtn = string(in.String())
		case "startVal":
			out.StartVal = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(out *jwriter.Writer, in Summary_AccountSummaries_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountTypeCode\":"
		out.RawString(prefix[1:])
		out.String(string(in.AccountTypeCode))
	}
	{
		const prefix string = ",\"accountTypeName\":"
		out.RawString(prefix)
		out.String(string(in.AccountTypeName))
	}
	{
		const prefix string = ",\"chg\":"
		out.RawString(prefix)
		out.String(string(in.Chg))
	}
	{
		const prefix string = ",\"endVal\":"
		out.RawString(prefix)
		out.String(string(in.EndVal))
	}
	{
		const prefix string = ",\"hasAccounts\":"
		out.RawString(prefix)
		out.String(string(in.HasAccounts))
	}
	{
		const prefix string = ",\"rtn\":"
		out.RawString(prefix)
		out.String(string(in.Rtn))
	}
	{
		const prefix string = ",\"startVal\":"
		out.RawString(prefix)
		out.String(string(in.StartVal))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_AccountSummaries_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_AccountSummaries_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_AccountSummaries_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_AccountSummaries_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummariesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(in *jlexer.Lexer, out *Summary_AccountSummaries_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Summary_AccountSummaries_List, 0, 8)
			} else {
				*out = Summary_AccountSummaries_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v29 *Summary_AccountSummaries_List_Item
			if in.IsNull() {
				in.Skip()
				v29 = nil
			} else {
				if v29 == nil {
					v29 = new(Summary_AccountSummaries_List_Item)
				}
				(*v29).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v29)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(out *jwriter.Writer, in Summary_AccountSummaries_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v30, v31 := range in {
			if v30 > 0 {
				out.RawByte(',')
			}
			if v31 == nil {
				out.RawString("null")
			} else {
				(*v31).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Summary_AccountSummaries_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary_AccountSummaries_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary_AccountSummaries_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary_AccountSummaries_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSummaryAccountSummaries(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(in *jlexer.Lexer, out *Summary) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountSummaries":
			(out.AccountSummaries).UnmarshalEasyJSON(in)
		case "balanceByDate":
			if in.IsNull() {
				in.Skip()
				out.BalanceByDate = nil
			} else {
				if out.BalanceByDate == nil {
					out.BalanceByDate = new(Summary_BalanceByDate)
				}
				(*out.BalanceByDate).UnmarshalEasyJSON(in)
			}
		case "currency":
			out.Currency = string(in.String())
		case "endDate":
			out.EndDate = string(in.String())
		case "excludedAccounts":
			(out.ExcludedAccounts).UnmarshalEasyJSON(in)
		case "hasExternalAccounts":
			out.HasExternalAccounts = bool(in.Bool())
		case "lastSuccessfulUpdate":
			out.LastSuccessfulUpdate = string(in.String())
		case "pm":
			out.Pm = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		case "startDate":
			out.StartDate = string(in.String())
		case "total":
			if in.IsNull() {
				in.Skip()
				out.Total = nil
			} else {
				if out.Total == nil {
					out.Total = new(Summary_Total)
				}
				(*out.Total).UnmarshalEasyJSON(in)
			}
		case "userId":
			out.UserId = string(in.String())
		case "view":
			out.View = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(out *jwriter.Writer, in Summary) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountSummaries\":"
		out.RawString(prefix[1:])
		(in.AccountSummaries).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"balanceByDate\":"
		out.RawString(prefix)
		if in.BalanceByDate == nil {
			out.RawString("null")
		} else {
			(*in.BalanceByDate).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"endDate\":"
		out.RawString(prefix)
		out.String(string(in.EndDate))
	}
	{
		const prefix string = ",\"excludedAccounts\":"
		out.RawString(prefix)
		(in.ExcludedAccounts).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"hasExternalAccounts\":"
		out.RawString(prefix)
		out.Bool(bool(in.HasExternalAccounts))
	}
	{
		const prefix string = ",\"lastSuccessfulUpdate\":"
		out.RawString(prefix)
		out.String(string(in.LastSuccessfulUpdate))
	}
	{
		const prefix string = ",\"pm\":"
		out.RawString(prefix)
		out.String(string(in.Pm))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	{
		const prefix string = ",\"startDate\":"
		out.RawString(prefix)
		out.String(string(in.StartDate))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		if in.Total == nil {
			out.RawString("null")
		} else {
			(*in.Total).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"userId\":"
		out.RawString(prefix)
		out.String(string(in.UserId))
	}
	{
		const prefix string = ",\"view\":"
		out.RawString(prefix)
		out.String(string(in.View))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Summary) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Summary) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Summary) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Summary) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel3(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(in *jlexer.Lexer, out *Stocks_List_Item_Contracts_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = int64(in.Int64())
		case "exchange":
			out.Exchange = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(out *jwriter.Writer, in Stocks_List_Item_Contracts_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item_Contracts_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item_Contracts_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContractsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(in *jlexer.Lexer, out *Stocks_List_Item_Contracts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Stocks_List_Item_Contracts_List, 0, 8)
			} else {
				*out = Stocks_List_Item_Contracts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v32 *Stocks_List_Item_Contracts_List_Item
			if in.IsNull() {
				in.Skip()
				v32 = nil
			} else {
				if v32 == nil {
					v32 = new(Stocks_List_Item_Contracts_List_Item)
				}
				(*v32).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v32)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(out *jwriter.Writer, in Stocks_List_Item_Contracts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v33, v34 := range in {
			if v33 > 0 {
				out.RawByte(',')
			}
			if v34 == nil {
				out.RawString("null")
			} else {
				(*v34).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item_Contracts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item_Contracts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item_Contracts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksListItemContracts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(in *jlexer.Lexer, out *Stocks_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			out.AssetClass = string(in.String())
		case "chineseName":
			out.ChineseName = string(in.String())
		case "contracts":
			(out.Contracts).UnmarshalEasyJSON(in)
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(out *jwriter.Writer, in Stocks_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"chineseName\":"
		out.RawString(prefix)
		out.String(string(in.ChineseName))
	}
	{
		const prefix string = ",\"contracts\":"
		out.RawString(prefix)
		(in.Contracts).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocksList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(in *jlexer.Lexer, out *Stocks_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Stocks_List, 0, 8)
			} else {
				*out = Stocks_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v35 *Stocks_List_Item
			if in.IsNull() {
				in.Skip()
				v35 = nil
			} else {
				if v35 == nil {
					v35 = new(Stocks_List_Item)
				}
				(*v35).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v35)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(out *jwriter.Writer, in Stocks_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v36, v37 := range in {
			if v36 > 0 {
				out.RawByte(',')
			}
			if v37 == nil {
				out.RawString("null")
			} else {
				(*v37).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Stocks_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Stocks_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelStocks(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Stocks_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Stocks_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelStocks(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(in *jlexer.Lexer, out *StatsData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Conid":
			out.Conid = float64(in.Float64())
		case "Exchange":
			out.Exchange = string(in.String())
		case "P":
			out.P = string(in.String())
		case "T":
			out.T = float64(in.Float64())
		case "TT":
			out.TT = float64(in.Float64())
		case "V":
			out.V = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(out *jwriter.Writer, in StatsData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"Exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"P\":"
		out.RawString(prefix)
		out.String(string(in.P))
	}
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix)
		out.Float64(float64(in.T))
	}
	{
		const prefix string = ",\"TT\":"
		out.RawString(prefix)
		out.Float64(float64(in.TT))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Float64(float64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v StatsData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v StatsData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *StatsData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *StatsData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel4(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(in *jlexer.Lexer, out *Sso_Validate_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "AUTH_TIME":
			out.AUTH_TIME = int64(in.Int64())
		case "EXPIRES":
			out.EXPIRES = int64(in.Int64())
		case "IP":
			out.IP = string(in.String())
		case "LOGIN_TYPE":
			out.LOGIN_TYPE = int64(in.Int64())
		case "PAPER_USER_NAME":
			out.PAPER_USER_NAME = string(in.String())
		case "RESULT":
			out.RESULT = bool(in.Bool())
		case "SF_ENABLED":
			out.SF_ENABLED = bool(in.Bool())
		case "USER_ID":
			out.USER_ID = int64(in.Int64())
		case "USER_NAME":
			out.USER_NAME = string(in.String())
		case "expire":
			out.Expire = float64(in.Float64())
		case "features":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Features = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v38 interface{}
					if m, ok := v38.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v38.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v38 = in.Interface()
					}
					(out.Features)[key] = v38
					in.WantComma()
				}
				in.Delim('}')
			}
		case "lastAccessed":
			out.LastAccessed = int64(in.Int64())
		case "loginType":
			out.LoginType = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(out *jwriter.Writer, in Sso_Validate_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"AUTH_TIME\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AUTH_TIME))
	}
	{
		const prefix string = ",\"EXPIRES\":"
		out.RawString(prefix)
		out.Int64(int64(in.EXPIRES))
	}
	{
		const prefix string = ",\"IP\":"
		out.RawString(prefix)
		out.String(string(in.IP))
	}
	{
		const prefix string = ",\"LOGIN_TYPE\":"
		out.RawString(prefix)
		out.Int64(int64(in.LOGIN_TYPE))
	}
	{
		const prefix string = ",\"PAPER_USER_NAME\":"
		out.RawString(prefix)
		out.String(string(in.PAPER_USER_NAME))
	}
	{
		const prefix string = ",\"RESULT\":"
		out.RawString(prefix)
		out.Bool(bool(in.RESULT))
	}
	{
		const prefix string = ",\"SF_ENABLED\":"
		out.RawString(prefix)
		out.Bool(bool(in.SF_ENABLED))
	}
	{
		const prefix string = ",\"USER_ID\":"
		out.RawString(prefix)
		out.Int64(int64(in.USER_ID))
	}
	{
		const prefix string = ",\"USER_NAME\":"
		out.RawString(prefix)
		out.String(string(in.USER_NAME))
	}
	{
		const prefix string = ",\"expire\":"
		out.RawString(prefix)
		out.Float64(float64(in.Expire))
	}
	{
		const prefix string = ",\"features\":"
		out.RawString(prefix)
		if in.Features == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v39First := true
			for v39Name, v39Value := range in.Features {
				if v39First {
					v39First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v39Name))
				out.RawByte(':')
				if m, ok := v39Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v39Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v39Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"lastAccessed\":"
		out.RawString(prefix)
		out.Int64(int64(in.LastAccessed))
	}
	{
		const prefix string = ",\"loginType\":"
		out.RawString(prefix)
		out.Int64(int64(in.LoginType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Sso_Validate_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Sso_Validate_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Sso_Validate_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Sso_Validate_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSsoValidateGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(in *jlexer.Lexer, out *SetAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(out *jwriter.Writer, in SetAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel5(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(in *jlexer.Lexer, out *Secdef_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			out.AssetClass = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "expiry":
			out.Expiry = string(in.String())
		case "fullName":
			out.FullName = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "lastTradingDay":
			out.LastTradingDay = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "pageSize":
			out.PageSize = int64(in.Int64())
		case "putOrCall":
			out.PutOrCall = string(in.String())
		case "sector":
			out.Sector = string(in.String())
		case "sectorGroup":
			out.SectorGroup = string(in.String())
		case "strike":
			out.Strike = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "undConid":
			out.UndConid = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(out *jwriter.Writer, in Secdef_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"expiry\":"
		out.RawString(prefix)
		out.String(string(in.Expiry))
	}
	{
		const prefix string = ",\"fullName\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"lastTradingDay\":"
		out.RawString(prefix)
		out.String(string(in.LastTradingDay))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"pageSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.PageSize))
	}
	{
		const prefix string = ",\"putOrCall\":"
		out.RawString(prefix)
		out.String(string(in.PutOrCall))
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		out.String(string(in.Sector))
	}
	{
		const prefix string = ",\"sectorGroup\":"
		out.RawString(prefix)
		out.String(string(in.SectorGroup))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.Float64(float64(in.Strike))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"undConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UndConid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Secdef_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Secdef_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Secdef_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Secdef_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdefList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(in *jlexer.Lexer, out *Secdef_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Secdef_List, 0, 8)
			} else {
				*out = Secdef_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v40 *Secdef_List_Item
			if in.IsNull() {
				in.Skip()
				v40 = nil
			} else {
				if v40 == nil {
					v40 = new(Secdef_List_Item)
				}
				(*v40).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v40)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(out *jwriter.Writer, in Secdef_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v41, v42 := range in {
			if v41 > 0 {
				out.RawByte(',')
			}
			if v42 == nil {
				out.RawString("null")
			} else {
				(*v42).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Secdef_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Secdef_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Secdef_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Secdef_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelSecdef(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(in *jlexer.Lexer, out *SecdefInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		case "coupon":
			out.Coupon = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "desc1":
			out.Desc1 = string(in.String())
		case "desc2":
			out.Desc2 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "maturityDate":
			out.MaturityDate = string(in.String())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "right":
			out.Right = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "tradingClass":
			out.TradingClass = string(in.String())
		case "validExchanges":
			out.ValidExchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(out *jwriter.Writer, in SecdefInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"coupon\":"
		out.RawString(prefix)
		out.String(string(in.Coupon))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"desc1\":"
		out.RawString(prefix)
		out.String(string(in.Desc1))
	}
	{
		const prefix string = ",\"desc2\":"
		out.RawString(prefix)
		out.String(string(in.Desc2))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"maturityDate\":"
		out.RawString(prefix)
		out.String(string(in.MaturityDate))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"tradingClass\":"
		out.RawString(prefix)
		out.String(string(in.TradingClass))
	}
	{
		const prefix string = ",\"validExchanges\":"
		out.RawString(prefix)
		out.String(string(in.ValidExchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecdefInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecdefInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecdefInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecdefInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel6(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(in *jlexer.Lexer, out *ScannerResult_Contracts_Contract_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "contractID":
			out.ContractID = int64(in.Int64())
		case "distance":
			out.Distance = int64(in.Int64())
		case "inScanTime":
			out.InScanTime = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(out *jwriter.Writer, in ScannerResult_Contracts_Contract_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"contractID\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ContractID))
	}
	{
		const prefix string = ",\"distance\":"
		out.RawString(prefix)
		out.Int64(int64(in.Distance))
	}
	{
		const prefix string = ",\"inScanTime\":"
		out.RawString(prefix)
		out.String(string(in.InScanTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts_Contract_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts_Contract_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContractList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(in *jlexer.Lexer, out *ScannerResult_Contracts_Contract_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerResult_Contracts_Contract_List, 0, 8)
			} else {
				*out = ScannerResult_Contracts_Contract_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v43 *ScannerResult_Contracts_Contract_List_Item
			if in.IsNull() {
				in.Skip()
				v43 = nil
			} else {
				if v43 == nil {
					v43 = new(ScannerResult_Contracts_Contract_List_Item)
				}
				(*v43).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v43)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(out *jwriter.Writer, in ScannerResult_Contracts_Contract_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v44, v45 := range in {
			if v44 > 0 {
				out.RawByte(',')
			}
			if v45 == nil {
				out.RawString("null")
			} else {
				(*v45).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts_Contract_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts_Contract_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts_Contract_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResultContractsContract(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(in *jlexer.Lexer, out *ScannerResult_Contracts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Contract":
			(out.Contract).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(out *jwriter.Writer, in ScannerResult_Contracts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Contract\":"
		out.RawString(prefix[1:])
		(in.Contract).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult_Contracts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult_Contracts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult_Contracts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult_Contracts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerResult(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(in *jlexer.Lexer, out *ScannerResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Contracts":
			if in.IsNull() {
				in.Skip()
				out.Contracts = nil
			} else {
				if out.Contracts == nil {
					out.Contracts = new(ScannerResult_Contracts)
				}
				(*out.Contracts).UnmarshalEasyJSON(in)
			}
		case "id":
			out.Id = float64(in.Float64())
		case "offset":
			out.Offset = int64(in.Int64())
		case "position":
			out.Position = string(in.String())
		case "scanTime":
			out.ScanTime = string(in.String())
		case "size":
			out.Size = int64(in.Int64())
		case "total":
			out.Total = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(out *jwriter.Writer, in ScannerResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Contracts\":"
		out.RawString(prefix[1:])
		if in.Contracts == nil {
			out.RawString("null")
		} else {
			(*in.Contracts).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Id))
	}
	{
		const prefix string = ",\"offset\":"
		out.RawString(prefix)
		out.Int64(int64(in.Offset))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"scanTime\":"
		out.RawString(prefix)
		out.String(string(in.ScanTime))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int64(int64(in.Size))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		out.Int64(int64(in.Total))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel7(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(in *jlexer.Lexer, out *ScannerParams_ScanTypeList_ScanType_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "displayName":
			out.DisplayName = string(in.String())
		case "instruments":
			out.Instruments = string(in.String())
		case "scanCode":
			out.ScanCode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(out *jwriter.Writer, in ScannerParams_ScanTypeList_ScanType_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix[1:])
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		out.String(string(in.Instruments))
	}
	{
		const prefix string = ",\"scanCode\":"
		out.RawString(prefix)
		out.String(string(in.ScanCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanTypeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(in *jlexer.Lexer, out *ScannerParams_ScanTypeList_ScanType_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_ScanTypeList_ScanType_List, 0, 8)
			} else {
				*out = ScannerParams_ScanTypeList_ScanType_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v46 *ScannerParams_ScanTypeList_ScanType_List_Item
			if in.IsNull() {
				in.Skip()
				v46 = nil
			} else {
				if v46 == nil {
					v46 = new(ScannerParams_ScanTypeList_ScanType_List_Item)
				}
				(*v46).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v46)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(out *jwriter.Writer, in ScannerParams_ScanTypeList_ScanType_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v47, v48 := range in {
			if v47 > 0 {
				out.RawByte(',')
			}
			if v48 == nil {
				out.RawString("null")
			} else {
				(*v48).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList_ScanType_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList_ScanType_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsScanTypeListScanType(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(in *jlexer.Lexer, out *ScannerParams_ScanTypeList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ScanType":
			(out.ScanType).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(out *jwriter.Writer, in ScannerParams_ScanTypeList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ScanType\":"
		out.RawString(prefix[1:])
		(in.ScanType).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_ScanTypeList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_ScanTypeList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_ScanTypeList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_ScanTypeList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(in *jlexer.Lexer, out *ScannerParams_LocationTree_Location_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "displayName":
			out.DisplayName = string(in.String())
		case "instruments":
			out.Instruments = string(in.String())
		case "locationCode":
			out.LocationCode = string(in.String())
		case "routeExchange":
			out.RouteExchange = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(out *jwriter.Writer, in ScannerParams_LocationTree_Location_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix[1:])
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		out.String(string(in.Instruments))
	}
	{
		const prefix string = ",\"locationCode\":"
		out.RawString(prefix)
		out.String(string(in.LocationCode))
	}
	{
		const prefix string = ",\"routeExchange\":"
		out.RawString(prefix)
		out.String(string(in.RouteExchange))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree_Location_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree_Location_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocationList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(in *jlexer.Lexer, out *ScannerParams_LocationTree_Location_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_LocationTree_Location_List, 0, 8)
			} else {
				*out = ScannerParams_LocationTree_Location_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v49 *ScannerParams_LocationTree_Location_List_Item
			if in.IsNull() {
				in.Skip()
				v49 = nil
			} else {
				if v49 == nil {
					v49 = new(ScannerParams_LocationTree_Location_List_Item)
				}
				(*v49).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v49)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(out *jwriter.Writer, in ScannerParams_LocationTree_Location_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v50, v51 := range in {
			if v50 > 0 {
				out.RawByte(',')
			}
			if v51 == nil {
				out.RawString("null")
			} else {
				(*v51).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree_Location_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree_Location_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree_Location_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsLocationTreeLocation(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(in *jlexer.Lexer, out *ScannerParams_LocationTree) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Location":
			(out.Location).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(out *jwriter.Writer, in ScannerParams_LocationTree) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Location\":"
		out.RawString(prefix[1:])
		(in.Location).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_LocationTree) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_LocationTree) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_LocationTree) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_LocationTree) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(in *jlexer.Lexer, out *ScannerParams_InstrumentList_Instrument_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filters":
			out.Filters = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "shortName":
			out.ShortName = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(out *jwriter.Writer, in ScannerParams_InstrumentList_Instrument_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix[1:])
		out.String(string(in.Filters))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"shortName\":"
		out.RawString(prefix)
		out.String(string(in.ShortName))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrumentList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(in *jlexer.Lexer, out *ScannerParams_InstrumentList_Instrument_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_InstrumentList_Instrument_List, 0, 8)
			} else {
				*out = ScannerParams_InstrumentList_Instrument_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v52 *ScannerParams_InstrumentList_Instrument_List_Item
			if in.IsNull() {
				in.Skip()
				v52 = nil
			} else {
				if v52 == nil {
					v52 = new(ScannerParams_InstrumentList_Instrument_List_Item)
				}
				(*v52).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v52)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(out *jwriter.Writer, in ScannerParams_InstrumentList_Instrument_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v53, v54 := range in {
			if v53 > 0 {
				out.RawByte(',')
			}
			if v54 == nil {
				out.RawString("null")
			} else {
				(*v54).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList_Instrument_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList_Instrument_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsInstrumentListInstrument(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(in *jlexer.Lexer, out *ScannerParams_InstrumentList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Instrument":
			(out.Instrument).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(out *jwriter.Writer, in ScannerParams_InstrumentList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Instrument\":"
		out.RawString(prefix[1:])
		(in.Instrument).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_InstrumentList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_InstrumentList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_InstrumentList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_InstrumentList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParams2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(in *jlexer.Lexer, out *ScannerParams_FilterList_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ScannerParams_FilterList_List, 0, 8)
			} else {
				*out = ScannerParams_FilterList_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v55 map[string]interface{}
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				v55 = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v56 interface{}
					if m, ok := v56.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v56.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v56 = in.Interface()
					}
					(v55)[key] = v56
					in.WantComma()
				}
				in.Delim('}')
			}
			*out = append(*out, v55)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(out *jwriter.Writer, in ScannerParams_FilterList_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v57, v58 := range in {
			if v57 > 0 {
				out.RawByte(',')
			}
			if v58 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
				out.RawString(`null`)
			} else {
				out.RawByte('{')
				v59First := true
				for v59Name, v59Value := range v58 {
					if v59First {
						v59First = false
					} else {
						out.RawByte(',')
					}
					out.String(string(v59Name))
					out.RawByte(':')
					if m, ok := v59Value.(easyjson.Marshaler); ok {
						m.MarshalEasyJSON(out)
					} else if m, ok := v59Value.(json.Marshaler); ok {
						out.Raw(m.MarshalJSON())
					} else {
						out.Raw(json.Marshal(v59Value))
					}
				}
				out.RawByte('}')
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams_FilterList_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams_FilterList_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams_FilterList_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams_FilterList_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelScannerParamsFilterList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(in *jlexer.Lexer, out *ScannerParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "FilterList":
			(out.FilterList).UnmarshalEasyJSON(in)
		case "InstrumentList":
			if in.IsNull() {
				in.Skip()
				out.InstrumentList = nil
			} else {
				if out.InstrumentList == nil {
					out.InstrumentList = new(ScannerParams_InstrumentList)
				}
				(*out.InstrumentList).UnmarshalEasyJSON(in)
			}
		case "LocationTree":
			if in.IsNull() {
				in.Skip()
				out.LocationTree = nil
			} else {
				if out.LocationTree == nil {
					out.LocationTree = new(ScannerParams_LocationTree)
				}
				(*out.LocationTree).UnmarshalEasyJSON(in)
			}
		case "ScanTypeList":
			if in.IsNull() {
				in.Skip()
				out.ScanTypeList = nil
			} else {
				if out.ScanTypeList == nil {
					out.ScanTypeList = new(ScannerParams_ScanTypeList)
				}
				(*out.ScanTypeList).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(out *jwriter.Writer, in ScannerParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"FilterList\":"
		out.RawString(prefix[1:])
		(in.FilterList).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"InstrumentList\":"
		out.RawString(prefix)
		if in.InstrumentList == nil {
			out.RawString("null")
		} else {
			(*in.InstrumentList).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"LocationTree\":"
		out.RawString(prefix)
		if in.LocationTree == nil {
			out.RawString("null")
		} else {
			(*in.LocationTree).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"ScanTypeList\":"
		out.RawString(prefix)
		if in.ScanTypeList == nil {
			out.RawString("null")
		} else {
			(*in.ScanTypeList).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ScannerParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ScannerParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ScannerParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ScannerParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel8(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(in *jlexer.Lexer, out *Position_List_Item_ConExchMap_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Position_List_Item_ConExchMap_List, 0, 4)
			} else {
				*out = Position_List_Item_ConExchMap_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v60 string
			v60 = string(in.String())
			*out = append(*out, v60)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(out *jwriter.Writer, in Position_List_Item_ConExchMap_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v61, v62 := range in {
			if v61 > 0 {
				out.RawByte(',')
			}
			out.String(string(v62))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List_Item_ConExchMap_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List_Item_ConExchMap_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List_Item_ConExchMap_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List_Item_ConExchMap_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionListItemConExchMap(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(in *jlexer.Lexer, out *Position_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "assetClass":
			out.AssetClass = string(in.String())
		case "avgCost":
			out.AvgCost = float64(in.Float64())
		case "avgPrice":
			out.AvgPrice = float64(in.Float64())
		case "baseAvgCost":
			out.BaseAvgCost = float64(in.Float64())
		case "baseAvgPrice":
			out.BaseAvgPrice = float64(in.Float64())
		case "baseMktPrice":
			out.BaseMktPrice = float64(in.Float64())
		case "baseMktValue":
			out.BaseMktValue = float64(in.Float64())
		case "baseRealizedPnl":
			out.BaseRealizedPnl = float64(in.Float64())
		case "baseUnrealizedPnl":
			out.BaseUnrealizedPnl = float64(in.Float64())
		case "conExchMap":
			(out.ConExchMap).UnmarshalEasyJSON(in)
		case "conid":
			out.Conid = int64(in.Int64())
		case "contractDesc":
			out.ContractDesc = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "exchs":
			out.Exchs = string(in.String())
		case "exerciseStyle":
			out.ExerciseStyle = string(in.String())
		case "expiry":
			out.Expiry = string(in.String())
		case "fullName":
			out.FullName = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "lastTradingDay":
			out.LastTradingDay = string(in.String())
		case "mktPrice":
			out.MktPrice = float64(in.Float64())
		case "mktValue":
			out.MktValue = float64(in.Float64())
		case "model":
			out.Model = string(in.String())
		case "multiplier":
			out.Multiplier = float64(in.Float64())
		case "name":
			out.Name = string(in.String())
		case "pageSize":
			out.PageSize = int64(in.Int64())
		case "position":
			out.Position = float64(in.Float64())
		case "putOrCall":
			out.PutOrCall = string(in.String())
		case "realizedPnl":
			out.RealizedPnl = float64(in.Float64())
		case "sector":
			out.Sector = string(in.String())
		case "sectorGroup":
			out.SectorGroup = string(in.String())
		case "strike":
			out.Strike = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "undComp":
			out.UndComp = string(in.String())
		case "undConid":
			out.UndConid = int64(in.Int64())
		case "undSym":
			out.UndSym = string(in.String())
		case "unrealizedPnl":
			out.UnrealizedPnl = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(out *jwriter.Writer, in Position_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix)
		out.String(string(in.AssetClass))
	}
	{
		const prefix string = ",\"avgCost\":"
		out.RawString(prefix)
		out.Float64(float64(in.AvgCost))
	}
	{
		const prefix string = ",\"avgPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.AvgPrice))
	}
	{
		const prefix string = ",\"baseAvgCost\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseAvgCost))
	}
	{
		const prefix string = ",\"baseAvgPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseAvgPrice))
	}
	{
		const prefix string = ",\"baseMktPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseMktPrice))
	}
	{
		const prefix string = ",\"baseMktValue\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseMktValue))
	}
	{
		const prefix string = ",\"baseRealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseRealizedPnl))
	}
	{
		const prefix string = ",\"baseUnrealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.BaseUnrealizedPnl))
	}
	{
		const prefix string = ",\"conExchMap\":"
		out.RawString(prefix)
		(in.ConExchMap).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"contractDesc\":"
		out.RawString(prefix)
		out.String(string(in.ContractDesc))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"exchs\":"
		out.RawString(prefix)
		out.String(string(in.Exchs))
	}
	{
		const prefix string = ",\"exerciseStyle\":"
		out.RawString(prefix)
		out.String(string(in.ExerciseStyle))
	}
	{
		const prefix string = ",\"expiry\":"
		out.RawString(prefix)
		out.String(string(in.Expiry))
	}
	{
		const prefix string = ",\"fullName\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"lastTradingDay\":"
		out.RawString(prefix)
		out.String(string(in.LastTradingDay))
	}
	{
		const prefix string = ",\"mktPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.MktPrice))
	}
	{
		const prefix string = ",\"mktValue\":"
		out.RawString(prefix)
		out.Float64(float64(in.MktValue))
	}
	{
		const prefix string = ",\"model\":"
		out.RawString(prefix)
		out.String(string(in.Model))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.Float64(float64(in.Multiplier))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"pageSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.PageSize))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Float64(float64(in.Position))
	}
	{
		const prefix string = ",\"putOrCall\":"
		out.RawString(prefix)
		out.String(string(in.PutOrCall))
	}
	{
		const prefix string = ",\"realizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		out.String(string(in.Sector))
	}
	{
		const prefix string = ",\"sectorGroup\":"
		out.RawString(prefix)
		out.String(string(in.SectorGroup))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.Float64(float64(in.Strike))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"undComp\":"
		out.RawString(prefix)
		out.String(string(in.UndComp))
	}
	{
		const prefix string = ",\"undConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UndConid))
	}
	{
		const prefix string = ",\"undSym\":"
		out.RawString(prefix)
		out.String(string(in.UndSym))
	}
	{
		const prefix string = ",\"unrealizedPnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.UnrealizedPnl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPositionList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(in *jlexer.Lexer, out *Position_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Position_List, 0, 8)
			} else {
				*out = Position_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v63 *Position_List_Item
			if in.IsNull() {
				in.Skip()
				v63 = nil
			} else {
				if v63 == nil {
					v63 = new(Position_List_Item)
				}
				(*v63).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v63)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(out *jwriter.Writer, in Position_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v64, v65 := range in {
			if v64 > 0 {
				out.RawByte(',')
			}
			if v65 == nil {
				out.RawString("null")
			} else {
				(*v65).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Position_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Position_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPosition(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Position_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Position_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPosition(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(in *jlexer.Lexer, out *Portfolio_Positions_Conid_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Portfolio_Positions_Conid_GET_200)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v66 Position_List
			(v66).UnmarshalEasyJSON(in)
			(*out)[key] = v66
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(out *jwriter.Writer, in Portfolio_Positions_Conid_GET_200) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v67First := true
		for v67Name, v67Value := range in {
			if v67First {
				v67First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v67Name))
			out.RawByte(':')
			(v67Value).MarshalEasyJSON(out)
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_Positions_Conid_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_Positions_Conid_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_Positions_Conid_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_Positions_Conid_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioPositionsConidGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(in *jlexer.Lexer, out *Portfolio_Allocation_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Portfolio_Allocation_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Portfolio_Allocation_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v68 string
			v68 = string(in.String())
			*out = append(*out, v68)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(out *jwriter.Writer, in Portfolio_Allocation_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v69, v70 := range in {
			if v69 > 0 {
				out.RawByte(',')
			}
			out.String(string(v70))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_Allocation_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_Allocation_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(in *jlexer.Lexer, out *Portfolio_Allocation_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			(out.AcctIds).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(out *jwriter.Writer, in Portfolio_Allocation_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		(in.AcctIds).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_Allocation_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_Allocation_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_Allocation_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAllocationPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(in *jlexer.Lexer, out *Portfolio_AccountId_Summary_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountready":
			if in.IsNull() {
				in.Skip()
				out.Accountready = nil
			} else {
				if out.Accountready == nil {
					out.Accountready = new(Summary)
				}
				(*out.Accountready).UnmarshalEasyJSON(in)
			}
		case "accounttype":
			if in.IsNull() {
				in.Skip()
				out.Accounttype = nil
			} else {
				if out.Accounttype == nil {
					out.Accounttype = new(Summary)
				}
				(*out.Accounttype).UnmarshalEasyJSON(in)
			}
		case "accruedcash":
			if in.IsNull() {
				in.Skip()
				out.Accruedcash = nil
			} else {
				if out.Accruedcash == nil {
					out.Accruedcash = new(Summary)
				}
				(*out.Accruedcash).UnmarshalEasyJSON(in)
			}
		case "accruedcash-c":
			if in.IsNull() {
				in.Skip()
				out.Accruedcash_c = nil
			} else {
				if out.Accruedcash_c == nil {
					out.Accruedcash_c = new(Summary)
				}
				(*out.Accruedcash_c).UnmarshalEasyJSON(in)
			}
		case "accruedcash-f":
			if in.IsNull() {
				in.Skip()
				out.Accruedcash_f = nil
			} else {
				if out.Accruedcash_f == nil {
					out.Accruedcash_f = new(Summary)
				}
				(*out.Accruedcash_f).UnmarshalEasyJSON(in)
			}
		case "accruedcash-s":
			if in.IsNull() {
				in.Skip()
				out.Accruedcash_s = nil
			} else {
				if out.Accruedcash_s == nil {
					out.Accruedcash_s = new(Summary)
				}
				(*out.Accruedcash_s).UnmarshalEasyJSON(in)
			}
		case "accrueddividend":
			if in.IsNull() {
				in.Skip()
				out.Accrueddividend = nil
			} else {
				if out.Accrueddividend == nil {
					out.Accrueddividend = new(Summary)
				}
				(*out.Accrueddividend).UnmarshalEasyJSON(in)
			}
		case "accrueddividend-c":
			if in.IsNull() {
				in.Skip()
				out.Accrueddividend_c = nil
			} else {
				if out.Accrueddividend_c == nil {
					out.Accrueddividend_c = new(Summary)
				}
				(*out.Accrueddividend_c).UnmarshalEasyJSON(in)
			}
		case "accrueddividend-f":
			if in.IsNull() {
				in.Skip()
				out.Accrueddividend_f = nil
			} else {
				if out.Accrueddividend_f == nil {
					out.Accrueddividend_f = new(Summary)
				}
				(*out.Accrueddividend_f).UnmarshalEasyJSON(in)
			}
		case "accrueddividend-s":
			if in.IsNull() {
				in.Skip()
				out.Accrueddividend_s = nil
			} else {
				if out.Accrueddividend_s == nil {
					out.Accrueddividend_s = new(Summary)
				}
				(*out.Accrueddividend_s).UnmarshalEasyJSON(in)
			}
		case "availablefunds":
			if in.IsNull() {
				in.Skip()
				out.Availablefunds = nil
			} else {
				if out.Availablefunds == nil {
					out.Availablefunds = new(Summary)
				}
				(*out.Availablefunds).UnmarshalEasyJSON(in)
			}
		case "availablefunds-c":
			if in.IsNull() {
				in.Skip()
				out.Availablefunds_c = nil
			} else {
				if out.Availablefunds_c == nil {
					out.Availablefunds_c = new(Summary)
				}
				(*out.Availablefunds_c).UnmarshalEasyJSON(in)
			}
		case "availablefunds-f":
			if in.IsNull() {
				in.Skip()
				out.Availablefunds_f = nil
			} else {
				if out.Availablefunds_f == nil {
					out.Availablefunds_f = new(Summary)
				}
				(*out.Availablefunds_f).UnmarshalEasyJSON(in)
			}
		case "availablefunds-s":
			if in.IsNull() {
				in.Skip()
				out.Availablefunds_s = nil
			} else {
				if out.Availablefunds_s == nil {
					out.Availablefunds_s = new(Summary)
				}
				(*out.Availablefunds_s).UnmarshalEasyJSON(in)
			}
		case "billable":
			if in.IsNull() {
				in.Skip()
				out.Billable = nil
			} else {
				if out.Billable == nil {
					out.Billable = new(Summary)
				}
				(*out.Billable).UnmarshalEasyJSON(in)
			}
		case "billable-c":
			if in.IsNull() {
				in.Skip()
				out.Billable_c = nil
			} else {
				if out.Billable_c == nil {
					out.Billable_c = new(Summary)
				}
				(*out.Billable_c).UnmarshalEasyJSON(in)
			}
		case "billable-f":
			if in.IsNull() {
				in.Skip()
				out.Billable_f = nil
			} else {
				if out.Billable_f == nil {
					out.Billable_f = new(Summary)
				}
				(*out.Billable_f).UnmarshalEasyJSON(in)
			}
		case "billable-s":
			if in.IsNull() {
				in.Skip()
				out.Billable_s = nil
			} else {
				if out.Billable_s == nil {
					out.Billable_s = new(Summary)
				}
				(*out.Billable_s).UnmarshalEasyJSON(in)
			}
		case "buyingpower":
			if in.IsNull() {
				in.Skip()
				out.Buyingpower = nil
			} else {
				if out.Buyingpower == nil {
					out.Buyingpower = new(Summary)
				}
				(*out.Buyingpower).UnmarshalEasyJSON(in)
			}
		case "cushion":
			if in.IsNull() {
				in.Skip()
				out.Cushion = nil
			} else {
				if out.Cushion == nil {
					out.Cushion = new(Summary)
				}
				(*out.Cushion).UnmarshalEasyJSON(in)
			}
		case "daytradesremaining":
			if in.IsNull() {
				in.Skip()
				out.Daytradesremaining = nil
			} else {
				if out.Daytradesremaining == nil {
					out.Daytradesremaining = new(Summary)
				}
				(*out.Daytradesremaining).UnmarshalEasyJSON(in)
			}
		case "daytradesremainingt+1":
			if in.IsNull() {
				in.Skip()
				out.Daytradesremainingt_plus_1 = nil
			} else {
				if out.Daytradesremainingt_plus_1 == nil {
					out.Daytradesremainingt_plus_1 = new(Summary)
				}
				(*out.Daytradesremainingt_plus_1).UnmarshalEasyJSON(in)
			}
		case "daytradesremainingt+2":
			if in.IsNull() {
				in.Skip()
				out.Daytradesremainingt_plus_2 = nil
			} else {
				if out.Daytradesremainingt_plus_2 == nil {
					out.Daytradesremainingt_plus_2 = new(Summary)
				}
				(*out.Daytradesremainingt_plus_2).UnmarshalEasyJSON(in)
			}
		case "daytradesremainingt+3":
			if in.IsNull() {
				in.Skip()
				out.Daytradesremainingt_plus_3 = nil
			} else {
				if out.Daytradesremainingt_plus_3 == nil {
					out.Daytradesremainingt_plus_3 = new(Summary)
				}
				(*out.Daytradesremainingt_plus_3).UnmarshalEasyJSON(in)
			}
		case "daytradesremainingt+4":
			if in.IsNull() {
				in.Skip()
				out.Daytradesremainingt_plus_4 = nil
			} else {
				if out.Daytradesremainingt_plus_4 == nil {
					out.Daytradesremainingt_plus_4 = new(Summary)
				}
				(*out.Daytradesremainingt_plus_4).UnmarshalEasyJSON(in)
			}
		case "equitywithloanvalue":
			if in.IsNull() {
				in.Skip()
				out.Equitywithloanvalue = nil
			} else {
				if out.Equitywithloanvalue == nil {
					out.Equitywithloanvalue = new(Summary)
				}
				(*out.Equitywithloanvalue).UnmarshalEasyJSON(in)
			}
		case "equitywithloanvalue-c":
			if in.IsNull() {
				in.Skip()
				out.Equitywithloanvalue_c = nil
			} else {
				if out.Equitywithloanvalue_c == nil {
					out.Equitywithloanvalue_c = new(Summary)
				}
				(*out.Equitywithloanvalue_c).UnmarshalEasyJSON(in)
			}
		case "equitywithloanvalue-f":
			if in.IsNull() {
				in.Skip()
				out.Equitywithloanvalue_f = nil
			} else {
				if out.Equitywithloanvalue_f == nil {
					out.Equitywithloanvalue_f = new(Summary)
				}
				(*out.Equitywithloanvalue_f).UnmarshalEasyJSON(in)
			}
		case "equitywithloanvalue-s":
			if in.IsNull() {
				in.Skip()
				out.Equitywithloanvalue_s = nil
			} else {
				if out.Equitywithloanvalue_s == nil {
					out.Equitywithloanvalue_s = new(Summary)
				}
				(*out.Equitywithloanvalue_s).UnmarshalEasyJSON(in)
			}
		case "excessliquidity":
			if in.IsNull() {
				in.Skip()
				out.Excessliquidity = nil
			} else {
				if out.Excessliquidity == nil {
					out.Excessliquidity = new(Summary)
				}
				(*out.Excessliquidity).UnmarshalEasyJSON(in)
			}
		case "excessliquidity-c":
			if in.IsNull() {
				in.Skip()
				out.Excessliquidity_c = nil
			} else {
				if out.Excessliquidity_c == nil {
					out.Excessliquidity_c = new(Summary)
				}
				(*out.Excessliquidity_c).UnmarshalEasyJSON(in)
			}
		case "excessliquidity-f":
			if in.IsNull() {
				in.Skip()
				out.Excessliquidity_f = nil
			} else {
				if out.Excessliquidity_f == nil {
					out.Excessliquidity_f = new(Summary)
				}
				(*out.Excessliquidity_f).UnmarshalEasyJSON(in)
			}
		case "excessliquidity-s":
			if in.IsNull() {
				in.Skip()
				out.Excessliquidity_s = nil
			} else {
				if out.Excessliquidity_s == nil {
					out.Excessliquidity_s = new(Summary)
				}
				(*out.Excessliquidity_s).UnmarshalEasyJSON(in)
			}
		case "fullavailablefunds":
			if in.IsNull() {
				in.Skip()
				out.Fullavailablefunds = nil
			} else {
				if out.Fullavailablefunds == nil {
					out.Fullavailablefunds = new(Summary)
				}
				(*out.Fullavailablefunds).UnmarshalEasyJSON(in)
			}
		case "fullavailablefunds-c":
			if in.IsNull() {
				in.Skip()
				out.Fullavailablefunds_c = nil
			} else {
				if out.Fullavailablefunds_c == nil {
					out.Fullavailablefunds_c = new(Summary)
				}
				(*out.Fullavailablefunds_c).UnmarshalEasyJSON(in)
			}
		case "fullavailablefunds-f":
			if in.IsNull() {
				in.Skip()
				out.Fullavailablefunds_f = nil
			} else {
				if out.Fullavailablefunds_f == nil {
					out.Fullavailablefunds_f = new(Summary)
				}
				(*out.Fullavailablefunds_f).UnmarshalEasyJSON(in)
			}
		case "fullavailablefunds-s":
			if in.IsNull() {
				in.Skip()
				out.Fullavailablefunds_s = nil
			} else {
				if out.Fullavailablefunds_s == nil {
					out.Fullavailablefunds_s = new(Summary)
				}
				(*out.Fullavailablefunds_s).UnmarshalEasyJSON(in)
			}
		case "fullexcessliquidity":
			if in.IsNull() {
				in.Skip()
				out.Fullexcessliquidity = nil
			} else {
				if out.Fullexcessliquidity == nil {
					out.Fullexcessliquidity = new(Summary)
				}
				(*out.Fullexcessliquidity).UnmarshalEasyJSON(in)
			}
		case "fullexcessliquidity-c":
			if in.IsNull() {
				in.Skip()
				out.Fullexcessliquidity_c = nil
			} else {
				if out.Fullexcessliquidity_c == nil {
					out.Fullexcessliquidity_c = new(Summary)
				}
				(*out.Fullexcessliquidity_c).UnmarshalEasyJSON(in)
			}
		case "fullexcessliquidity-f":
			if in.IsNull() {
				in.Skip()
				out.Fullexcessliquidity_f = nil
			} else {
				if out.Fullexcessliquidity_f == nil {
					out.Fullexcessliquidity_f = new(Summary)
				}
				(*out.Fullexcessliquidity_f).UnmarshalEasyJSON(in)
			}
		case "fullexcessliquidity-s":
			if in.IsNull() {
				in.Skip()
				out.Fullexcessliquidity_s = nil
			} else {
				if out.Fullexcessliquidity_s == nil {
					out.Fullexcessliquidity_s = new(Summary)
				}
				(*out.Fullexcessliquidity_s).UnmarshalEasyJSON(in)
			}
		case "fullinitmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Fullinitmarginreq = nil
			} else {
				if out.Fullinitmarginreq == nil {
					out.Fullinitmarginreq = new(Summary)
				}
				(*out.Fullinitmarginreq).UnmarshalEasyJSON(in)
			}
		case "fullinitmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Fullinitmarginreq_c = nil
			} else {
				if out.Fullinitmarginreq_c == nil {
					out.Fullinitmarginreq_c = new(Summary)
				}
				(*out.Fullinitmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "fullinitmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Fullinitmarginreq_f = nil
			} else {
				if out.Fullinitmarginreq_f == nil {
					out.Fullinitmarginreq_f = new(Summary)
				}
				(*out.Fullinitmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "fullinitmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Fullinitmarginreq_s = nil
			} else {
				if out.Fullinitmarginreq_s == nil {
					out.Fullinitmarginreq_s = new(Summary)
				}
				(*out.Fullinitmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "fullmaintmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Fullmaintmarginreq = nil
			} else {
				if out.Fullmaintmarginreq == nil {
					out.Fullmaintmarginreq = new(Summary)
				}
				(*out.Fullmaintmarginreq).UnmarshalEasyJSON(in)
			}
		case "fullmaintmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Fullmaintmarginreq_c = nil
			} else {
				if out.Fullmaintmarginreq_c == nil {
					out.Fullmaintmarginreq_c = new(Summary)
				}
				(*out.Fullmaintmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "fullmaintmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Fullmaintmarginreq_f = nil
			} else {
				if out.Fullmaintmarginreq_f == nil {
					out.Fullmaintmarginreq_f = new(Summary)
				}
				(*out.Fullmaintmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "fullmaintmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Fullmaintmarginreq_s = nil
			} else {
				if out.Fullmaintmarginreq_s == nil {
					out.Fullmaintmarginreq_s = new(Summary)
				}
				(*out.Fullmaintmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "grosspositionvalue":
			if in.IsNull() {
				in.Skip()
				out.Grosspositionvalue = nil
			} else {
				if out.Grosspositionvalue == nil {
					out.Grosspositionvalue = new(Summary)
				}
				(*out.Grosspositionvalue).UnmarshalEasyJSON(in)
			}
		case "grosspositionvalue-c":
			if in.IsNull() {
				in.Skip()
				out.Grosspositionvalue_c = nil
			} else {
				if out.Grosspositionvalue_c == nil {
					out.Grosspositionvalue_c = new(Summary)
				}
				(*out.Grosspositionvalue_c).UnmarshalEasyJSON(in)
			}
		case "grosspositionvalue-f":
			if in.IsNull() {
				in.Skip()
				out.Grosspositionvalue_f = nil
			} else {
				if out.Grosspositionvalue_f == nil {
					out.Grosspositionvalue_f = new(Summary)
				}
				(*out.Grosspositionvalue_f).UnmarshalEasyJSON(in)
			}
		case "grosspositionvalue-s":
			if in.IsNull() {
				in.Skip()
				out.Grosspositionvalue_s = nil
			} else {
				if out.Grosspositionvalue_s == nil {
					out.Grosspositionvalue_s = new(Summary)
				}
				(*out.Grosspositionvalue_s).UnmarshalEasyJSON(in)
			}
		case "guarantee":
			if in.IsNull() {
				in.Skip()
				out.Guarantee = nil
			} else {
				if out.Guarantee == nil {
					out.Guarantee = new(Summary)
				}
				(*out.Guarantee).UnmarshalEasyJSON(in)
			}
		case "guarantee-c":
			if in.IsNull() {
				in.Skip()
				out.Guarantee_c = nil
			} else {
				if out.Guarantee_c == nil {
					out.Guarantee_c = new(Summary)
				}
				(*out.Guarantee_c).UnmarshalEasyJSON(in)
			}
		case "guarantee-f":
			if in.IsNull() {
				in.Skip()
				out.Guarantee_f = nil
			} else {
				if out.Guarantee_f == nil {
					out.Guarantee_f = new(Summary)
				}
				(*out.Guarantee_f).UnmarshalEasyJSON(in)
			}
		case "guarantee-s":
			if in.IsNull() {
				in.Skip()
				out.Guarantee_s = nil
			} else {
				if out.Guarantee_s == nil {
					out.Guarantee_s = new(Summary)
				}
				(*out.Guarantee_s).UnmarshalEasyJSON(in)
			}
		case "highestseverity":
			if in.IsNull() {
				in.Skip()
				out.Highestseverity = nil
			} else {
				if out.Highestseverity == nil {
					out.Highestseverity = new(Summary)
				}
				(*out.Highestseverity).UnmarshalEasyJSON(in)
			}
		case "highestseverity-c":
			if in.IsNull() {
				in.Skip()
				out.Highestseverity_c = nil
			} else {
				if out.Highestseverity_c == nil {
					out.Highestseverity_c = new(Summary)
				}
				(*out.Highestseverity_c).UnmarshalEasyJSON(in)
			}
		case "highestseverity-f":
			if in.IsNull() {
				in.Skip()
				out.Highestseverity_f = nil
			} else {
				if out.Highestseverity_f == nil {
					out.Highestseverity_f = new(Summary)
				}
				(*out.Highestseverity_f).UnmarshalEasyJSON(in)
			}
		case "highestseverity-s":
			if in.IsNull() {
				in.Skip()
				out.Highestseverity_s = nil
			} else {
				if out.Highestseverity_s == nil {
					out.Highestseverity_s = new(Summary)
				}
				(*out.Highestseverity_s).UnmarshalEasyJSON(in)
			}
		case "indianstockhaircut":
			if in.IsNull() {
				in.Skip()
				out.Indianstockhaircut = nil
			} else {
				if out.Indianstockhaircut == nil {
					out.Indianstockhaircut = new(Summary)
				}
				(*out.Indianstockhaircut).UnmarshalEasyJSON(in)
			}
		case "indianstockhaircut-c":
			if in.IsNull() {
				in.Skip()
				out.Indianstockhaircut_c = nil
			} else {
				if out.Indianstockhaircut_c == nil {
					out.Indianstockhaircut_c = new(Summary)
				}
				(*out.Indianstockhaircut_c).UnmarshalEasyJSON(in)
			}
		case "indianstockhaircut-f":
			if in.IsNull() {
				in.Skip()
				out.Indianstockhaircut_f = nil
			} else {
				if out.Indianstockhaircut_f == nil {
					out.Indianstockhaircut_f = new(Summary)
				}
				(*out.Indianstockhaircut_f).UnmarshalEasyJSON(in)
			}
		case "indianstockhaircut-s":
			if in.IsNull() {
				in.Skip()
				out.Indianstockhaircut_s = nil
			} else {
				if out.Indianstockhaircut_s == nil {
					out.Indianstockhaircut_s = new(Summary)
				}
				(*out.Indianstockhaircut_s).UnmarshalEasyJSON(in)
			}
		case "initmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Initmarginreq = nil
			} else {
				if out.Initmarginreq == nil {
					out.Initmarginreq = new(Summary)
				}
				(*out.Initmarginreq).UnmarshalEasyJSON(in)
			}
		case "initmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Initmarginreq_c = nil
			} else {
				if out.Initmarginreq_c == nil {
					out.Initmarginreq_c = new(Summary)
				}
				(*out.Initmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "initmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Initmarginreq_f = nil
			} else {
				if out.Initmarginreq_f == nil {
					out.Initmarginreq_f = new(Summary)
				}
				(*out.Initmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "initmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Initmarginreq_s = nil
			} else {
				if out.Initmarginreq_s == nil {
					out.Initmarginreq_s = new(Summary)
				}
				(*out.Initmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "leverage":
			if in.IsNull() {
				in.Skip()
				out.Leverage = nil
			} else {
				if out.Leverage == nil {
					out.Leverage = new(Summary)
				}
				(*out.Leverage).UnmarshalEasyJSON(in)
			}
		case "leverage-c":
			if in.IsNull() {
				in.Skip()
				out.Leverage_c = nil
			} else {
				if out.Leverage_c == nil {
					out.Leverage_c = new(Summary)
				}
				(*out.Leverage_c).UnmarshalEasyJSON(in)
			}
		case "leverage-f":
			if in.IsNull() {
				in.Skip()
				out.Leverage_f = nil
			} else {
				if out.Leverage_f == nil {
					out.Leverage_f = new(Summary)
				}
				(*out.Leverage_f).UnmarshalEasyJSON(in)
			}
		case "leverage-s":
			if in.IsNull() {
				in.Skip()
				out.Leverage_s = nil
			} else {
				if out.Leverage_s == nil {
					out.Leverage_s = new(Summary)
				}
				(*out.Leverage_s).UnmarshalEasyJSON(in)
			}
		case "lookaheadavailablefunds":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadavailablefunds = nil
			} else {
				if out.Lookaheadavailablefunds == nil {
					out.Lookaheadavailablefunds = new(Summary)
				}
				(*out.Lookaheadavailablefunds).UnmarshalEasyJSON(in)
			}
		case "lookaheadavailablefunds-c":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadavailablefunds_c = nil
			} else {
				if out.Lookaheadavailablefunds_c == nil {
					out.Lookaheadavailablefunds_c = new(Summary)
				}
				(*out.Lookaheadavailablefunds_c).UnmarshalEasyJSON(in)
			}
		case "lookaheadavailablefunds-f":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadavailablefunds_f = nil
			} else {
				if out.Lookaheadavailablefunds_f == nil {
					out.Lookaheadavailablefunds_f = new(Summary)
				}
				(*out.Lookaheadavailablefunds_f).UnmarshalEasyJSON(in)
			}
		case "lookaheadavailablefunds-s":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadavailablefunds_s = nil
			} else {
				if out.Lookaheadavailablefunds_s == nil {
					out.Lookaheadavailablefunds_s = new(Summary)
				}
				(*out.Lookaheadavailablefunds_s).UnmarshalEasyJSON(in)
			}
		case "lookaheadexcessliquidity":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadexcessliquidity = nil
			} else {
				if out.Lookaheadexcessliquidity == nil {
					out.Lookaheadexcessliquidity = new(Summary)
				}
				(*out.Lookaheadexcessliquidity).UnmarshalEasyJSON(in)
			}
		case "lookaheadexcessliquidity-c":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadexcessliquidity_c = nil
			} else {
				if out.Lookaheadexcessliquidity_c == nil {
					out.Lookaheadexcessliquidity_c = new(Summary)
				}
				(*out.Lookaheadexcessliquidity_c).UnmarshalEasyJSON(in)
			}
		case "lookaheadexcessliquidity-f":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadexcessliquidity_f = nil
			} else {
				if out.Lookaheadexcessliquidity_f == nil {
					out.Lookaheadexcessliquidity_f = new(Summary)
				}
				(*out.Lookaheadexcessliquidity_f).UnmarshalEasyJSON(in)
			}
		case "lookaheadexcessliquidity-s":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadexcessliquidity_s = nil
			} else {
				if out.Lookaheadexcessliquidity_s == nil {
					out.Lookaheadexcessliquidity_s = new(Summary)
				}
				(*out.Lookaheadexcessliquidity_s).UnmarshalEasyJSON(in)
			}
		case "lookaheadinitmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadinitmarginreq = nil
			} else {
				if out.Lookaheadinitmarginreq == nil {
					out.Lookaheadinitmarginreq = new(Summary)
				}
				(*out.Lookaheadinitmarginreq).UnmarshalEasyJSON(in)
			}
		case "lookaheadinitmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadinitmarginreq_c = nil
			} else {
				if out.Lookaheadinitmarginreq_c == nil {
					out.Lookaheadinitmarginreq_c = new(Summary)
				}
				(*out.Lookaheadinitmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "lookaheadinitmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadinitmarginreq_f = nil
			} else {
				if out.Lookaheadinitmarginreq_f == nil {
					out.Lookaheadinitmarginreq_f = new(Summary)
				}
				(*out.Lookaheadinitmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "lookaheadinitmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadinitmarginreq_s = nil
			} else {
				if out.Lookaheadinitmarginreq_s == nil {
					out.Lookaheadinitmarginreq_s = new(Summary)
				}
				(*out.Lookaheadinitmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "lookaheadmaintmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadmaintmarginreq = nil
			} else {
				if out.Lookaheadmaintmarginreq == nil {
					out.Lookaheadmaintmarginreq = new(Summary)
				}
				(*out.Lookaheadmaintmarginreq).UnmarshalEasyJSON(in)
			}
		case "lookaheadmaintmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadmaintmarginreq_c = nil
			} else {
				if out.Lookaheadmaintmarginreq_c == nil {
					out.Lookaheadmaintmarginreq_c = new(Summary)
				}
				(*out.Lookaheadmaintmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "lookaheadmaintmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadmaintmarginreq_f = nil
			} else {
				if out.Lookaheadmaintmarginreq_f == nil {
					out.Lookaheadmaintmarginreq_f = new(Summary)
				}
				(*out.Lookaheadmaintmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "lookaheadmaintmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadmaintmarginreq_s = nil
			} else {
				if out.Lookaheadmaintmarginreq_s == nil {
					out.Lookaheadmaintmarginreq_s = new(Summary)
				}
				(*out.Lookaheadmaintmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "lookaheadnextchange":
			if in.IsNull() {
				in.Skip()
				out.Lookaheadnextchange = nil
			} else {
				if out.Lookaheadnextchange == nil {
					out.Lookaheadnextchange = new(Summary)
				}
				(*out.Lookaheadnextchange).UnmarshalEasyJSON(in)
			}
		case "maintmarginreq":
			if in.IsNull() {
				in.Skip()
				out.Maintmarginreq = nil
			} else {
				if out.Maintmarginreq == nil {
					out.Maintmarginreq = new(Summary)
				}
				(*out.Maintmarginreq).UnmarshalEasyJSON(in)
			}
		case "maintmarginreq-c":
			if in.IsNull() {
				in.Skip()
				out.Maintmarginreq_c = nil
			} else {
				if out.Maintmarginreq_c == nil {
					out.Maintmarginreq_c = new(Summary)
				}
				(*out.Maintmarginreq_c).UnmarshalEasyJSON(in)
			}
		case "maintmarginreq-f":
			if in.IsNull() {
				in.Skip()
				out.Maintmarginreq_f = nil
			} else {
				if out.Maintmarginreq_f == nil {
					out.Maintmarginreq_f = new(Summary)
				}
				(*out.Maintmarginreq_f).UnmarshalEasyJSON(in)
			}
		case "maintmarginreq-s":
			if in.IsNull() {
				in.Skip()
				out.Maintmarginreq_s = nil
			} else {
				if out.Maintmarginreq_s == nil {
					out.Maintmarginreq_s = new(Summary)
				}
				(*out.Maintmarginreq_s).UnmarshalEasyJSON(in)
			}
		case "netliquidation":
			if in.IsNull() {
				in.Skip()
				out.Netliquidation = nil
			} else {
				if out.Netliquidation == nil {
					out.Netliquidation = new(Summary)
				}
				(*out.Netliquidation).UnmarshalEasyJSON(in)
			}
		case "netliquidation-c":
			if in.IsNull() {
				in.Skip()
				out.Netliquidation_c = nil
			} else {
				if out.Netliquidation_c == nil {
					out.Netliquidation_c = new(Summary)
				}
				(*out.Netliquidation_c).UnmarshalEasyJSON(in)
			}
		case "netliquidation-f":
			if in.IsNull() {
				in.Skip()
				out.Netliquidation_f = nil
			} else {
				if out.Netliquidation_f == nil {
					out.Netliquidation_f = new(Summary)
				}
				(*out.Netliquidation_f).UnmarshalEasyJSON(in)
			}
		case "netliquidation-s":
			if in.IsNull() {
				in.Skip()
				out.Netliquidation_s = nil
			} else {
				if out.Netliquidation_s == nil {
					out.Netliquidation_s = new(Summary)
				}
				(*out.Netliquidation_s).UnmarshalEasyJSON(in)
			}
		case "netliquidationuncertainty":
			if in.IsNull() {
				in.Skip()
				out.Netliquidationuncertainty = nil
			} else {
				if out.Netliquidationuncertainty == nil {
					out.Netliquidationuncertainty = new(Summary)
				}
				(*out.Netliquidationuncertainty).UnmarshalEasyJSON(in)
			}
		case "nlvandmargininreview":
			if in.IsNull() {
				in.Skip()
				out.Nlvandmargininreview = nil
			} else {
				if out.Nlvandmargininreview == nil {
					out.Nlvandmargininreview = new(Summary)
				}
				(*out.Nlvandmargininreview).UnmarshalEasyJSON(in)
			}
		case "pasharesvalue":
			if in.IsNull() {
				in.Skip()
				out.Pasharesvalue = nil
			} else {
				if out.Pasharesvalue == nil {
					out.Pasharesvalue = new(Summary)
				}
				(*out.Pasharesvalue).UnmarshalEasyJSON(in)
			}
		case "pasharesvalue-c":
			if in.IsNull() {
				in.Skip()
				out.Pasharesvalue_c = nil
			} else {
				if out.Pasharesvalue_c == nil {
					out.Pasharesvalue_c = new(Summary)
				}
				(*out.Pasharesvalue_c).UnmarshalEasyJSON(in)
			}
		case "pasharesvalue-f":
			if in.IsNull() {
				in.Skip()
				out.Pasharesvalue_f = nil
			} else {
				if out.Pasharesvalue_f == nil {
					out.Pasharesvalue_f = new(Summary)
				}
				(*out.Pasharesvalue_f).UnmarshalEasyJSON(in)
			}
		case "pasharesvalue-s":
			if in.IsNull() {
				in.Skip()
				out.Pasharesvalue_s = nil
			} else {
				if out.Pasharesvalue_s == nil {
					out.Pasharesvalue_s = new(Summary)
				}
				(*out.Pasharesvalue_s).UnmarshalEasyJSON(in)
			}
		case "postexpirationexcess":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationexcess = nil
			} else {
				if out.Postexpirationexcess == nil {
					out.Postexpirationexcess = new(Summary)
				}
				(*out.Postexpirationexcess).UnmarshalEasyJSON(in)
			}
		case "postexpirationexcess-c":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationexcess_c = nil
			} else {
				if out.Postexpirationexcess_c == nil {
					out.Postexpirationexcess_c = new(Summary)
				}
				(*out.Postexpirationexcess_c).UnmarshalEasyJSON(in)
			}
		case "postexpirationexcess-f":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationexcess_f = nil
			} else {
				if out.Postexpirationexcess_f == nil {
					out.Postexpirationexcess_f = new(Summary)
				}
				(*out.Postexpirationexcess_f).UnmarshalEasyJSON(in)
			}
		case "postexpirationexcess-s":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationexcess_s = nil
			} else {
				if out.Postexpirationexcess_s == nil {
					out.Postexpirationexcess_s = new(Summary)
				}
				(*out.Postexpirationexcess_s).UnmarshalEasyJSON(in)
			}
		case "postexpirationmargin":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationmargin = nil
			} else {
				if out.Postexpirationmargin == nil {
					out.Postexpirationmargin = new(Summary)
				}
				(*out.Postexpirationmargin).UnmarshalEasyJSON(in)
			}
		case "postexpirationmargin-c":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationmargin_c = nil
			} else {
				if out.Postexpirationmargin_c == nil {
					out.Postexpirationmargin_c = new(Summary)
				}
				(*out.Postexpirationmargin_c).UnmarshalEasyJSON(in)
			}
		case "postexpirationmargin-f":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationmargin_f = nil
			} else {
				if out.Postexpirationmargin_f == nil {
					out.Postexpirationmargin_f = new(Summary)
				}
				(*out.Postexpirationmargin_f).UnmarshalEasyJSON(in)
			}
		case "postexpirationmargin-s":
			if in.IsNull() {
				in.Skip()
				out.Postexpirationmargin_s = nil
			} else {
				if out.Postexpirationmargin_s == nil {
					out.Postexpirationmargin_s = new(Summary)
				}
				(*out.Postexpirationmargin_s).UnmarshalEasyJSON(in)
			}
		case "previousdayequitywithloanvalue":
			if in.IsNull() {
				in.Skip()
				out.Previousdayequitywithloanvalue = nil
			} else {
				if out.Previousdayequitywithloanvalue == nil {
					out.Previousdayequitywithloanvalue = new(Summary)
				}
				(*out.Previousdayequitywithloanvalue).UnmarshalEasyJSON(in)
			}
		case "previousdayequitywithloanvalue-c":
			if in.IsNull() {
				in.Skip()
				out.Previousdayequitywithloanvalue_c = nil
			} else {
				if out.Previousdayequitywithloanvalue_c == nil {
					out.Previousdayequitywithloanvalue_c = new(Summary)
				}
				(*out.Previousdayequitywithloanvalue_c).UnmarshalEasyJSON(in)
			}
		case "previousdayequitywithloanvalue-f":
			if in.IsNull() {
				in.Skip()
				out.Previousdayequitywithloanvalue_f = nil
			} else {
				if out.Previousdayequitywithloanvalue_f == nil {
					out.Previousdayequitywithloanvalue_f = new(Summary)
				}
				(*out.Previousdayequitywithloanvalue_f).UnmarshalEasyJSON(in)
			}
		case "previousdayequitywithloanvalue-s":
			if in.IsNull() {
				in.Skip()
				out.Previousdayequitywithloanvalue_s = nil
			} else {
				if out.Previousdayequitywithloanvalue_s == nil {
					out.Previousdayequitywithloanvalue_s = new(Summary)
				}
				(*out.Previousdayequitywithloanvalue_s).UnmarshalEasyJSON(in)
			}
		case "segmenttitle-c":
			if in.IsNull() {
				in.Skip()
				out.Segmenttitle_c = nil
			} else {
				if out.Segmenttitle_c == nil {
					out.Segmenttitle_c = new(Summary)
				}
				(*out.Segmenttitle_c).UnmarshalEasyJSON(in)
			}
		case "segmenttitle-f":
			if in.IsNull() {
				in.Skip()
				out.Segmenttitle_f = nil
			} else {
				if out.Segmenttitle_f == nil {
					out.Segmenttitle_f = new(Summary)
				}
				(*out.Segmenttitle_f).UnmarshalEasyJSON(in)
			}
		case "segmenttitle-s":
			if in.IsNull() {
				in.Skip()
				out.Segmenttitle_s = nil
			} else {
				if out.Segmenttitle_s == nil {
					out.Segmenttitle_s = new(Summary)
				}
				(*out.Segmenttitle_s).UnmarshalEasyJSON(in)
			}
		case "totalcashvalue":
			if in.IsNull() {
				in.Skip()
				out.Totalcashvalue = nil
			} else {
				if out.Totalcashvalue == nil {
					out.Totalcashvalue = new(Summary)
				}
				(*out.Totalcashvalue).UnmarshalEasyJSON(in)
			}
		case "totalcashvalue-c":
			if in.IsNull() {
				in.Skip()
				out.Totalcashvalue_c = nil
			} else {
				if out.Totalcashvalue_c == nil {
					out.Totalcashvalue_c = new(Summary)
				}
				(*out.Totalcashvalue_c).UnmarshalEasyJSON(in)
			}
		case "totalcashvalue-f":
			if in.IsNull() {
				in.Skip()
				out.Totalcashvalue_f = nil
			} else {
				if out.Totalcashvalue_f == nil {
					out.Totalcashvalue_f = new(Summary)
				}
				(*out.Totalcashvalue_f).UnmarshalEasyJSON(in)
			}
		case "totalcashvalue-s":
			if in.IsNull() {
				in.Skip()
				out.Totalcashvalue_s = nil
			} else {
				if out.Totalcashvalue_s == nil {
					out.Totalcashvalue_s = new(Summary)
				}
				(*out.Totalcashvalue_s).UnmarshalEasyJSON(in)
			}
		case "totaldebitcardpendingcharges":
			if in.IsNull() {
				in.Skip()
				out.Totaldebitcardpendingcharges = nil
			} else {
				if out.Totaldebitcardpendingcharges == nil {
					out.Totaldebitcardpendingcharges = new(Summary)
				}
				(*out.Totaldebitcardpendingcharges).UnmarshalEasyJSON(in)
			}
		case "totaldebitcardpendingcharges-c":
			if in.IsNull() {
				in.Skip()
				out.Totaldebitcardpendingcharges_c = nil
			} else {
				if out.Totaldebitcardpendingcharges_c == nil {
					out.Totaldebitcardpendingcharges_c = new(Summary)
				}
				(*out.Totaldebitcardpendingcharges_c).UnmarshalEasyJSON(in)
			}
		case "totaldebitcardpendingcharges-f":
			if in.IsNull() {
				in.Skip()
				out.Totaldebitcardpendingcharges_f = nil
			} else {
				if out.Totaldebitcardpendingcharges_f == nil {
					out.Totaldebitcardpendingcharges_f = new(Summary)
				}
				(*out.Totaldebitcardpendingcharges_f).UnmarshalEasyJSON(in)
			}
		case "totaldebitcardpendingcharges-s":
			if in.IsNull() {
				in.Skip()
				out.Totaldebitcardpendingcharges_s = nil
			} else {
				if out.Totaldebitcardpendingcharges_s == nil {
					out.Totaldebitcardpendingcharges_s = new(Summary)
				}
				(*out.Totaldebitcardpendingcharges_s).UnmarshalEasyJSON(in)
			}
		case "tradingtype-f":
			if in.IsNull() {
				in.Skip()
				out.Tradingtype_f = nil
			} else {
				if out.Tradingtype_f == nil {
					out.Tradingtype_f = new(Summary)
				}
				(*out.Tradingtype_f).UnmarshalEasyJSON(in)
			}
		case "tradingtype-s":
			if in.IsNull() {
				in.Skip()
				out.Tradingtype_s = nil
			} else {
				if out.Tradingtype_s == nil {
					out.Tradingtype_s = new(Summary)
				}
				(*out.Tradingtype_s).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(out *jwriter.Writer, in Portfolio_AccountId_Summary_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountready\":"
		out.RawString(prefix[1:])
		if in.Accountready == nil {
			out.RawString("null")
		} else {
			(*in.Accountready).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accounttype\":"
		out.RawString(prefix)
		if in.Accounttype == nil {
			out.RawString("null")
		} else {
			(*in.Accounttype).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accruedcash\":"
		out.RawString(prefix)
		if in.Accruedcash == nil {
			out.RawString("null")
		} else {
			(*in.Accruedcash).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accruedcash-c\":"
		out.RawString(prefix)
		if in.Accruedcash_c == nil {
			out.RawString("null")
		} else {
			(*in.Accruedcash_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accruedcash-f\":"
		out.RawString(prefix)
		if in.Accruedcash_f == nil {
			out.RawString("null")
		} else {
			(*in.Accruedcash_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accruedcash-s\":"
		out.RawString(prefix)
		if in.Accruedcash_s == nil {
			out.RawString("null")
		} else {
			(*in.Accruedcash_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accrueddividend\":"
		out.RawString(prefix)
		if in.Accrueddividend == nil {
			out.RawString("null")
		} else {
			(*in.Accrueddividend).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accrueddividend-c\":"
		out.RawString(prefix)
		if in.Accrueddividend_c == nil {
			out.RawString("null")
		} else {
			(*in.Accrueddividend_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accrueddividend-f\":"
		out.RawString(prefix)
		if in.Accrueddividend_f == nil {
			out.RawString("null")
		} else {
			(*in.Accrueddividend_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"accrueddividend-s\":"
		out.RawString(prefix)
		if in.Accrueddividend_s == nil {
			out.RawString("null")
		} else {
			(*in.Accrueddividend_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"availablefunds\":"
		out.RawString(prefix)
		if in.Availablefunds == nil {
			out.RawString("null")
		} else {
			(*in.Availablefunds).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"availablefunds-c\":"
		out.RawString(prefix)
		if in.Availablefunds_c == nil {
			out.RawString("null")
		} else {
			(*in.Availablefunds_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"availablefunds-f\":"
		out.RawString(prefix)
		if in.Availablefunds_f == nil {
			out.RawString("null")
		} else {
			(*in.Availablefunds_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"availablefunds-s\":"
		out.RawString(prefix)
		if in.Availablefunds_s == nil {
			out.RawString("null")
		} else {
			(*in.Availablefunds_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"billable\":"
		out.RawString(prefix)
		if in.Billable == nil {
			out.RawString("null")
		} else {
			(*in.Billable).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"billable-c\":"
		out.RawString(prefix)
		if in.Billable_c == nil {
			out.RawString("null")
		} else {
			(*in.Billable_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"billable-f\":"
		out.RawString(prefix)
		if in.Billable_f == nil {
			out.RawString("null")
		} else {
			(*in.Billable_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"billable-s\":"
		out.RawString(prefix)
		if in.Billable_s == nil {
			out.RawString("null")
		} else {
			(*in.Billable_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"buyingpower\":"
		out.RawString(prefix)
		if in.Buyingpower == nil {
			out.RawString("null")
		} else {
			(*in.Buyingpower).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"cushion\":"
		out.RawString(prefix)
		if in.Cushion == nil {
			out.RawString("null")
		} else {
			(*in.Cushion).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"daytradesremaining\":"
		out.RawString(prefix)
		if in.Daytradesremaining == nil {
			out.RawString("null")
		} else {
			(*in.Daytradesremaining).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"daytradesremainingt+1\":"
		out.RawString(prefix)
		if in.Daytradesremainingt_plus_1 == nil {
			out.RawString("null")
		} else {
			(*in.Daytradesremainingt_plus_1).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"daytradesremainingt+2\":"
		out.RawString(prefix)
		if in.Daytradesremainingt_plus_2 == nil {
			out.RawString("null")
		} else {
			(*in.Daytradesremainingt_plus_2).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"daytradesremainingt+3\":"
		out.RawString(prefix)
		if in.Daytradesremainingt_plus_3 == nil {
			out.RawString("null")
		} else {
			(*in.Daytradesremainingt_plus_3).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"daytradesremainingt+4\":"
		out.RawString(prefix)
		if in.Daytradesremainingt_plus_4 == nil {
			out.RawString("null")
		} else {
			(*in.Daytradesremainingt_plus_4).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equitywithloanvalue\":"
		out.RawString(prefix)
		if in.Equitywithloanvalue == nil {
			out.RawString("null")
		} else {
			(*in.Equitywithloanvalue).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equitywithloanvalue-c\":"
		out.RawString(prefix)
		if in.Equitywithloanvalue_c == nil {
			out.RawString("null")
		} else {
			(*in.Equitywithloanvalue_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equitywithloanvalue-f\":"
		out.RawString(prefix)
		if in.Equitywithloanvalue_f == nil {
			out.RawString("null")
		} else {
			(*in.Equitywithloanvalue_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equitywithloanvalue-s\":"
		out.RawString(prefix)
		if in.Equitywithloanvalue_s == nil {
			out.RawString("null")
		} else {
			(*in.Equitywithloanvalue_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"excessliquidity\":"
		out.RawString(prefix)
		if in.Excessliquidity == nil {
			out.RawString("null")
		} else {
			(*in.Excessliquidity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"excessliquidity-c\":"
		out.RawString(prefix)
		if in.Excessliquidity_c == nil {
			out.RawString("null")
		} else {
			(*in.Excessliquidity_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"excessliquidity-f\":"
		out.RawString(prefix)
		if in.Excessliquidity_f == nil {
			out.RawString("null")
		} else {
			(*in.Excessliquidity_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"excessliquidity-s\":"
		out.RawString(prefix)
		if in.Excessliquidity_s == nil {
			out.RawString("null")
		} else {
			(*in.Excessliquidity_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullavailablefunds\":"
		out.RawString(prefix)
		if in.Fullavailablefunds == nil {
			out.RawString("null")
		} else {
			(*in.Fullavailablefunds).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullavailablefunds-c\":"
		out.RawString(prefix)
		if in.Fullavailablefunds_c == nil {
			out.RawString("null")
		} else {
			(*in.Fullavailablefunds_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullavailablefunds-f\":"
		out.RawString(prefix)
		if in.Fullavailablefunds_f == nil {
			out.RawString("null")
		} else {
			(*in.Fullavailablefunds_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullavailablefunds-s\":"
		out.RawString(prefix)
		if in.Fullavailablefunds_s == nil {
			out.RawString("null")
		} else {
			(*in.Fullavailablefunds_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullexcessliquidity\":"
		out.RawString(prefix)
		if in.Fullexcessliquidity == nil {
			out.RawString("null")
		} else {
			(*in.Fullexcessliquidity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullexcessliquidity-c\":"
		out.RawString(prefix)
		if in.Fullexcessliquidity_c == nil {
			out.RawString("null")
		} else {
			(*in.Fullexcessliquidity_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullexcessliquidity-f\":"
		out.RawString(prefix)
		if in.Fullexcessliquidity_f == nil {
			out.RawString("null")
		} else {
			(*in.Fullexcessliquidity_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullexcessliquidity-s\":"
		out.RawString(prefix)
		if in.Fullexcessliquidity_s == nil {
			out.RawString("null")
		} else {
			(*in.Fullexcessliquidity_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullinitmarginreq\":"
		out.RawString(prefix)
		if in.Fullinitmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Fullinitmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullinitmarginreq-c\":"
		out.RawString(prefix)
		if in.Fullinitmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Fullinitmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullinitmarginreq-f\":"
		out.RawString(prefix)
		if in.Fullinitmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Fullinitmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullinitmarginreq-s\":"
		out.RawString(prefix)
		if in.Fullinitmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Fullinitmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullmaintmarginreq\":"
		out.RawString(prefix)
		if in.Fullmaintmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Fullmaintmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullmaintmarginreq-c\":"
		out.RawString(prefix)
		if in.Fullmaintmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Fullmaintmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullmaintmarginreq-f\":"
		out.RawString(prefix)
		if in.Fullmaintmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Fullmaintmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"fullmaintmarginreq-s\":"
		out.RawString(prefix)
		if in.Fullmaintmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Fullmaintmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"grosspositionvalue\":"
		out.RawString(prefix)
		if in.Grosspositionvalue == nil {
			out.RawString("null")
		} else {
			(*in.Grosspositionvalue).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"grosspositionvalue-c\":"
		out.RawString(prefix)
		if in.Grosspositionvalue_c == nil {
			out.RawString("null")
		} else {
			(*in.Grosspositionvalue_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"grosspositionvalue-f\":"
		out.RawString(prefix)
		if in.Grosspositionvalue_f == nil {
			out.RawString("null")
		} else {
			(*in.Grosspositionvalue_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"grosspositionvalue-s\":"
		out.RawString(prefix)
		if in.Grosspositionvalue_s == nil {
			out.RawString("null")
		} else {
			(*in.Grosspositionvalue_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"guarantee\":"
		out.RawString(prefix)
		if in.Guarantee == nil {
			out.RawString("null")
		} else {
			(*in.Guarantee).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"guarantee-c\":"
		out.RawString(prefix)
		if in.Guarantee_c == nil {
			out.RawString("null")
		} else {
			(*in.Guarantee_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"guarantee-f\":"
		out.RawString(prefix)
		if in.Guarantee_f == nil {
			out.RawString("null")
		} else {
			(*in.Guarantee_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"guarantee-s\":"
		out.RawString(prefix)
		if in.Guarantee_s == nil {
			out.RawString("null")
		} else {
			(*in.Guarantee_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"highestseverity\":"
		out.RawString(prefix)
		if in.Highestseverity == nil {
			out.RawString("null")
		} else {
			(*in.Highestseverity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"highestseverity-c\":"
		out.RawString(prefix)
		if in.Highestseverity_c == nil {
			out.RawString("null")
		} else {
			(*in.Highestseverity_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"highestseverity-f\":"
		out.RawString(prefix)
		if in.Highestseverity_f == nil {
			out.RawString("null")
		} else {
			(*in.Highestseverity_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"highestseverity-s\":"
		out.RawString(prefix)
		if in.Highestseverity_s == nil {
			out.RawString("null")
		} else {
			(*in.Highestseverity_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"indianstockhaircut\":"
		out.RawString(prefix)
		if in.Indianstockhaircut == nil {
			out.RawString("null")
		} else {
			(*in.Indianstockhaircut).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"indianstockhaircut-c\":"
		out.RawString(prefix)
		if in.Indianstockhaircut_c == nil {
			out.RawString("null")
		} else {
			(*in.Indianstockhaircut_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"indianstockhaircut-f\":"
		out.RawString(prefix)
		if in.Indianstockhaircut_f == nil {
			out.RawString("null")
		} else {
			(*in.Indianstockhaircut_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"indianstockhaircut-s\":"
		out.RawString(prefix)
		if in.Indianstockhaircut_s == nil {
			out.RawString("null")
		} else {
			(*in.Indianstockhaircut_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"initmarginreq\":"
		out.RawString(prefix)
		if in.Initmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Initmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"initmarginreq-c\":"
		out.RawString(prefix)
		if in.Initmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Initmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"initmarginreq-f\":"
		out.RawString(prefix)
		if in.Initmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Initmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"initmarginreq-s\":"
		out.RawString(prefix)
		if in.Initmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Initmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		if in.Leverage == nil {
			out.RawString("null")
		} else {
			(*in.Leverage).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"leverage-c\":"
		out.RawString(prefix)
		if in.Leverage_c == nil {
			out.RawString("null")
		} else {
			(*in.Leverage_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"leverage-f\":"
		out.RawString(prefix)
		if in.Leverage_f == nil {
			out.RawString("null")
		} else {
			(*in.Leverage_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"leverage-s\":"
		out.RawString(prefix)
		if in.Leverage_s == nil {
			out.RawString("null")
		} else {
			(*in.Leverage_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadavailablefunds\":"
		out.RawString(prefix)
		if in.Lookaheadavailablefunds == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadavailablefunds).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadavailablefunds-c\":"
		out.RawString(prefix)
		if in.Lookaheadavailablefunds_c == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadavailablefunds_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadavailablefunds-f\":"
		out.RawString(prefix)
		if in.Lookaheadavailablefunds_f == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadavailablefunds_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadavailablefunds-s\":"
		out.RawString(prefix)
		if in.Lookaheadavailablefunds_s == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadavailablefunds_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadexcessliquidity\":"
		out.RawString(prefix)
		if in.Lookaheadexcessliquidity == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadexcessliquidity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadexcessliquidity-c\":"
		out.RawString(prefix)
		if in.Lookaheadexcessliquidity_c == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadexcessliquidity_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadexcessliquidity-f\":"
		out.RawString(prefix)
		if in.Lookaheadexcessliquidity_f == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadexcessliquidity_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadexcessliquidity-s\":"
		out.RawString(prefix)
		if in.Lookaheadexcessliquidity_s == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadexcessliquidity_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadinitmarginreq\":"
		out.RawString(prefix)
		if in.Lookaheadinitmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadinitmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadinitmarginreq-c\":"
		out.RawString(prefix)
		if in.Lookaheadinitmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadinitmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadinitmarginreq-f\":"
		out.RawString(prefix)
		if in.Lookaheadinitmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadinitmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadinitmarginreq-s\":"
		out.RawString(prefix)
		if in.Lookaheadinitmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadinitmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadmaintmarginreq\":"
		out.RawString(prefix)
		if in.Lookaheadmaintmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadmaintmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadmaintmarginreq-c\":"
		out.RawString(prefix)
		if in.Lookaheadmaintmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadmaintmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadmaintmarginreq-f\":"
		out.RawString(prefix)
		if in.Lookaheadmaintmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadmaintmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadmaintmarginreq-s\":"
		out.RawString(prefix)
		if in.Lookaheadmaintmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadmaintmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"lookaheadnextchange\":"
		out.RawString(prefix)
		if in.Lookaheadnextchange == nil {
			out.RawString("null")
		} else {
			(*in.Lookaheadnextchange).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintmarginreq\":"
		out.RawString(prefix)
		if in.Maintmarginreq == nil {
			out.RawString("null")
		} else {
			(*in.Maintmarginreq).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintmarginreq-c\":"
		out.RawString(prefix)
		if in.Maintmarginreq_c == nil {
			out.RawString("null")
		} else {
			(*in.Maintmarginreq_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintmarginreq-f\":"
		out.RawString(prefix)
		if in.Maintmarginreq_f == nil {
			out.RawString("null")
		} else {
			(*in.Maintmarginreq_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintmarginreq-s\":"
		out.RawString(prefix)
		if in.Maintmarginreq_s == nil {
			out.RawString("null")
		} else {
			(*in.Maintmarginreq_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"netliquidation\":"
		out.RawString(prefix)
		if in.Netliquidation == nil {
			out.RawString("null")
		} else {
			(*in.Netliquidation).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"netliquidation-c\":"
		out.RawString(prefix)
		if in.Netliquidation_c == nil {
			out.RawString("null")
		} else {
			(*in.Netliquidation_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"netliquidation-f\":"
		out.RawString(prefix)
		if in.Netliquidation_f == nil {
			out.RawString("null")
		} else {
			(*in.Netliquidation_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"netliquidation-s\":"
		out.RawString(prefix)
		if in.Netliquidation_s == nil {
			out.RawString("null")
		} else {
			(*in.Netliquidation_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"netliquidationuncertainty\":"
		out.RawString(prefix)
		if in.Netliquidationuncertainty == nil {
			out.RawString("null")
		} else {
			(*in.Netliquidationuncertainty).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"nlvandmargininreview\":"
		out.RawString(prefix)
		if in.Nlvandmargininreview == nil {
			out.RawString("null")
		} else {
			(*in.Nlvandmargininreview).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pasharesvalue\":"
		out.RawString(prefix)
		if in.Pasharesvalue == nil {
			out.RawString("null")
		} else {
			(*in.Pasharesvalue).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pasharesvalue-c\":"
		out.RawString(prefix)
		if in.Pasharesvalue_c == nil {
			out.RawString("null")
		} else {
			(*in.Pasharesvalue_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pasharesvalue-f\":"
		out.RawString(prefix)
		if in.Pasharesvalue_f == nil {
			out.RawString("null")
		} else {
			(*in.Pasharesvalue_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pasharesvalue-s\":"
		out.RawString(prefix)
		if in.Pasharesvalue_s == nil {
			out.RawString("null")
		} else {
			(*in.Pasharesvalue_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationexcess\":"
		out.RawString(prefix)
		if in.Postexpirationexcess == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationexcess).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationexcess-c\":"
		out.RawString(prefix)
		if in.Postexpirationexcess_c == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationexcess_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationexcess-f\":"
		out.RawString(prefix)
		if in.Postexpirationexcess_f == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationexcess_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationexcess-s\":"
		out.RawString(prefix)
		if in.Postexpirationexcess_s == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationexcess_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationmargin\":"
		out.RawString(prefix)
		if in.Postexpirationmargin == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationmargin).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationmargin-c\":"
		out.RawString(prefix)
		if in.Postexpirationmargin_c == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationmargin_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationmargin-f\":"
		out.RawString(prefix)
		if in.Postexpirationmargin_f == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationmargin_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"postexpirationmargin-s\":"
		out.RawString(prefix)
		if in.Postexpirationmargin_s == nil {
			out.RawString("null")
		} else {
			(*in.Postexpirationmargin_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"previousdayequitywithloanvalue\":"
		out.RawString(prefix)
		if in.Previousdayequitywithloanvalue == nil {
			out.RawString("null")
		} else {
			(*in.Previousdayequitywithloanvalue).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"previousdayequitywithloanvalue-c\":"
		out.RawString(prefix)
		if in.Previousdayequitywithloanvalue_c == nil {
			out.RawString("null")
		} else {
			(*in.Previousdayequitywithloanvalue_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"previousdayequitywithloanvalue-f\":"
		out.RawString(prefix)
		if in.Previousdayequitywithloanvalue_f == nil {
			out.RawString("null")
		} else {
			(*in.Previousdayequitywithloanvalue_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"previousdayequitywithloanvalue-s\":"
		out.RawString(prefix)
		if in.Previousdayequitywithloanvalue_s == nil {
			out.RawString("null")
		} else {
			(*in.Previousdayequitywithloanvalue_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"segmenttitle-c\":"
		out.RawString(prefix)
		if in.Segmenttitle_c == nil {
			out.RawString("null")
		} else {
			(*in.Segmenttitle_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"segmenttitle-f\":"
		out.RawString(prefix)
		if in.Segmenttitle_f == nil {
			out.RawString("null")
		} else {
			(*in.Segmenttitle_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"segmenttitle-s\":"
		out.RawString(prefix)
		if in.Segmenttitle_s == nil {
			out.RawString("null")
		} else {
			(*in.Segmenttitle_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totalcashvalue\":"
		out.RawString(prefix)
		if in.Totalcashvalue == nil {
			out.RawString("null")
		} else {
			(*in.Totalcashvalue).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totalcashvalue-c\":"
		out.RawString(prefix)
		if in.Totalcashvalue_c == nil {
			out.RawString("null")
		} else {
			(*in.Totalcashvalue_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totalcashvalue-f\":"
		out.RawString(prefix)
		if in.Totalcashvalue_f == nil {
			out.RawString("null")
		} else {
			(*in.Totalcashvalue_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totalcashvalue-s\":"
		out.RawString(prefix)
		if in.Totalcashvalue_s == nil {
			out.RawString("null")
		} else {
			(*in.Totalcashvalue_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totaldebitcardpendingcharges\":"
		out.RawString(prefix)
		if in.Totaldebitcardpendingcharges == nil {
			out.RawString("null")
		} else {
			(*in.Totaldebitcardpendingcharges).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totaldebitcardpendingcharges-c\":"
		out.RawString(prefix)
		if in.Totaldebitcardpendingcharges_c == nil {
			out.RawString("null")
		} else {
			(*in.Totaldebitcardpendingcharges_c).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totaldebitcardpendingcharges-f\":"
		out.RawString(prefix)
		if in.Totaldebitcardpendingcharges_f == nil {
			out.RawString("null")
		} else {
			(*in.Totaldebitcardpendingcharges_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"totaldebitcardpendingcharges-s\":"
		out.RawString(prefix)
		if in.Totaldebitcardpendingcharges_s == nil {
			out.RawString("null")
		} else {
			(*in.Totaldebitcardpendingcharges_s).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tradingtype-f\":"
		out.RawString(prefix)
		if in.Tradingtype_f == nil {
			out.RawString("null")
		} else {
			(*in.Tradingtype_f).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tradingtype-s\":"
		out.RawString(prefix)
		if in.Tradingtype_s == nil {
			out.RawString("null")
		} else {
			(*in.Tradingtype_s).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_AccountId_Summary_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_AccountId_Summary_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_AccountId_Summary_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_AccountId_Summary_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdSummaryGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(in *jlexer.Lexer, out *Portfolio_AccountId_Ledger_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Portfolio_AccountId_Ledger_GET_200)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v71 *Ledger
			if in.IsNull() {
				in.Skip()
				v71 = nil
			} else {
				if v71 == nil {
					v71 = new(Ledger)
				}
				(*v71).UnmarshalEasyJSON(in)
			}
			(*out)[key] = v71
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(out *jwriter.Writer, in Portfolio_AccountId_Ledger_GET_200) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v72First := true
		for v72Name, v72Value := range in {
			if v72First {
				v72First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v72Name))
			out.RawByte(':')
			if v72Value == nil {
				out.RawString("null")
			} else {
				(*v72Value).MarshalEasyJSON(out)
			}
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Portfolio_AccountId_Ledger_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Portfolio_AccountId_Ledger_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Portfolio_AccountId_Ledger_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Portfolio_AccountId_Ledger_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPortfolioAccountIdLedgerGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(in *jlexer.Lexer, out *Performance_Tpps_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Dates_List, 0, 4)
			} else {
				*out = Performance_Tpps_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v73 string
			v73 = string(in.String())
			*out = append(*out, v73)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(out *jwriter.Writer, in Performance_Tpps_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v74, v75 := range in {
			if v74 > 0 {
				out.RawByte(',')
			}
			out.String(string(v75))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(in *jlexer.Lexer, out *Performance_Tpps_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Tpps_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v76 float64
			v76 = float64(in.Float64())
			*out = append(*out, v76)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(out *jwriter.Writer, in Performance_Tpps_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v77, v78 := range in {
			if v77 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v78))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(in *jlexer.Lexer, out *Performance_Tpps_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			(out.Returns).UnmarshalEasyJSON(in)
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(out *jwriter.Writer, in Performance_Tpps_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		(in.Returns).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(in *jlexer.Lexer, out *Performance_Tpps_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Tpps_Data_List, 0, 8)
			} else {
				*out = Performance_Tpps_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v79 *Performance_Tpps_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v79 = nil
			} else {
				if v79 == nil {
					v79 = new(Performance_Tpps_Data_List_Item)
				}
				(*v79).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v79)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(out *jwriter.Writer, in Performance_Tpps_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v80, v81 := range in {
			if v80 > 0 {
				out.RawByte(',')
			}
			if v81 == nil {
				out.RawString("null")
			} else {
				(*v81).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceTppsData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(in *jlexer.Lexer, out *Performance_Tpps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		case "dates":
			(out.Dates).UnmarshalEasyJSON(in)
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(out *jwriter.Writer, in Performance_Tpps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		(in.Dates).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Tpps) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Tpps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Tpps) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Tpps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(in *jlexer.Lexer, out *Performance_Nav_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Dates_List, 0, 4)
			} else {
				*out = Performance_Nav_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v82 string
			v82 = string(in.String())
			*out = append(*out, v82)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(out *jwriter.Writer, in Performance_Nav_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v83, v84 := range in {
			if v83 > 0 {
				out.RawByte(',')
			}
			out.String(string(v84))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(in *jlexer.Lexer, out *Performance_Nav_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Nav_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v85 float64
			v85 = float64(in.Float64())
			*out = append(*out, v85)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(out *jwriter.Writer, in Performance_Nav_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v86, v87 := range in {
			if v86 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v87))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(in *jlexer.Lexer, out *Performance_Nav_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			(out.Returns).UnmarshalEasyJSON(in)
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(out *jwriter.Writer, in Performance_Nav_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		(in.Returns).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(in *jlexer.Lexer, out *Performance_Nav_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Nav_Data_List, 0, 8)
			} else {
				*out = Performance_Nav_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v88 *Performance_Nav_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v88 = nil
			} else {
				if v88 == nil {
					v88 = new(Performance_Nav_Data_List_Item)
				}
				(*v88).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v88)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(out *jwriter.Writer, in Performance_Nav_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v89, v90 := range in {
			if v89 > 0 {
				out.RawByte(',')
			}
			if v90 == nil {
				out.RawString("null")
			} else {
				(*v90).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceNavData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(in *jlexer.Lexer, out *Performance_Nav) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		case "dates":
			(out.Dates).UnmarshalEasyJSON(in)
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(out *jwriter.Writer, in Performance_Nav) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		(in.Dates).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Nav) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Nav) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Nav) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Nav) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(in *jlexer.Lexer, out *Performance_Included_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Included_List, 0, 4)
			} else {
				*out = Performance_Included_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v91 string
			v91 = string(in.String())
			*out = append(*out, v91)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(out *jwriter.Writer, in Performance_Included_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v92, v93 := range in {
			if v92 > 0 {
				out.RawByte(',')
			}
			out.String(string(v93))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Included_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Included_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Included_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Included_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceIncluded(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(in *jlexer.Lexer, out *Performance_Cps_Dates_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Dates_List, 0, 4)
			} else {
				*out = Performance_Cps_Dates_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v94 string
			v94 = string(in.String())
			*out = append(*out, v94)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(out *jwriter.Writer, in Performance_Cps_Dates_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v95, v96 := range in {
			if v95 > 0 {
				out.RawByte(',')
			}
			out.String(string(v96))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Dates_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Dates_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Dates_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Dates_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDates(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(in *jlexer.Lexer, out *Performance_Cps_Data_List_Item_Returns_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Data_List_Item_Returns_List, 0, 8)
			} else {
				*out = Performance_Cps_Data_List_Item_Returns_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v97 float64
			v97 = float64(in.Float64())
			*out = append(*out, v97)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(out *jwriter.Writer, in Performance_Cps_Data_List_Item_Returns_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v98, v99 := range in {
			if v98 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v99))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List_Item_Returns_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List_Item_Returns_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item_Returns_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item_Returns_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataListItemReturns(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(in *jlexer.Lexer, out *Performance_Cps_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCurrency":
			out.BaseCurrency = string(in.String())
		case "end":
			out.End = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "idType":
			out.IdType = string(in.String())
		case "returns":
			(out.Returns).UnmarshalEasyJSON(in)
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(out *jwriter.Writer, in Performance_Cps_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCurrency\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix)
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"idType\":"
		out.RawString(prefix)
		out.String(string(in.IdType))
	}
	{
		const prefix string = ",\"returns\":"
		out.RawString(prefix)
		(in.Returns).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(in *jlexer.Lexer, out *Performance_Cps_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Performance_Cps_Data_List, 0, 8)
			} else {
				*out = Performance_Cps_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v100 *Performance_Cps_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v100 = nil
			} else {
				if v100 == nil {
					v100 = new(Performance_Cps_Data_List_Item)
				}
				(*v100).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v100)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(out *jwriter.Writer, in Performance_Cps_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v101, v102 := range in {
			if v101 > 0 {
				out.RawByte(',')
			}
			if v102 == nil {
				out.RawString("null")
			} else {
				(*v102).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformanceCpsData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(in *jlexer.Lexer, out *Performance_Cps) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		case "dates":
			(out.Dates).UnmarshalEasyJSON(in)
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(out *jwriter.Writer, in Performance_Cps) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"dates\":"
		out.RawString(prefix)
		(in.Dates).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance_Cps) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance_Cps) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance_Cps) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance_Cps) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPerformance2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(in *jlexer.Lexer, out *Performance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cps":
			if in.IsNull() {
				in.Skip()
				out.Cps = nil
			} else {
				if out.Cps == nil {
					out.Cps = new(Performance_Cps)
				}
				(*out.Cps).UnmarshalEasyJSON(in)
			}
		case "currencyType":
			out.CurrencyType = string(in.String())
		case "id":
			out.Id = string(in.String())
		case "included":
			(out.Included).UnmarshalEasyJSON(in)
		case "nav":
			if in.IsNull() {
				in.Skip()
				out.Nav = nil
			} else {
				if out.Nav == nil {
					out.Nav = new(Performance_Nav)
				}
				(*out.Nav).UnmarshalEasyJSON(in)
			}
		case "pm":
			out.Pm = string(in.String())
		case "rc":
			out.Rc = int64(in.Int64())
		case "tpps":
			if in.IsNull() {
				in.Skip()
				out.Tpps = nil
			} else {
				if out.Tpps == nil {
					out.Tpps = new(Performance_Tpps)
				}
				(*out.Tpps).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(out *jwriter.Writer, in Performance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cps\":"
		out.RawString(prefix[1:])
		if in.Cps == nil {
			out.RawString("null")
		} else {
			(*in.Cps).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"currencyType\":"
		out.RawString(prefix)
		out.String(string(in.CurrencyType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"included\":"
		out.RawString(prefix)
		(in.Included).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"nav\":"
		out.RawString(prefix)
		if in.Nav == nil {
			out.RawString("null")
		} else {
			(*in.Nav).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"pm\":"
		out.RawString(prefix)
		out.String(string(in.Pm))
	}
	{
		const prefix string = ",\"rc\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rc))
	}
	{
		const prefix string = ",\"tpps\":"
		out.RawString(prefix)
		if in.Tpps == nil {
			out.RawString("null")
		} else {
			(*in.Tpps).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Performance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Performance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Performance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Performance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel9(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(in *jlexer.Lexer, out *Pa_Transactions_POST_Request_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Transactions_POST_Request_Conids_List, 0, 8)
			} else {
				*out = Pa_Transactions_POST_Request_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v103 float64
			v103 = float64(in.Float64())
			*out = append(*out, v103)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(out *jwriter.Writer, in Pa_Transactions_POST_Request_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v104, v105 := range in {
			if v104 > 0 {
				out.RawByte(',')
			}
			out.Float64(float64(v105))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Transactions_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Transactions_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Transactions_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v106 string
			v106 = string(in.String())
			*out = append(*out, v106)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(out *jwriter.Writer, in Pa_Transactions_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v107, v108 := range in {
			if v107 > 0 {
				out.RawByte(',')
			}
			out.String(string(v108))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(in *jlexer.Lexer, out *Pa_Transactions_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			(out.AcctIds).UnmarshalEasyJSON(in)
		case "conids":
			(out.Conids).UnmarshalEasyJSON(in)
		case "currency":
			out.Currency = string(in.String())
		case "days":
			out.Days = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(out *jwriter.Writer, in Pa_Transactions_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		(in.AcctIds).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix)
		(in.Conids).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"days\":"
		out.RawString(prefix)
		out.Float64(float64(in.Days))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Transactions_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Transactions_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Transactions_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Transactions_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaTransactionsPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Summary_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Summary_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Summary_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v109 string
			v109 = string(in.String())
			*out = append(*out, v109)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(out *jwriter.Writer, in Pa_Summary_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v110, v111 := range in {
			if v110 > 0 {
				out.RawByte(',')
			}
			out.String(string(v111))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Summary_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Summary_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Summary_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Summary_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(in *jlexer.Lexer, out *Pa_Summary_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			(out.AcctIds).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(out *jwriter.Writer, in Pa_Summary_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		(in.AcctIds).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Summary_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Summary_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Summary_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Summary_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaSummaryPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(in *jlexer.Lexer, out *Pa_Performance_POST_Request_AcctIds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Pa_Performance_POST_Request_AcctIds_List, 0, 4)
			} else {
				*out = Pa_Performance_POST_Request_AcctIds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v112 string
			v112 = string(in.String())
			*out = append(*out, v112)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(out *jwriter.Writer, in Pa_Performance_POST_Request_AcctIds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v113, v114 := range in {
			if v113 > 0 {
				out.RawByte(',')
			}
			out.String(string(v114))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Performance_POST_Request_AcctIds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Performance_POST_Request_AcctIds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Performance_POST_Request_AcctIds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Performance_POST_Request_AcctIds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOSTRequestAcctIds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(in *jlexer.Lexer, out *Pa_Performance_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctIds":
			(out.AcctIds).UnmarshalEasyJSON(in)
		case "freq":
			out.Freq = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(out *jwriter.Writer, in Pa_Performance_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctIds\":"
		out.RawString(prefix[1:])
		(in.AcctIds).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"freq\":"
		out.RawString(prefix)
		out.String(string(in.Freq))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pa_Performance_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pa_Performance_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pa_Performance_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pa_Performance_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelPaPerformancePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(in *jlexer.Lexer, out *OrderRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "allocationMethod":
			out.AllocationMethod = string(in.String())
		case "cOID":
			out.COID = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "fxQty":
			out.FxQty = float64(in.Float64())
		case "isCurrencyConversion":
			out.IsCurrencyConversion = bool(in.Bool())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "outsideRTH":
			out.OutsideRTH = bool(in.Bool())
		case "parentId":
			out.ParentId = string(in.String())
		case "price":
			out.Price = float64(in.Float64())
		case "quantity":
			out.Quantity = float64(in.Float64())
		case "referrer":
			out.Referrer = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		case "tif":
			out.Tif = string(in.String())
		case "useAdaptive":
			out.UseAdaptive = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(out *jwriter.Writer, in OrderRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"allocationMethod\":"
		out.RawString(prefix)
		out.String(string(in.AllocationMethod))
	}
	{
		const prefix string = ",\"cOID\":"
		out.RawString(prefix)
		out.String(string(in.COID))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"fxQty\":"
		out.RawString(prefix)
		out.Float64(float64(in.FxQty))
	}
	{
		const prefix string = ",\"isCurrencyConversion\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsCurrencyConversion))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"outsideRTH\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRTH))
	}
	{
		const prefix string = ",\"parentId\":"
		out.RawString(prefix)
		out.String(string(in.ParentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"quantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.Quantity))
	}
	{
		const prefix string = ",\"referrer\":"
		out.RawString(prefix)
		out.String(string(in.Referrer))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"useAdaptive\":"
		out.RawString(prefix)
		out.Bool(bool(in.UseAdaptive))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel10(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(in *jlexer.Lexer, out *Order) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acct":
			out.Acct = string(in.String())
		case "bgColor":
			out.BgColor = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "description1":
			out.Description1 = string(in.String())
		case "fgColor":
			out.FgColor = string(in.String())
		case "filledQuantity":
			out.FilledQuantity = string(in.String())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderDesc":
			out.OrderDesc = string(in.String())
		case "orderId":
			out.OrderId = int64(in.Int64())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "origOrderType":
			out.OrigOrderType = string(in.String())
		case "parentId":
			out.ParentId = int64(in.Int64())
		case "price":
			out.Price = float64(in.Float64())
		case "remainingQuantity":
			out.RemainingQuantity = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(out *jwriter.Writer, in Order) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acct\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acct))
	}
	{
		const prefix string = ",\"bgColor\":"
		out.RawString(prefix)
		out.String(string(in.BgColor))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"description1\":"
		out.RawString(prefix)
		out.String(string(in.Description1))
	}
	{
		const prefix string = ",\"fgColor\":"
		out.RawString(prefix)
		out.String(string(in.FgColor))
	}
	{
		const prefix string = ",\"filledQuantity\":"
		out.RawString(prefix)
		out.String(string(in.FilledQuantity))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderDesc\":"
		out.RawString(prefix)
		out.String(string(in.OrderDesc))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"origOrderType\":"
		out.RawString(prefix)
		out.String(string(in.OrigOrderType))
	}
	{
		const prefix string = ",\"parentId\":"
		out.RawString(prefix)
		out.Int64(int64(in.ParentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"remainingQuantity\":"
		out.RawString(prefix)
		out.String(string(in.RemainingQuantity))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Order) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Order) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Order) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Order) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel11(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(in *jlexer.Lexer, out *Notifications_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "D":
			out.D = string(in.String())
		case "FC":
			out.FC = string(in.String())
		case "ID":
			out.ID = string(in.String())
		case "MD":
			out.MD = string(in.String())
		case "MS":
			out.MS = string(in.String())
		case "R":
			out.R = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(out *jwriter.Writer, in Notifications_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"D\":"
		out.RawString(prefix[1:])
		out.String(string(in.D))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix)
		out.String(string(in.ID))
	}
	{
		const prefix string = ",\"MD\":"
		out.RawString(prefix)
		out.String(string(in.MD))
	}
	{
		const prefix string = ",\"MS\":"
		out.RawString(prefix)
		out.String(string(in.MS))
	}
	{
		const prefix string = ",\"R\":"
		out.RawString(prefix)
		out.String(string(in.R))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Notifications_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notifications_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notifications_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notifications_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotificationsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(in *jlexer.Lexer, out *Notifications_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Notifications_List, 0, 8)
			} else {
				*out = Notifications_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v115 *Notifications_List_Item
			if in.IsNull() {
				in.Skip()
				v115 = nil
			} else {
				if v115 == nil {
					v115 = new(Notifications_List_Item)
				}
				(*v115).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v115)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(out *jwriter.Writer, in Notifications_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v116, v117 := range in {
			if v116 > 0 {
				out.RawByte(',')
			}
			if v117 == nil {
				out.RawString("null")
			} else {
				(*v117).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Notifications_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notifications_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notifications_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notifications_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelNotifications(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(in *jlexer.Lexer, out *ModifyOrder) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "auxPrice":
			out.AuxPrice = float64(in.Float64())
		case "conid":
			out.Conid = int64(in.Int64())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "outsideRTH":
			out.OutsideRTH = bool(in.Bool())
		case "price":
			out.Price = float64(in.Float64())
		case "quantity":
			out.Quantity = float64(in.Float64())
		case "side":
			out.Side = string(in.String())
		case "ticker":
			out.Ticker = string(in.String())
		case "tif":
			out.Tif = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(out *jwriter.Writer, in ModifyOrder) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"auxPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.AuxPrice))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"outsideRTH\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRTH))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"quantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.Quantity))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ModifyOrder) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ModifyOrder) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ModifyOrder) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ModifyOrder) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel12(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(in *jlexer.Lexer, out *MarketData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Ask":
			out.Ask = float64(in.Float64())
		case "AskSize":
			out.AskSize = float64(in.Float64())
		case "Bid":
			out.Bid = float64(in.Float64())
		case "BidSize":
			out.BidSize = float64(in.Float64())
		case "Conid":
			out.Conid = float64(in.Float64())
		case "Exchange":
			out.Exchange = string(in.String())
		case "Last":
			out.Last = float64(in.Float64())
		case "LastSize":
			out.LastSize = float64(in.Float64())
		case "minTick":
			out.MinTick = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(out *jwriter.Writer, in MarketData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Ask\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Ask))
	}
	{
		const prefix string = ",\"AskSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.AskSize))
	}
	{
		const prefix string = ",\"Bid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Bid))
	}
	{
		const prefix string = ",\"BidSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.BidSize))
	}
	{
		const prefix string = ",\"Conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"Exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"Last\":"
		out.RawString(prefix)
		out.Float64(float64(in.Last))
	}
	{
		const prefix string = ",\"LastSize\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastSize))
	}
	{
		const prefix string = ",\"minTick\":"
		out.RawString(prefix)
		out.Float64(float64(in.MinTick))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MarketData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MarketData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MarketData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MarketData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel13(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(in *jlexer.Lexer, out *Logout_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(out *jwriter.Writer, in Logout_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Logout_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Logout_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Logout_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Logout_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelLogoutPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(in *jlexer.Lexer, out *Ledger) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctcode":
			out.Acctcode = string(in.String())
		case "cashbalance":
			out.Cashbalance = float64(in.Float64())
		case "commoditymarketvalue":
			out.Commoditymarketvalue = float64(in.Float64())
		case "corporatebondsmarketvalue":
			out.Corporatebondsmarketvalue = float64(in.Float64())
		case "currency":
			out.Currency = string(in.String())
		case "exchangerate":
			out.Exchangerate = float64(in.Float64())
		case "funds":
			out.Funds = float64(in.Float64())
		case "futuremarketvalue":
			out.Futuremarketvalue = float64(in.Float64())
		case "interest":
			out.Interest = float64(in.Float64())
		case "issueroptionsmarketvalue":
			out.Issueroptionsmarketvalue = float64(in.Float64())
		case "key":
			out.Key = string(in.String())
		case "moneyfunds":
			out.Moneyfunds = float64(in.Float64())
		case "netliquidationvalue":
			out.Netliquidationvalue = float64(in.Float64())
		case "realizedpnl":
			out.Realizedpnl = float64(in.Float64())
		case "sessionid":
			out.Sessionid = int64(in.Int64())
		case "settledcash":
			out.Settledcash = float64(in.Float64())
		case "severity":
			out.Severity = int64(in.Int64())
		case "stockmarketvalue":
			out.Stockmarketvalue = float64(in.Float64())
		case "timestamp":
			out.Timestamp = int64(in.Int64())
		case "unrealizedpnl":
			out.Unrealizedpnl = float64(in.Float64())
		case "warrantsmarketvalue":
			out.Warrantsmarketvalue = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(out *jwriter.Writer, in Ledger) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctcode\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acctcode))
	}
	{
		const prefix string = ",\"cashbalance\":"
		out.RawString(prefix)
		out.Float64(float64(in.Cashbalance))
	}
	{
		const prefix string = ",\"commoditymarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Commoditymarketvalue))
	}
	{
		const prefix string = ",\"corporatebondsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Corporatebondsmarketvalue))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"exchangerate\":"
		out.RawString(prefix)
		out.Float64(float64(in.Exchangerate))
	}
	{
		const prefix string = ",\"funds\":"
		out.RawString(prefix)
		out.Float64(float64(in.Funds))
	}
	{
		const prefix string = ",\"futuremarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Futuremarketvalue))
	}
	{
		const prefix string = ",\"interest\":"
		out.RawString(prefix)
		out.Float64(float64(in.Interest))
	}
	{
		const prefix string = ",\"issueroptionsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Issueroptionsmarketvalue))
	}
	{
		const prefix string = ",\"key\":"
		out.RawString(prefix)
		out.String(string(in.Key))
	}
	{
		const prefix string = ",\"moneyfunds\":"
		out.RawString(prefix)
		out.Float64(float64(in.Moneyfunds))
	}
	{
		const prefix string = ",\"netliquidationvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Netliquidationvalue))
	}
	{
		const prefix string = ",\"realizedpnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.Realizedpnl))
	}
	{
		const prefix string = ",\"sessionid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Sessionid))
	}
	{
		const prefix string = ",\"settledcash\":"
		out.RawString(prefix)
		out.Float64(float64(in.Settledcash))
	}
	{
		const prefix string = ",\"severity\":"
		out.RawString(prefix)
		out.Int64(int64(in.Severity))
	}
	{
		const prefix string = ",\"stockmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stockmarketvalue))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Int64(int64(in.Timestamp))
	}
	{
		const prefix string = ",\"unrealizedpnl\":"
		out.RawString(prefix)
		out.Float64(float64(in.Unrealizedpnl))
	}
	{
		const prefix string = ",\"warrantsmarketvalue\":"
		out.RawString(prefix)
		out.Float64(float64(in.Warrantsmarketvalue))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ledger) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ledger) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ledger) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ledger) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel14(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200_Put_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Strikes_GET_200_Put_List, 0, 4)
			} else {
				*out = Iserver_Secdef_Strikes_GET_200_Put_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v118 string
			v118 = string(in.String())
			*out = append(*out, v118)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200_Put_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v119, v120 := range in {
			if v119 > 0 {
				out.RawByte(',')
			}
			out.String(string(v120))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Put_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Put_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Put_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Put_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Put(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200_Call_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Strikes_GET_200_Call_List, 0, 4)
			} else {
				*out = Iserver_Secdef_Strikes_GET_200_Call_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v121 string
			v121 = string(in.String())
			*out = append(*out, v121)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200_Call_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v122, v123 := range in {
			if v122 > 0 {
				out.RawByte(',')
			}
			out.String(string(v123))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Call_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200_Call_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Call_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200_Call_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET200Call(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(in *jlexer.Lexer, out *Iserver_Secdef_Strikes_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "call":
			(out.Call).UnmarshalEasyJSON(in)
		case "put":
			(out.Put).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(out *jwriter.Writer, in Iserver_Secdef_Strikes_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"call\":"
		out.RawString(prefix[1:])
		(in.Call).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"put\":"
		out.RawString(prefix)
		(in.Put).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Strikes_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Strikes_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefStrikesGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = bool(in.Bool())
		case "secType":
			out.SecType = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(out *jwriter.Writer, in Iserver_Secdef_Search_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Name))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(out *jwriter.Writer, in Iserver_Secdef_Search_POST_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "exchange":
			out.Exchange = string(in.String())
		case "legSecType":
			out.LegSecType = string(in.String())
		case "months":
			out.Months = string(in.String())
		case "secType":
			out.SecType = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix[1:])
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"legSecType\":"
		out.RawString(prefix)
		out.String(string(in.LegSecType))
	}
	{
		const prefix string = ",\"months\":"
		out.RawString(prefix)
		out.String(string(in.Months))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSectionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Search_POST_200_List_Item_Sections_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Search_POST_200_List_Item_Sections_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v124 *Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item
			if in.IsNull() {
				in.Skip()
				v124 = nil
			} else {
				if v124 == nil {
					v124 = new(Iserver_Secdef_Search_POST_200_List_Item_Sections_List_Item)
				}
				(*v124).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v124)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item_Sections_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v125, v126 := range in {
			if v125 > 0 {
				out.RawByte(',')
			}
			if v126 == nil {
				out.RawString("null")
			} else {
				(*v126).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item_Sections_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item_Sections_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200ListItemSections(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "companyHeader":
			out.CompanyHeader = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "description":
			out.Description = string(in.String())
		case "fop":
			out.Fop = string(in.String())
		case "opt":
			out.Opt = string(in.String())
		case "restricted":
			out.Restricted = string(in.String())
		case "sections":
			(out.Sections).UnmarshalEasyJSON(in)
		case "symbol":
			out.Symbol = string(in.String())
		case "war":
			out.War = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"companyHeader\":"
		out.RawString(prefix[1:])
		out.String(string(in.CompanyHeader))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"fop\":"
		out.RawString(prefix)
		out.String(string(in.Fop))
	}
	{
		const prefix string = ",\"opt\":"
		out.RawString(prefix)
		out.String(string(in.Opt))
	}
	{
		const prefix string = ",\"restricted\":"
		out.RawString(prefix)
		out.String(string(in.Restricted))
	}
	{
		const prefix string = ",\"sections\":"
		out.RawString(prefix)
		(in.Sections).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"war\":"
		out.RawString(prefix)
		out.String(string(in.War))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(in *jlexer.Lexer, out *Iserver_Secdef_Search_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Search_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Search_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v127 *Iserver_Secdef_Search_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v127 = nil
			} else {
				if v127 == nil {
					v127 = new(Iserver_Secdef_Search_POST_200_List_Item)
				}
				(*v127).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v127)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(out *jwriter.Writer, in Iserver_Secdef_Search_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v128, v129 := range in {
			if v128 > 0 {
				out.RawByte(',')
			}
			if v129 == nil {
				out.RawString("null")
			} else {
				(*v129).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Search_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Search_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefSearchPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(in *jlexer.Lexer, out *Iserver_Secdef_Info_GET_500) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(out *jwriter.Writer, in Iserver_Secdef_Info_GET_500) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Info_GET_500) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Info_GET_500) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_500) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_500) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(in *jlexer.Lexer, out *Iserver_Secdef_Info_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Secdef_Info_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Secdef_Info_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v130 *SecdefInfo
			if in.IsNull() {
				in.Skip()
				v130 = nil
			} else {
				if v130 == nil {
					v130 = new(SecdefInfo)
				}
				(*v130).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v130)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(out *jwriter.Writer, in Iserver_Secdef_Info_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v131, v132 := range in {
			if v131 > 0 {
				out.RawByte(',')
			}
			if v132 == nil {
				out.RawString("null")
			} else {
				(*v132).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Secdef_Info_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Secdef_Info_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Secdef_Info_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverSecdefInfoGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(in *jlexer.Lexer, out *Iserver_Scanner_Run_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "available_chart_periods":
			out.Available_chart_periods = string(in.String())
		case "column_name":
			out.Column_name = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = float64(in.Float64())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		case "listing_exchange":
			out.Listing_exchange = string(in.String())
		case "sec_type":
			out.Sec_type = string(in.String())
		case "server_id":
			out.Server_id = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(out *jwriter.Writer, in Iserver_Scanner_Run_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"available_chart_periods\":"
		out.RawString(prefix[1:])
		out.String(string(in.Available_chart_periods))
	}
	{
		const prefix string = ",\"column_name\":"
		out.RawString(prefix)
		out.String(string(in.Column_name))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Con_id))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	{
		const prefix string = ",\"listing_exchange\":"
		out.RawString(prefix)
		out.String(string(in.Listing_exchange))
	}
	{
		const prefix string = ",\"sec_type\":"
		out.RawString(prefix)
		out.String(string(in.Sec_type))
	}
	{
		const prefix string = ",\"server_id\":"
		out.RawString(prefix)
		out.String(string(in.Server_id))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(in *jlexer.Lexer, out *Iserver_Scanner_Run_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Run_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Run_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v133 *Iserver_Scanner_Run_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v133 = nil
			} else {
				if v133 == nil {
					v133 = new(Iserver_Scanner_Run_POST_200_List_Item)
				}
				(*v133).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v133)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(out *jwriter.Writer, in Iserver_Scanner_Run_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v134, v135 := range in {
			if v134 > 0 {
				out.RawByte(',')
			}
			if v135 == nil {
				out.RawString("null")
			} else {
				(*v135).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Run_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Run_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerRunPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List, 0, 4)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v136 string
			v136 = string(in.String())
			*out = append(*out, v136)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v137, v138 := range in {
			if v137 > 0 {
				out.RawByte(',')
			}
			out.String(string(v138))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item_Instruments_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListListItemInstruments(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "display_name":
			out.Display_name = string(in.String())
		case "instruments":
			(out.Instruments).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix)
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"instruments\":"
		out.RawString(prefix)
		(in.Instruments).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Scan_type_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Scan_type_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Scan_type_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v139 *Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item
			if in.IsNull() {
				in.Skip()
				v139 = nil
			} else {
				if v139 == nil {
					v139 = new(Iserver_Scanner_Params_GET_200_Scan_type_list_List_Item)
				}
				(*v139).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v139)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Scan_type_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v140, v141 := range in {
			if v140 > 0 {
				out.RawByte(',')
			}
			if v141 == nil {
				out.RawString("null")
			} else {
				(*v141).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Scan_type_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Scan_type_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200ScanTypeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocationsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v142 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item
			if in.IsNull() {
				in.Skip()
				v142 = nil
			} else {
				if v142 == nil {
					v142 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List_Item)
				}
				(*v142).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v142)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v143, v144 := range in {
			if v143 > 0 {
				out.RawByte(',')
			}
			if v144 == nil {
				out.RawString("null")
			} else {
				(*v144).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item_Locations_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeListItemLocations(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "locations":
			(out.Locations).UnmarshalEasyJSON(in)
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"locations\":"
		out.RawString(prefix)
		(in.Locations).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTreeList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Location_tree_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Location_tree_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Location_tree_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v145 *Iserver_Scanner_Params_GET_200_Location_tree_List_Item
			if in.IsNull() {
				in.Skip()
				v145 = nil
			} else {
				if v145 == nil {
					v145 = new(Iserver_Scanner_Params_GET_200_Location_tree_List_Item)
				}
				(*v145).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v145)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Location_tree_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v146, v147 := range in {
			if v146 > 0 {
				out.RawByte(',')
			}
			if v147 == nil {
				out.RawString("null")
			} else {
				(*v147).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Location_tree_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Location_tree_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200LocationTree(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List, 0, 4)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v148 string
			v148 = string(in.String())
			*out = append(*out, v148)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v149, v150 := range in {
			if v149 > 0 {
				out.RawByte(',')
			}
			out.String(string(v150))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item_Filters_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListListItemFilters(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "display_name":
			out.Display_name = string(in.String())
		case "filters":
			(out.Filters).UnmarshalEasyJSON(in)
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix)
		(in.Filters).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Instrument_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Instrument_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Instrument_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v151 *Iserver_Scanner_Params_GET_200_Instrument_list_List_Item
			if in.IsNull() {
				in.Skip()
				v151 = nil
			} else {
				if v151 == nil {
					v151 = new(Iserver_Scanner_Params_GET_200_Instrument_list_List_Item)
				}
				(*v151).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v151)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Instrument_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v152, v153 := range in {
			if v152 > 0 {
				out.RawByte(',')
			}
			if v153 == nil {
				out.RawString("null")
			} else {
				(*v153).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Instrument_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Instrument_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200InstrumentList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "display_name":
			out.Display_name = string(in.String())
		case "group":
			out.Group = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Filter_list_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"display_name\":"
		out.RawString(prefix)
		out.String(string(in.Display_name))
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		out.String(string(in.Group))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterListList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200_Filter_list_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Scanner_Params_GET_200_Filter_list_List, 0, 8)
			} else {
				*out = Iserver_Scanner_Params_GET_200_Filter_list_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v154 *Iserver_Scanner_Params_GET_200_Filter_list_List_Item
			if in.IsNull() {
				in.Skip()
				v154 = nil
			} else {
				if v154 == nil {
					v154 = new(Iserver_Scanner_Params_GET_200_Filter_list_List_Item)
				}
				(*v154).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v154)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200_Filter_list_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v155, v156 := range in {
			if v155 > 0 {
				out.RawByte(',')
			}
			if v156 == nil {
				out.RawString("null")
			} else {
				(*v156).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200_Filter_list_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200_Filter_list_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET200FilterList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(in *jlexer.Lexer, out *Iserver_Scanner_Params_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filter_list":
			(out.Filter_list).UnmarshalEasyJSON(in)
		case "instrument_list":
			(out.Instrument_list).UnmarshalEasyJSON(in)
		case "location_tree":
			(out.Location_tree).UnmarshalEasyJSON(in)
		case "scan_type_list":
			(out.Scan_type_list).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(out *jwriter.Writer, in Iserver_Scanner_Params_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filter_list\":"
		out.RawString(prefix[1:])
		(in.Filter_list).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"instrument_list\":"
		out.RawString(prefix)
		(in.Instrument_list).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"location_tree\":"
		out.RawString(prefix)
		(in.Location_tree).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"scan_type_list\":"
		out.RawString(prefix)
		(in.Scan_type_list).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Scanner_Params_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Scanner_Params_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Scanner_Params_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverScannerParamsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_400) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		case "statusCode":
			out.StatusCode = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_400) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"statusCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.StatusCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_400) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_400) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_400) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_400) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "local_order_id":
			out.Local_order_id = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		case "order_status":
			out.Order_status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"local_order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Local_order_id))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(in *jlexer.Lexer, out *Iserver_Reply_Replyid_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Reply_Replyid_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Reply_Replyid_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v157 *Iserver_Reply_Replyid_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v157 = nil
			} else {
				if v157 == nil {
					v157 = new(Iserver_Reply_Replyid_POST_200_List_Item)
				}
				(*v157).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v157)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(out *jwriter.Writer, in Iserver_Reply_Replyid_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v158, v159 := range in {
			if v158 > 0 {
				out.RawByte(',')
			}
			if v159 == nil {
				out.RawString("null")
			} else {
				(*v159).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Reply_Replyid_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Reply_Replyid_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverReplyReplyidPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(in *jlexer.Lexer, out *Iserver_Marketdata_Unsubscribeall_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(out *jwriter.Writer, in Iserver_Marketdata_Unsubscribeall_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Unsubscribeall_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Unsubscribeall_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Unsubscribeall_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Unsubscribeall_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataUnsubscribeallGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_400) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		case "statusCode":
			out.StatusCode = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_400) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"statusCode\":"
		out.RawString(prefix)
		out.Int64(int64(in.StatusCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_400) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_400) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_400) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_400) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "31":
			out.LastPrice = string(in.String())
		case "55":
			out.Symbol = string(in.String())
		case "58":
			out.Text = string(in.String())
		case "70":
			out.High = string(in.String())
		case "71":
			out.Low = string(in.String())
		case "72":
			out.Position = string(in.String())
		case "73":
			out.MarketValue = string(in.String())
		case "74":
			out.AveragePrice = string(in.String())
		case "75":
			out.UnrealizedPnL = string(in.String())
		case "76":
			out.FormattedPosition = string(in.String())
		case "77":
			out.FormattedUnrealizedPnL = string(in.String())
		case "78":
			out.DailyPnL = string(in.String())
		case "82":
			out.ChangePrice = string(in.String())
		case "83":
			out.ChangePercent = string(in.String())
		case "84":
			out.BidPrice = string(in.String())
		case "85":
			out.AskSize = string(in.String())
		case "86":
			out.AskPrice = string(in.String())
		case "87":
			out.Volume = string(in.String())
		case "88":
			out.BidSize = string(in.String())
		case "6004":
			out.Exchange = string(in.String())
		case "6008":
			out.Conid6008 = string(in.String())
		case "6070":
			out.SecurityType = string(in.String())
		case "6072":
			out.Months = string(in.String())
		case "6073":
			out.RegularExpiry = string(in.String())
		case "6119":
			out.Marker = string(in.String())
		case "6457":
			out.UnderlyingConid = string(in.String())
		case "6509":
			out.MarketDataAvailability = string(in.String())
		case "7051":
			out.CompanyName = string(in.String())
		case "7059":
			out.LastSize = string(in.String())
		case "7094":
			out.ConidAndExchange = string(in.String())
		case "7219":
			out.ContractDescription = string(in.String())
		case "7220":
			out.ContractDescription2 = string(in.String())
		case "7221":
			out.ListingExchange = string(in.String())
		case "7280":
			out.Industry = string(in.String())
		case "7281":
			out.Category = string(in.String())
		case "7282":
			out.AverageDailyVolume = string(in.String())
		case "7284":
			out.HistoricVolume30d = string(in.String())
		case "7285":
			out.PutCallRatio = string(in.String())
		case "7286":
			out.DividendAmount = string(in.String())
		case "7287":
			out.DividendYieldPercent = string(in.String())
		case "7288":
			out.ExDateOfTheDividend = string(in.String())
		case "7289":
			out.MarketCap = string(in.String())
		case "7290":
			out.PE = string(in.String())
		case "7291":
			out.EPS = string(in.String())
		case "7292":
			out.CostBasis = string(in.String())
		case "7293":
			out.High52Week = string(in.String())
		case "7294":
			out.Low52Week = string(in.String())
		case "7295":
			out.OpenPrice = string(in.String())
		case "7296":
			out.ClosePrice = string(in.String())
		case "7308":
			out.Delta = string(in.String())
		case "7309":
			out.Gamma = string(in.String())
		case "7310":
			out.Theta = string(in.String())
		case "7311":
			out.Vega = string(in.String())
		case "7633":
			out.ImpliedVolatility = string(in.String())
		case "87_raw":
			out.VolumeRaw = float64(in.Float64())
		case "_updated":
			out.Updated = int64(in.Int64())
		case "conid":
			out.Conid = int64(in.Int64())
		case "server_id":
			out.Server_id = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"31\":"
		out.RawString(prefix[1:])
		out.String(string(in.LastPrice))
	}
	{
		const prefix string = ",\"55\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"58\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"70\":"
		out.RawString(prefix)
		out.String(string(in.High))
	}
	{
		const prefix string = ",\"71\":"
		out.RawString(prefix)
		out.String(string(in.Low))
	}
	{
		const prefix string = ",\"72\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"73\":"
		out.RawString(prefix)
		out.String(string(in.MarketValue))
	}
	{
		const prefix string = ",\"74\":"
		out.RawString(prefix)
		out.String(string(in.AveragePrice))
	}
	{
		const prefix string = ",\"75\":"
		out.RawString(prefix)
		out.String(string(in.UnrealizedPnL))
	}
	{
		const prefix string = ",\"76\":"
		out.RawString(prefix)
		out.String(string(in.FormattedPosition))
	}
	{
		const prefix string = ",\"77\":"
		out.RawString(prefix)
		out.String(string(in.FormattedUnrealizedPnL))
	}
	{
		const prefix string = ",\"78\":"
		out.RawString(prefix)
		out.String(string(in.DailyPnL))
	}
	{
		const prefix string = ",\"82\":"
		out.RawString(prefix)
		out.String(string(in.ChangePrice))
	}
	{
		const prefix string = ",\"83\":"
		out.RawString(prefix)
		out.String(string(in.ChangePercent))
	}
	{
		const prefix string = ",\"84\":"
		out.RawString(prefix)
		out.String(string(in.BidPrice))
	}
	{
		const prefix string = ",\"85\":"
		out.RawString(prefix)
		out.String(string(in.AskSize))
	}
	{
		const prefix string = ",\"86\":"
		out.RawString(prefix)
		out.String(string(in.AskPrice))
	}
	{
		const prefix string = ",\"87\":"
		out.RawString(prefix)
		out.String(string(in.Volume))
	}
	{
		const prefix string = ",\"88\":"
		out.RawString(prefix)
		out.String(string(in.BidSize))
	}
	{
		const prefix string = ",\"6004\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"6008\":"
		out.RawString(prefix)
		out.String(string(in.Conid6008))
	}
	{
		const prefix string = ",\"6070\":"
		out.RawString(prefix)
		out.String(string(in.SecurityType))
	}
	{
		const prefix string = ",\"6072\":"
		out.RawString(prefix)
		out.String(string(in.Months))
	}
	{
		const prefix string = ",\"6073\":"
		out.RawString(prefix)
		out.String(string(in.RegularExpiry))
	}
	{
		const prefix string = ",\"6119\":"
		out.RawString(prefix)
		out.String(string(in.Marker))
	}
	{
		const prefix string = ",\"6457\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingConid))
	}
	{
		const prefix string = ",\"6509\":"
		out.RawString(prefix)
		out.String(string(in.MarketDataAvailability))
	}
	{
		const prefix string = ",\"7051\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"7059\":"
		out.RawString(prefix)
		out.String(string(in.LastSize))
	}
	{
		const prefix string = ",\"7094\":"
		out.RawString(prefix)
		out.String(string(in.ConidAndExchange))
	}
	{
		const prefix string = ",\"7219\":"
		out.RawString(prefix)
		out.String(string(in.ContractDescription))
	}
	{
		const prefix string = ",\"7220\":"
		out.RawString(prefix)
		out.String(string(in.ContractDescription2))
	}
	{
		const prefix string = ",\"7221\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"7280\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"7281\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"7282\":"
		out.RawString(prefix)
		out.String(string(in.AverageDailyVolume))
	}
	{
		const prefix string = ",\"7284\":"
		out.RawString(prefix)
		out.String(string(in.HistoricVolume30d))
	}
	{
		const prefix string = ",\"7285\":"
		out.RawString(prefix)
		out.String(string(in.PutCallRatio))
	}
	{
		const prefix string = ",\"7286\":"
		out.RawString(prefix)
		out.String(string(in.DividendAmount))
	}
	{
		const prefix string = ",\"7287\":"
		out.RawString(prefix)
		out.String(string(in.DividendYieldPercent))
	}
	{
		const prefix string = ",\"7288\":"
		out.RawString(prefix)
		out.String(string(in.ExDateOfTheDividend))
	}
	{
		const prefix string = ",\"7289\":"
		out.RawString(prefix)
		out.String(string(in.MarketCap))
	}
	{
		const prefix string = ",\"7290\":"
		out.RawString(prefix)
		out.String(string(in.PE))
	}
	{
		const prefix string = ",\"7291\":"
		out.RawString(prefix)
		out.String(string(in.EPS))
	}
	{
		const prefix string = ",\"7292\":"
		out.RawString(prefix)
		out.String(string(in.CostBasis))
	}
	{
		const prefix string = ",\"7293\":"
		out.RawString(prefix)
		out.String(string(in.High52Week))
	}
	{
		const prefix string = ",\"7294\":"
		out.RawString(prefix)
		out.String(string(in.Low52Week))
	}
	{
		const prefix string = ",\"7295\":"
		out.RawString(prefix)
		out.String(string(in.OpenPrice))
	}
	{
		const prefix string = ",\"7296\":"
		out.RawString(prefix)
		out.String(string(in.ClosePrice))
	}
	{
		const prefix string = ",\"7308\":"
		out.RawString(prefix)
		out.String(string(in.Delta))
	}
	{
		const prefix string = ",\"7309\":"
		out.RawString(prefix)
		out.String(string(in.Gamma))
	}
	{
		const prefix string = ",\"7310\":"
		out.RawString(prefix)
		out.String(string(in.Theta))
	}
	{
		const prefix string = ",\"7311\":"
		out.RawString(prefix)
		out.String(string(in.Vega))
	}
	{
		const prefix string = ",\"7633\":"
		out.RawString(prefix)
		out.String(string(in.ImpliedVolatility))
	}
	{
		const prefix string = ",\"87_raw\":"
		out.RawString(prefix)
		out.Float64(float64(in.VolumeRaw))
	}
	{
		const prefix string = ",\"_updated\":"
		out.RawString(prefix)
		out.Int64(int64(in.Updated))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"server_id\":"
		out.RawString(prefix)
		out.String(string(in.Server_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(in *jlexer.Lexer, out *Iserver_Marketdata_Snapshot_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Marketdata_Snapshot_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Marketdata_Snapshot_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v160 *Iserver_Marketdata_Snapshot_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v160 = nil
			} else {
				if v160 == nil {
					v160 = new(Iserver_Marketdata_Snapshot_GET_200_List_Item)
				}
				(*v160).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v160)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(out *jwriter.Writer, in Iserver_Marketdata_Snapshot_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v161, v162 := range in {
			if v161 > 0 {
				out.RawByte(',')
			}
			if v162 == nil {
				out.RawString("null")
			} else {
				(*v162).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Snapshot_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Snapshot_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataSnapshotGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(in *jlexer.Lexer, out *Iserver_Marketdata_History_GET_429) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(out *jwriter.Writer, in Iserver_Marketdata_History_GET_429) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_History_GET_429) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_History_GET_429) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_History_GET_429) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_History_GET_429) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataHistoryGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(in *jlexer.Lexer, out *Iserver_Marketdata_Conid_Unsubscribe_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "confirmed":
			out.Confirmed = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(out *jwriter.Writer, in Iserver_Marketdata_Conid_Unsubscribe_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"confirmed\":"
		out.RawString(prefix[1:])
		out.String(string(in.Confirmed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Marketdata_Conid_Unsubscribe_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Marketdata_Conid_Unsubscribe_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Marketdata_Conid_Unsubscribe_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Marketdata_Conid_Unsubscribe_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverMarketdataConidUnsubscribeGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v163 int64
			v163 = int64(in.Int64())
			*out = append(*out, v163)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v164, v165 := range in {
			if v164 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v165))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_TifTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemTifTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v166 int64
			v166 = int64(in.Int64())
			*out = append(*out, v166)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v167, v168 := range in {
			if v167 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v168))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v169 int64
			v169 = int64(in.Int64())
			*out = append(*out, v169)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v170, v171 := range in {
			if v170 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v171))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderTypesOutside_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderTypesOutside(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List, 0, 4)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v172 string
			v172 = string(in.String())
			*out = append(*out, v172)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v173, v174 := range in {
			if v173 > 0 {
				out.RawByte(',')
			}
			out.String(string(v174))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item_String_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsListItemString(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "string":
			(out.String).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"string\":"
		out.RawString(prefix[1:])
		(in.String).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaultsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v175 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item
			if in.IsNull() {
				in.Skip()
				v175 = nil
			} else {
				if v175 == nil {
					v175 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List_Item)
				}
				(*v175).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v175)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v176, v177 := range in {
			if v176 > 0 {
				out.RawByte(',')
			}
			if v177 == nil {
				out.RawString("null")
			} else {
				(*v177).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_OrderDefaults_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemOrderDefaults(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v178 int64
			v178 = int64(in.Int64())
			*out = append(*out, v178)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v179, v180 := range in {
			if v179 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v180))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_IbalgoTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemIbalgoTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v181 int64
			v181 = int64(in.Int64())
			*out = append(*out, v181)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v182, v183 := range in {
			if v182 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v183))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_FraqTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemFraqTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v184 int64
			v184 = int64(in.Int64())
			*out = append(*out, v184)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v185, v186 := range in {
			if v185 > 0 {
				out.RawByte(',')
			}
			out.Int64(int64(v186))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item_CqtTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesListItemCqtTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "cashCcy":
			out.CashCcy = string(in.String())
		case "cashQtyIncr":
			out.CashQtyIncr = float64(in.Float64())
		case "cashSize":
			out.CashSize = int64(in.Int64())
		case "cqtTypes":
			(out.CqtTypes).UnmarshalEasyJSON(in)
		case "defaultSize":
			out.DefaultSize = int64(in.Int64())
		case "defaultTIF":
			out.DefaultTIF = string(in.String())
		case "displaySize":
			out.DisplaySize = float64(in.Float64())
		case "error":
			out.Error = string(in.String())
		case "fraqInt":
			out.FraqInt = float64(in.Float64())
		case "fraqTypes":
			(out.FraqTypes).UnmarshalEasyJSON(in)
		case "ibalgoTypes":
			(out.IbalgoTypes).UnmarshalEasyJSON(in)
		case "increment":
			out.Increment = float64(in.Float64())
		case "incrementDigits":
			out.IncrementDigits = int64(in.Int64())
		case "limitPrice":
			out.LimitPrice = float64(in.Float64())
		case "negativeCapable":
			out.NegativeCapable = bool(in.Bool())
		case "orderDefaults":
			(out.OrderDefaults).UnmarshalEasyJSON(in)
		case "orderOrigination":
			out.OrderOrigination = float64(in.Float64())
		case "orderTypes":
			(out.OrderTypes).UnmarshalEasyJSON(in)
		case "orderTypesOutside":
			(out.OrderTypesOutside).UnmarshalEasyJSON(in)
		case "preview":
			out.Preview = bool(in.Bool())
		case "priceMagnifier":
			out.PriceMagnifier = float64(in.Float64())
		case "sizeIncrement":
			out.SizeIncrement = int64(in.Int64())
		case "stopprice":
			out.Stopprice = float64(in.Float64())
		case "tifTypes":
			(out.TifTypes).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"cashCcy\":"
		out.RawString(prefix[1:])
		out.String(string(in.CashCcy))
	}
	{
		const prefix string = ",\"cashQtyIncr\":"
		out.RawString(prefix)
		out.Float64(float64(in.CashQtyIncr))
	}
	{
		const prefix string = ",\"cashSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.CashSize))
	}
	{
		const prefix string = ",\"cqtTypes\":"
		out.RawString(prefix)
		(in.CqtTypes).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"defaultSize\":"
		out.RawString(prefix)
		out.Int64(int64(in.DefaultSize))
	}
	{
		const prefix string = ",\"defaultTIF\":"
		out.RawString(prefix)
		out.String(string(in.DefaultTIF))
	}
	{
		const prefix string = ",\"displaySize\":"
		out.RawString(prefix)
		out.Float64(float64(in.DisplaySize))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"fraqInt\":"
		out.RawString(prefix)
		out.Float64(float64(in.FraqInt))
	}
	{
		const prefix string = ",\"fraqTypes\":"
		out.RawString(prefix)
		(in.FraqTypes).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"ibalgoTypes\":"
		out.RawString(prefix)
		(in.IbalgoTypes).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"increment\":"
		out.RawString(prefix)
		out.Float64(float64(in.Increment))
	}
	{
		const prefix string = ",\"incrementDigits\":"
		out.RawString(prefix)
		out.Int64(int64(in.IncrementDigits))
	}
	{
		const prefix string = ",\"limitPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.LimitPrice))
	}
	{
		const prefix string = ",\"negativeCapable\":"
		out.RawString(prefix)
		out.Bool(bool(in.NegativeCapable))
	}
	{
		const prefix string = ",\"orderDefaults\":"
		out.RawString(prefix)
		(in.OrderDefaults).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"orderOrigination\":"
		out.RawString(prefix)
		out.Float64(float64(in.OrderOrigination))
	}
	{
		const prefix string = ",\"orderTypes\":"
		out.RawString(prefix)
		(in.OrderTypes).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"orderTypesOutside\":"
		out.RawString(prefix)
		(in.OrderTypesOutside).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"preview\":"
		out.RawString(prefix)
		out.Bool(bool(in.Preview))
	}
	{
		const prefix string = ",\"priceMagnifier\":"
		out.RawString(prefix)
		out.Float64(float64(in.PriceMagnifier))
	}
	{
		const prefix string = ",\"sizeIncrement\":"
		out.RawString(prefix)
		out.Int64(int64(in.SizeIncrement))
	}
	{
		const prefix string = ",\"stopprice\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stopprice))
	}
	{
		const prefix string = ",\"tifTypes\":"
		out.RawString(prefix)
		(in.TifTypes).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200RulesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List, 0, 8)
			} else {
				*out = Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v187 *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item
			if in.IsNull() {
				in.Skip()
				v187 = nil
			} else {
				if v187 == nil {
					v187 = new(Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List_Item)
				}
				(*v187).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v187)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v188, v189 := range in {
			if v188 > 0 {
				out.RawByte(',')
			}
			if v189 == nil {
				out.RawString("null")
			} else {
				(*v189).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200_Rules_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET200Rules(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(in *jlexer.Lexer, out *Iserver_Contract_Conid_InfoAndRules_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "allow_sell_long":
			out.Allow_sell_long = bool(in.Bool())
		case "cfi_code":
			out.Cfi_code = string(in.String())
		case "classifier":
			out.Classifier = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = float64(in.Float64())
		case "contract_month":
			out.Contract_month = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "expiry_full":
			out.Expiry_full = float64(in.Float64())
		case "industry":
			out.Industry = string(in.String())
		case "instrument_type":
			out.Instrument_type = string(in.String())
		case "is_zero_commission_security":
			out.Is_zero_commission_security = bool(in.Bool())
		case "local_symbol":
			out.Local_symbol = string(in.String())
		case "maturity_date":
			out.Maturity_date = float64(in.Float64())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "r_t_h":
			out.R_t_h = bool(in.Bool())
		case "right":
			out.Right = string(in.String())
		case "rules":
			(out.Rules).UnmarshalEasyJSON(in)
		case "smart_available":
			out.Smart_available = bool(in.Bool())
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "trading_class":
			out.Trading_class = string(in.String())
		case "underlying_con_id":
			out.Underlying_con_id = float64(in.Float64())
		case "underlying_issuer":
			out.Underlying_issuer = string(in.String())
		case "valid_exchanges":
			out.Valid_exchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(out *jwriter.Writer, in Iserver_Contract_Conid_InfoAndRules_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"allow_sell_long\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Allow_sell_long))
	}
	{
		const prefix string = ",\"cfi_code\":"
		out.RawString(prefix)
		out.String(string(in.Cfi_code))
	}
	{
		const prefix string = ",\"classifier\":"
		out.RawString(prefix)
		out.String(string(in.Classifier))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Con_id))
	}
	{
		const prefix string = ",\"contract_month\":"
		out.RawString(prefix)
		out.String(string(in.Contract_month))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"expiry_full\":"
		out.RawString(prefix)
		out.Float64(float64(in.Expiry_full))
	}
	{
		const prefix string = ",\"industry\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"instrument_type\":"
		out.RawString(prefix)
		out.String(string(in.Instrument_type))
	}
	{
		const prefix string = ",\"is_zero_commission_security\":"
		out.RawString(prefix)
		out.Bool(bool(in.Is_zero_commission_security))
	}
	{
		const prefix string = ",\"local_symbol\":"
		out.RawString(prefix)
		out.String(string(in.Local_symbol))
	}
	{
		const prefix string = ",\"maturity_date\":"
		out.RawString(prefix)
		out.Float64(float64(in.Maturity_date))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"r_t_h\":"
		out.RawString(prefix)
		out.Bool(bool(in.R_t_h))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"rules\":"
		out.RawString(prefix)
		(in.Rules).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"smart_available\":"
		out.RawString(prefix)
		out.Bool(bool(in.Smart_available))
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"trading_class\":"
		out.RawString(prefix)
		out.String(string(in.Trading_class))
	}
	{
		const prefix string = ",\"underlying_con_id\":"
		out.RawString(prefix)
		out.Float64(float64(in.Underlying_con_id))
	}
	{
		const prefix string = ",\"underlying_issuer\":"
		out.RawString(prefix)
		out.String(string(in.Underlying_issuer))
	}
	{
		const prefix string = ",\"valid_exchanges\":"
		out.RawString(prefix)
		out.String(string(in.Valid_exchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Contract_Conid_InfoAndRules_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Contract_Conid_InfoAndRules_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverContractConidInfoAndRulesGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(in *jlexer.Lexer, out *Iserver_Accounts_GET_200_Accounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Accounts_GET_200_Accounts_List, 0, 4)
			} else {
				*out = Iserver_Accounts_GET_200_Accounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v190 string
			v190 = string(in.String())
			*out = append(*out, v190)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(out *jwriter.Writer, in Iserver_Accounts_GET_200_Accounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v191, v192 := range in {
			if v191 > 0 {
				out.RawByte(',')
			}
			out.String(string(v192))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Accounts_GET_200_Accounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Accounts_GET_200_Accounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Accounts_GET_200_Accounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Accounts_GET_200_Accounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET200Accounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(in *jlexer.Lexer, out *Iserver_Accounts_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accounts":
			(out.Accounts).UnmarshalEasyJSON(in)
		case "aliases":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Aliases = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v193 interface{}
					if m, ok := v193.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v193.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v193 = in.Interface()
					}
					(out.Aliases)[key] = v193
					in.WantComma()
				}
				in.Delim('}')
			}
		case "selectedAccount":
			out.SelectedAccount = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(out *jwriter.Writer, in Iserver_Accounts_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accounts\":"
		out.RawString(prefix[1:])
		(in.Accounts).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"aliases\":"
		out.RawString(prefix)
		if in.Aliases == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v194First := true
			for v194Name, v194Value := range in.Aliases {
				if v194First {
					v194First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v194Name))
				out.RawByte(':')
				if m, ok := v194Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v194Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v194Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"selectedAccount\":"
		out.RawString(prefix)
		out.String(string(in.SelectedAccount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Accounts_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Accounts_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Accounts_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Accounts_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(in *jlexer.Lexer, out *Iserver_Account_Trades_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Trades_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Account_Trades_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v195 *Trade
			if in.IsNull() {
				in.Skip()
				v195 = nil
			} else {
				if v195 == nil {
					v195 = new(Trade)
				}
				(*v195).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v195)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(out *jwriter.Writer, in Iserver_Account_Trades_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v196, v197 := range in {
			if v196 > 0 {
				out.RawByte(',')
			}
			if v197 == nil {
				out.RawString("null")
			} else {
				(*v197).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Trades_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Trades_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Trades_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Trades_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountTradesGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(in *jlexer.Lexer, out *Iserver_Account_Pnl_Partitioned_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.AcctId = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v198 interface{}
					if m, ok := v198.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v198.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v198 = in.Interface()
					}
					(out.AcctId)[key] = v198
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(out *jwriter.Writer, in Iserver_Account_Pnl_Partitioned_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		if in.AcctId == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v199First := true
			for v199Name, v199Value := range in.AcctId {
				if v199First {
					v199First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v199Name))
				out.RawByte(':')
				if m, ok := v199Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v199Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v199Value))
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Pnl_Partitioned_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Pnl_Partitioned_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Pnl_Partitioned_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Pnl_Partitioned_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPnlPartitionedGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(in *jlexer.Lexer, out *Iserver_Account_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acctId":
			out.AcctId = string(in.String())
		case "set":
			out.Set = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(out *jwriter.Writer, in Iserver_Account_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acctId\":"
		out.RawString(prefix[1:])
		out.String(string(in.AcctId))
	}
	{
		const prefix string = ",\"set\":"
		out.RawString(prefix)
		out.Bool(bool(in.Set))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_Request_Filters_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_GET_Request_Filters_List, 0, 4)
			} else {
				*out = Iserver_Account_Orders_GET_Request_Filters_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v200 string
			v200 = string(in.String())
			*out = append(*out, v200)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(out *jwriter.Writer, in Iserver_Account_Orders_GET_Request_Filters_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v201, v202 := range in {
			if v201 > 0 {
				out.RawByte(',')
			}
			out.String(string(v202))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_Request_Filters_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_Request_Filters_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request_Filters_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request_Filters_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGETRequestFilters(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filters":
			(out.Filters).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(out *jwriter.Writer, in Iserver_Account_Orders_GET_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix[1:])
		(in.Filters).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200_Orders_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "acct":
			out.Acct = string(in.String())
		case "bgColor":
			out.BgColor = string(in.String())
		case "cashCcy":
			out.CashCcy = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "conid":
			out.Conid = float64(in.Float64())
		case "description1":
			out.Description1 = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "fgColor":
			out.FgColor = string(in.String())
		case "filledQuantity":
			out.FilledQuantity = float64(in.Float64())
		case "lastExecutionTime":
			out.LastExecutionTime = float64(in.Float64())
		case "lastExecutionTime_r":
			out.LastExecutionTime_r = float64(in.Float64())
		case "listingExchange":
			out.ListingExchange = string(in.String())
		case "orderDesc":
			out.OrderDesc = string(in.String())
		case "orderId":
			out.OrderId = string(in.String())
		case "orderType":
			out.OrderType = string(in.String())
		case "order_ref":
			out.Order_ref = string(in.String())
		case "origOrderType":
			out.OrigOrderType = string(in.String())
		case "price":
			out.Price = float64(in.Float64())
		case "remainingQuantity":
			out.RemainingQuantity = float64(in.Float64())
		case "secType":
			out.SecType = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "sizeAndFills":
			out.SizeAndFills = float64(in.Float64())
		case "status":
			out.Status = string(in.String())
		case "supportsTaxOpt":
			out.SupportsTaxOpt = float64(in.Float64())
		case "ticker":
			out.Ticker = string(in.String())
		case "timeInForce":
			out.TimeInForce = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(out *jwriter.Writer, in Iserver_Account_Orders_GET_200_Orders_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"acct\":"
		out.RawString(prefix[1:])
		out.String(string(in.Acct))
	}
	{
		const prefix string = ",\"bgColor\":"
		out.RawString(prefix)
		out.String(string(in.BgColor))
	}
	{
		const prefix string = ",\"cashCcy\":"
		out.RawString(prefix)
		out.String(string(in.CashCcy))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Float64(float64(in.Conid))
	}
	{
		const prefix string = ",\"description1\":"
		out.RawString(prefix)
		out.String(string(in.Description1))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"fgColor\":"
		out.RawString(prefix)
		out.String(string(in.FgColor))
	}
	{
		const prefix string = ",\"filledQuantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.FilledQuantity))
	}
	{
		const prefix string = ",\"lastExecutionTime\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastExecutionTime))
	}
	{
		const prefix string = ",\"lastExecutionTime_r\":"
		out.RawString(prefix)
		out.Float64(float64(in.LastExecutionTime_r))
	}
	{
		const prefix string = ",\"listingExchange\":"
		out.RawString(prefix)
		out.String(string(in.ListingExchange))
	}
	{
		const prefix string = ",\"orderDesc\":"
		out.RawString(prefix)
		out.String(string(in.OrderDesc))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"orderType\":"
		out.RawString(prefix)
		out.String(string(in.OrderType))
	}
	{
		const prefix string = ",\"order_ref\":"
		out.RawString(prefix)
		out.String(string(in.Order_ref))
	}
	{
		const prefix string = ",\"origOrderType\":"
		out.RawString(prefix)
		out.String(string(in.OrigOrderType))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64(float64(in.Price))
	}
	{
		const prefix string = ",\"remainingQuantity\":"
		out.RawString(prefix)
		out.Float64(float64(in.RemainingQuantity))
	}
	{
		const prefix string = ",\"secType\":"
		out.RawString(prefix)
		out.String(string(in.SecType))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"sizeAndFills\":"
		out.RawString(prefix)
		out.Float64(float64(in.SizeAndFills))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"supportsTaxOpt\":"
		out.RawString(prefix)
		out.Float64(float64(in.SupportsTaxOpt))
	}
	{
		const prefix string = ",\"ticker\":"
		out.RawString(prefix)
		out.String(string(in.Ticker))
	}
	{
		const prefix string = ",\"timeInForce\":"
		out.RawString(prefix)
		out.String(string(in.TimeInForce))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200OrdersList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200_Orders_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_GET_200_Orders_List, 0, 8)
			} else {
				*out = Iserver_Account_Orders_GET_200_Orders_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v203 *Iserver_Account_Orders_GET_200_Orders_List_Item
			if in.IsNull() {
				in.Skip()
				v203 = nil
			} else {
				if v203 == nil {
					v203 = new(Iserver_Account_Orders_GET_200_Orders_List_Item)
				}
				(*v203).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v203)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(out *jwriter.Writer, in Iserver_Account_Orders_GET_200_Orders_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v204, v205 := range in {
			if v204 > 0 {
				out.RawByte(',')
			}
			if v205 == nil {
				out.RawString("null")
			} else {
				(*v205).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200_Orders_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200_Orders_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET200Orders(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(in *jlexer.Lexer, out *Iserver_Account_Orders_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "orders":
			(out.Orders).UnmarshalEasyJSON(in)
		case "snapshot":
			out.Snapshot = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(out *jwriter.Writer, in Iserver_Account_Orders_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"orders\":"
		out.RawString(prefix[1:])
		(in.Orders).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"snapshot\":"
		out.RawString(prefix)
		out.Bool(bool(in.Snapshot))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersGET1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v206 string
			v206 = string(in.String())
			*out = append(*out, v206)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v207, v208 := range in {
			if v207 > 0 {
				out.RawByte(',')
			}
			out.String(string(v208))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			(out.Message).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		(in.Message).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(in *jlexer.Lexer, out *Iserver_Account_Orders_FaGroup_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_Orders_FaGroup_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_Orders_FaGroup_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v209 *Iserver_Account_Orders_FaGroup_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v209 = nil
			} else {
				if v209 == nil {
					v209 = new(Iserver_Account_Orders_FaGroup_POST_200_List_Item)
				}
				(*v209).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v209)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(out *jwriter.Writer, in Iserver_Account_Orders_FaGroup_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v210, v211 := range in {
			if v210 > 0 {
				out.RawByte(',')
			}
			if v211 == nil {
				out.RawString("null")
			} else {
				(*v211).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_Orders_FaGroup_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_Orders_FaGroup_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountOrdersFaGroupPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_Request_Orders_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_Request_Orders_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v212 *OrderRequest
			if in.IsNull() {
				in.Skip()
				v212 = nil
			} else {
				if v212 == nil {
					v212 = new(OrderRequest)
				}
				(*v212).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v212)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_Request_Orders_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v213, v214 := range in {
			if v213 > 0 {
				out.RawByte(',')
			}
			if v214 == nil {
				out.RawString("null")
			} else {
				(*v214).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request_Orders_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request_Orders_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request_Orders_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOSTRequestOrders(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "orders":
			(out.Orders).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"orders\":"
		out.RawString(prefix[1:])
		(in.Orders).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v215 string
			v215 = string(in.String())
			*out = append(*out, v215)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v216, v217 := range in {
			if v216 > 0 {
				out.RawByte(',')
			}
			out.String(string(v217))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			(out.Message).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		(in.Message).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Orders_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Orders_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Orders_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v218 *Iserver_Account_AccountId_Orders_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v218 = nil
			} else {
				if v218 == nil {
					v218 = new(Iserver_Account_AccountId_Orders_POST_200_List_Item)
				}
				(*v218).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v218)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Orders_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v219, v220 := range in {
			if v219 > 0 {
				out.RawByte(',')
			}
			if v220 == nil {
				out.RawString("null")
			} else {
				(*v220).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Orders_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Orders_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrdersPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Initial) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2001(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "after":
			out.After = string(in.String())
		case "change":
			out.Change = string(in.String())
		case "current":
			out.Current = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"after\":"
		out.RawString(prefix[1:])
		out.String(string(in.After))
	}
	{
		const prefix string = ",\"change\":"
		out.RawString(prefix)
		out.String(string(in.Change))
	}
	{
		const prefix string = ",\"current\":"
		out.RawString(prefix)
		out.String(string(in.Current))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Equity) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2002(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			out.Amount = string(in.String())
		case "commission":
			out.Commission = string(in.String())
		case "total":
			out.Total = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"commission\":"
		out.RawString(prefix)
		out.String(string(in.Commission))
	}
	{
		const prefix string = ",\"total\":"
		out.RawString(prefix)
		out.String(string(in.Total))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200_Amount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST2003(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_Whatif_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			if in.IsNull() {
				in.Skip()
				out.Amount = nil
			} else {
				if out.Amount == nil {
					out.Amount = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Amount)
				}
				(*out.Amount).UnmarshalEasyJSON(in)
			}
		case "equity":
			if in.IsNull() {
				in.Skip()
				out.Equity = nil
			} else {
				if out.Equity == nil {
					out.Equity = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Equity)
				}
				(*out.Equity).UnmarshalEasyJSON(in)
			}
		case "error":
			out.Error = string(in.String())
		case "initial":
			if in.IsNull() {
				in.Skip()
				out.Initial = nil
			} else {
				if out.Initial == nil {
					out.Initial = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Initial)
				}
				(*out.Initial).UnmarshalEasyJSON(in)
			}
		case "maintenance":
			if in.IsNull() {
				in.Skip()
				out.Maintenance = nil
			} else {
				if out.Maintenance == nil {
					out.Maintenance = new(Iserver_Account_AccountId_Order_Whatif_POST_200_Maintenance)
				}
				(*out.Maintenance).UnmarshalEasyJSON(in)
			}
		case "warn":
			out.Warn = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Order_Whatif_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		if in.Amount == nil {
			out.RawString("null")
		} else {
			(*in.Amount).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		if in.Equity == nil {
			out.RawString("null")
		} else {
			(*in.Equity).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	{
		const prefix string = ",\"initial\":"
		out.RawString(prefix)
		if in.Initial == nil {
			out.RawString("null")
		} else {
			(*in.Initial).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"maintenance\":"
		out.RawString(prefix)
		if in.Maintenance == nil {
			out.RawString("null")
		} else {
			(*in.Maintenance).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"warn\":"
		out.RawString(prefix)
		out.String(string(in.Warn))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_Whatif_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_Whatif_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderWhatifPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List, 0, 4)
			} else {
				*out = Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v221 string
			v221 = string(in.String())
			*out = append(*out, v221)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v222, v223 := range in {
			if v222 > 0 {
				out.RawByte(',')
			}
			out.String(string(v223))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item_Message_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200ListItemMessage(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = string(in.String())
		case "message":
			(out.Message).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		(in.Message).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Order_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v224 *Iserver_Account_AccountId_Order_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v224 = nil
			} else {
				if v224 == nil {
					v224 = new(Iserver_Account_AccountId_Order_POST_200_List_Item)
				}
				(*v224).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v224)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v225, v226 := range in {
			if v225 > 0 {
				out.RawByte(',')
			}
			if v226 == nil {
				out.RawString("null")
			} else {
				(*v226).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "local_order_id":
			out.Local_order_id = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		case "order_status":
			out.Order_status = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"local_order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Local_order_id))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_POST_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Order_OrderId_POST_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Order_OrderId_POST_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v227 *Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item
			if in.IsNull() {
				in.Skip()
				v227 = nil
			} else {
				if v227 == nil {
					v227 = new(Iserver_Account_AccountId_Order_OrderId_POST_200_List_Item)
				}
				(*v227).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v227)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_POST_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v228, v229 := range in {
			if v228 > 0 {
				out.RawByte(',')
			}
			if v229 == nil {
				out.RawString("null")
			} else {
				(*v229).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_POST_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_POST_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdPOST200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(in *jlexer.Lexer, out *Iserver_Account_AccountId_Order_OrderId_DELETE_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "conid":
			out.Conid = int64(in.Int64())
		case "msg":
			out.Msg = string(in.String())
		case "order_id":
			out.Order_id = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(out *jwriter.Writer, in Iserver_Account_AccountId_Order_OrderId_DELETE_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix)
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.Order_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_DELETE_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Order_OrderId_DELETE_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_DELETE_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Order_OrderId_DELETE_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdOrderOrderIdDELETE(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alerts_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "alert_active":
			out.Alert_active = int64(in.Int64())
		case "alert_name":
			out.Alert_name = string(in.String())
		case "alert_repeatable":
			out.Alert_repeatable = int64(in.Int64())
		case "alert_triggered":
			out.Alert_triggered = bool(in.Bool())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_time":
			out.Order_time = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(out *jwriter.Writer, in Iserver_Account_AccountId_Alerts_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"alert_active\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_active))
	}
	{
		const prefix string = ",\"alert_name\":"
		out.RawString(prefix)
		out.String(string(in.Alert_name))
	}
	{
		const prefix string = ",\"alert_repeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_repeatable))
	}
	{
		const prefix string = ",\"alert_triggered\":"
		out.RawString(prefix)
		out.Bool(bool(in.Alert_triggered))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_time\":"
		out.RawString(prefix)
		out.String(string(in.Order_time))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alerts_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Iserver_Account_AccountId_Alerts_GET_200_List, 0, 8)
			} else {
				*out = Iserver_Account_AccountId_Alerts_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v230 *Iserver_Account_AccountId_Alerts_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v230 = nil
			} else {
				if v230 == nil {
					v230 = new(Iserver_Account_AccountId_Alerts_GET_200_List_Item)
				}
				(*v230).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v230)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(out *jwriter.Writer, in Iserver_Account_AccountId_Alerts_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v231, v232 := range in {
			if v231 > 0 {
				out.RawByte(',')
			}
			if v232 == nil {
				out.RawString("null")
			} else {
				(*v232).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alerts_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alerts_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertsGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		case "warning_message":
			out.Warning_message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"warning_message\":"
		out.RawString(prefix)
		out.String(string(in.Warning_message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertPOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "failure_list":
			out.Failure_list = string(in.String())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_AlertId_DELETE_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"failure_list\":"
		out.RawString(prefix[1:])
		out.String(string(in.Failure_list))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_AlertId_DELETE_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_AlertId_DELETE_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_AlertId_DELETE_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertAlertIdDELETE(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_Activate_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "alertActive":
			out.AlertActive = int64(in.Int64())
		case "alertId":
			out.AlertId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_Activate_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"alertActive\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AlertActive))
	}
	{
		const prefix string = ",\"alertId\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlertId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(in *jlexer.Lexer, out *Iserver_Account_AccountId_Alert_Activate_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "failure_list":
			out.Failure_list = string(in.String())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_status":
			out.Order_status = string(in.String())
		case "request_id":
			out.Request_id = int64(in.Int64())
		case "success":
			out.Success = bool(in.Bool())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(out *jwriter.Writer, in Iserver_Account_AccountId_Alert_Activate_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"failure_list\":"
		out.RawString(prefix[1:])
		out.String(string(in.Failure_list))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"request_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Request_id))
	}
	{
		const prefix string = ",\"success\":"
		out.RawString(prefix)
		out.Bool(bool(in.Success))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Iserver_Account_AccountId_Alert_Activate_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Iserver_Account_AccountId_Alert_Activate_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIserverAccountAccountIdAlertActivatePOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(in *jlexer.Lexer, out *Inds_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(out *jwriter.Writer, in Inds_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Conid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Inds_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Inds_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Inds_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Inds_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIndsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(in *jlexer.Lexer, out *Inds_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Inds_List, 0, 8)
			} else {
				*out = Inds_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v233 *Inds_List_Item
			if in.IsNull() {
				in.Skip()
				v233 = nil
			} else {
				if v233 == nil {
					v233 = new(Inds_List_Item)
				}
				(*v233).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v233)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(out *jwriter.Writer, in Inds_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v234, v235 := range in {
			if v234 > 0 {
				out.RawByte(',')
			}
			if v235 == nil {
				out.RawString("null")
			} else {
				(*v235).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Inds_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Inds_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelInds(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Inds_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Inds_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelInds(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "salutation":
			out.Salutation = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"salutation\":"
		out.RawString(prefix)
		out.String(string(in.Salutation))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v236 map[string]interface{}
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				v236 = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v237 interface{}
					if m, ok := v237.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v237.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v237 = in.Interface()
					}
					(v236)[key] = v237
					in.WantComma()
				}
				in.Delim('}')
			}
			*out = append(*out, v236)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v238, v239 := range in {
			if v238 > 0 {
				out.RawByte(',')
			}
			if v239 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
				out.RawString(`null`)
			} else {
				out.RawByte('{')
				v240First := true
				for v240Name, v240Value := range v239 {
					if v240First {
						v240First = false
					} else {
						out.RawByte(',')
					}
					out.String(string(v240Name))
					out.RawByte(':')
					if m, ok := v240Value.(easyjson.Marshaler); ok {
						m.MarshalEasyJSON(out)
					} else if m, ok := v240Value.(json.Marshaler); ok {
						out.Raw(m.MarshalJSON())
					} else {
						out.Raw(json.Marshal(v240Value))
					}
				}
				out.RawByte('}')
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_IdentDocs_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItemIdentDocs(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "city":
			out.City = string(in.String())
		case "compact":
			out.Compact = string(in.String())
		case "country":
			out.Country = string(in.String())
		case "countryCode":
			out.CountryCode = string(in.String())
		case "postalCode":
			out.PostalCode = string(in.String())
		case "state":
			out.State = string(in.String())
		case "street":
			out.Street = string(in.String())
		case "street2":
			out.Street2 = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix[1:])
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"compact\":"
		out.RawString(prefix)
		out.String(string(in.Compact))
	}
	{
		const prefix string = ",\"country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"countryCode\":"
		out.RawString(prefix)
		out.String(string(in.CountryCode))
	}
	{
		const prefix string = ",\"postalCode\":"
		out.RawString(prefix)
		out.String(string(in.PostalCode))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.State))
	}
	{
		const prefix string = ",\"street\":"
		out.RawString(prefix)
		out.String(string(in.Street))
	}
	{
		const prefix string = ",\"street2\":"
		out.RawString(prefix)
		out.String(string(in.Street2))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "address":
			if in.IsNull() {
				in.Skip()
				out.Address = nil
			} else {
				if out.Address == nil {
					out.Address = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Address)
				}
				(*out.Address).UnmarshalEasyJSON(in)
			}
		case "canSign":
			out.CanSign = bool(in.Bool())
		case "canTrade":
			out.CanTrade = bool(in.Bool())
		case "identDocs":
			(out.IdentDocs).UnmarshalEasyJSON(in)
		case "name":
			if in.IsNull() {
				in.Skip()
				out.Name = nil
			} else {
				if out.Name == nil {
					out.Name = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item_Name)
				}
				(*out.Name).UnmarshalEasyJSON(in)
			}
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"address\":"
		out.RawString(prefix[1:])
		if in.Address == nil {
			out.RawString("null")
		} else {
			(*in.Address).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"canSign\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanSign))
	}
	{
		const prefix string = ",\"canTrade\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanTrade))
	}
	{
		const prefix string = ",\"identDocs\":"
		out.RawString(prefix)
		(in.IdentDocs).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		if in.Name == nil {
			out.RawString("null")
		} else {
			(*in.Name).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntitiesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List_Item_Entities_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List_Item_Entities_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v241 *Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item
			if in.IsNull() {
				in.Skip()
				v241 = nil
			} else {
				if v241 == nil {
					v241 = new(Ibcust_Entity_Info_GET_200_List_Item_Entities_List_Item)
				}
				(*v241).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v241)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item_Entities_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v242, v243 := range in {
			if v242 > 0 {
				out.RawByte(',')
			}
			if v243 == nil {
				out.RawString("null")
			} else {
				(*v243).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item_Entities_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item_Entities_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200ListItemEntities(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "applicantId":
			out.ApplicantId = float64(in.Float64())
		case "entities":
			(out.Entities).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"applicantId\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.ApplicantId))
	}
	{
		const prefix string = ",\"entities\":"
		out.RawString(prefix)
		(in.Entities).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(in *jlexer.Lexer, out *Ibcust_Entity_Info_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ibcust_Entity_Info_GET_200_List, 0, 8)
			} else {
				*out = Ibcust_Entity_Info_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v244 *Ibcust_Entity_Info_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v244 = nil
			} else {
				if v244 == nil {
					v244 = new(Ibcust_Entity_Info_GET_200_List_Item)
				}
				(*v244).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v244)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(out *jwriter.Writer, in Ibcust_Entity_Info_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v245, v246 := range in {
			if v245 > 0 {
				out.RawByte(',')
			}
			if v246 == nil {
				out.RawString("null")
			} else {
				(*v246).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ibcust_Entity_Info_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ibcust_Entity_Info_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelIbcustEntityInfoGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(in *jlexer.Lexer, out *HistoryResult_Bars) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "close":
			out.Close = float64(in.Float64())
		case "count":
			out.Count = float64(in.Float64())
		case "endTime":
			out.EndTime = string(in.String())
		case "high":
			out.High = float64(in.Float64())
		case "low":
			out.Low = float64(in.Float64())
		case "open":
			out.Open = float64(in.Float64())
		case "time":
			out.Time = string(in.String())
		case "volume":
			out.Volume = float64(in.Float64())
		case "weightedAvg":
			out.WeightedAvg = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(out *jwriter.Writer, in HistoryResult_Bars) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"close\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Close))
	}
	{
		const prefix string = ",\"count\":"
		out.RawString(prefix)
		out.Float64(float64(in.Count))
	}
	{
		const prefix string = ",\"endTime\":"
		out.RawString(prefix)
		out.String(string(in.EndTime))
	}
	{
		const prefix string = ",\"high\":"
		out.RawString(prefix)
		out.Float64(float64(in.High))
	}
	{
		const prefix string = ",\"low\":"
		out.RawString(prefix)
		out.Float64(float64(in.Low))
	}
	{
		const prefix string = ",\"open\":"
		out.RawString(prefix)
		out.Float64(float64(in.Open))
	}
	{
		const prefix string = ",\"time\":"
		out.RawString(prefix)
		out.String(string(in.Time))
	}
	{
		const prefix string = ",\"volume\":"
		out.RawString(prefix)
		out.Float64(float64(in.Volume))
	}
	{
		const prefix string = ",\"weightedAvg\":"
		out.RawString(prefix)
		out.Float64(float64(in.WeightedAvg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryResult_Bars) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryResult_Bars) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryResult_Bars) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryResult_Bars) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryResult(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(in *jlexer.Lexer, out *HistoryResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "bars":
			if in.IsNull() {
				in.Skip()
				out.Bars = nil
			} else {
				if out.Bars == nil {
					out.Bars = new(HistoryResult_Bars)
				}
				(*out.Bars).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(out *jwriter.Writer, in HistoryResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"bars\":"
		out.RawString(prefix[1:])
		if in.Bars == nil {
			out.RawString("null")
		} else {
			(*in.Bars).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel15(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(in *jlexer.Lexer, out *HistoryData_Data_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "c":
			out.C = float64(in.Float64())
		case "h":
			out.H = float64(in.Float64())
		case "l":
			out.L = float64(in.Float64())
		case "o":
			out.O = float64(in.Float64())
		case "t":
			out.T = float64(in.Float64())
		case "v":
			out.V = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(out *jwriter.Writer, in HistoryData_Data_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"c\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.C))
	}
	{
		const prefix string = ",\"h\":"
		out.RawString(prefix)
		out.Float64(float64(in.H))
	}
	{
		const prefix string = ",\"l\":"
		out.RawString(prefix)
		out.Float64(float64(in.L))
	}
	{
		const prefix string = ",\"o\":"
		out.RawString(prefix)
		out.Float64(float64(in.O))
	}
	{
		const prefix string = ",\"t\":"
		out.RawString(prefix)
		out.Float64(float64(in.T))
	}
	{
		const prefix string = ",\"v\":"
		out.RawString(prefix)
		out.Float64(float64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData_Data_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData_Data_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData_Data_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData_Data_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataDataList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(in *jlexer.Lexer, out *HistoryData_Data_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(HistoryData_Data_List, 0, 8)
			} else {
				*out = HistoryData_Data_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v247 *HistoryData_Data_List_Item
			if in.IsNull() {
				in.Skip()
				v247 = nil
			} else {
				if v247 == nil {
					v247 = new(HistoryData_Data_List_Item)
				}
				(*v247).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v247)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(out *jwriter.Writer, in HistoryData_Data_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v248, v249 := range in {
			if v248 > 0 {
				out.RawByte(',')
			}
			if v249 == nil {
				out.RawString("null")
			} else {
				(*v249).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData_Data_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData_Data_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData_Data_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData_Data_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelHistoryDataData(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(in *jlexer.Lexer, out *HistoryData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "barLength":
			out.BarLength = int64(in.Int64())
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		case "high":
			out.High = string(in.String())
		case "low":
			out.Low = string(in.String())
		case "mdAvailability":
			out.MdAvailability = string(in.String())
		case "messageVersion":
			out.MessageVersion = int64(in.Int64())
		case "mktDataDelay":
			out.MktDataDelay = int64(in.Int64())
		case "negativeCapable":
			out.NegativeCapable = bool(in.Bool())
		case "outsideRth":
			out.OutsideRth = bool(in.Bool())
		case "points":
			out.Points = int64(in.Int64())
		case "priceDisplayRule":
			out.PriceDisplayRule = int64(in.Int64())
		case "priceDisplayValue":
			out.PriceDisplayValue = string(in.String())
		case "priceFactor":
			out.PriceFactor = int64(in.Int64())
		case "startTime":
			out.StartTime = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "timePeriod":
			out.TimePeriod = string(in.String())
		case "tradingDayDuration":
			out.TradingDayDuration = int64(in.Int64())
		case "travelTime":
			out.TravelTime = int64(in.Int64())
		case "volumeFactor":
			out.VolumeFactor = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(out *jwriter.Writer, in HistoryData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"barLength\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.BarLength))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		(in.Data).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"high\":"
		out.RawString(prefix)
		out.String(string(in.High))
	}
	{
		const prefix string = ",\"low\":"
		out.RawString(prefix)
		out.String(string(in.Low))
	}
	{
		const prefix string = ",\"mdAvailability\":"
		out.RawString(prefix)
		out.String(string(in.MdAvailability))
	}
	{
		const prefix string = ",\"messageVersion\":"
		out.RawString(prefix)
		out.Int64(int64(in.MessageVersion))
	}
	{
		const prefix string = ",\"mktDataDelay\":"
		out.RawString(prefix)
		out.Int64(int64(in.MktDataDelay))
	}
	{
		const prefix string = ",\"negativeCapable\":"
		out.RawString(prefix)
		out.Bool(bool(in.NegativeCapable))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Bool(bool(in.OutsideRth))
	}
	{
		const prefix string = ",\"points\":"
		out.RawString(prefix)
		out.Int64(int64(in.Points))
	}
	{
		const prefix string = ",\"priceDisplayRule\":"
		out.RawString(prefix)
		out.Int64(int64(in.PriceDisplayRule))
	}
	{
		const prefix string = ",\"priceDisplayValue\":"
		out.RawString(prefix)
		out.String(string(in.PriceDisplayValue))
	}
	{
		const prefix string = ",\"priceFactor\":"
		out.RawString(prefix)
		out.Int64(int64(in.PriceFactor))
	}
	{
		const prefix string = ",\"startTime\":"
		out.RawString(prefix)
		out.String(string(in.StartTime))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"timePeriod\":"
		out.RawString(prefix)
		out.String(string(in.TimePeriod))
	}
	{
		const prefix string = ",\"tradingDayDuration\":"
		out.RawString(prefix)
		out.Int64(int64(in.TradingDayDuration))
	}
	{
		const prefix string = ",\"travelTime\":"
		out.RawString(prefix)
		out.Int64(int64(in.TravelTime))
	}
	{
		const prefix string = ",\"volumeFactor\":"
		out.RawString(prefix)
		out.Int64(int64(in.VolumeFactor))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HistoryData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HistoryData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HistoryData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HistoryData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel16(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(in *jlexer.Lexer, out *Fyi_Unreadnumber_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BN":
			out.BN = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(out *jwriter.Writer, in Fyi_Unreadnumber_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BN\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.BN))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Unreadnumber_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Unreadnumber_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Unreadnumber_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Unreadnumber_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiUnreadnumberGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(in *jlexer.Lexer, out *Fyi_Settings_Typecode_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "enabled":
			out.Enabled = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(out *jwriter.Writer, in Fyi_Settings_Typecode_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"enabled\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Enabled))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_Typecode_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_Typecode_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_Typecode_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_Typecode_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsTypecodePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(in *jlexer.Lexer, out *Fyi_Settings_GET_200_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "A":
			out.A = int64(in.Int64())
		case "FC":
			out.FC = string(in.String())
		case "FD":
			out.FD = string(in.String())
		case "FN":
			out.FN = string(in.String())
		case "H":
			out.H = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(out *jwriter.Writer, in Fyi_Settings_GET_200_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"A\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.A))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	{
		const prefix string = ",\"FD\":"
		out.RawString(prefix)
		out.String(string(in.FD))
	}
	{
		const prefix string = ",\"FN\":"
		out.RawString(prefix)
		out.String(string(in.FN))
	}
	{
		const prefix string = ",\"H\":"
		out.RawString(prefix)
		out.Int64(int64(in.H))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_GET_200_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_GET_200_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200List(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(in *jlexer.Lexer, out *Fyi_Settings_GET_200_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Fyi_Settings_GET_200_List, 0, 8)
			} else {
				*out = Fyi_Settings_GET_200_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v250 *Fyi_Settings_GET_200_List_Item
			if in.IsNull() {
				in.Skip()
				v250 = nil
			} else {
				if v250 == nil {
					v250 = new(Fyi_Settings_GET_200_List_Item)
				}
				(*v250).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v250)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(out *jwriter.Writer, in Fyi_Settings_GET_200_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v251, v252 := range in {
			if v251 > 0 {
				out.RawByte(',')
			}
			if v252 == nil {
				out.RawString("null")
			} else {
				(*v252).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Settings_GET_200_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Settings_GET_200_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Settings_GET_200_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiSettingsGET200(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(in *jlexer.Lexer, out *Fyi_Disclaimer_Typecode_PUT_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(out *jwriter.Writer, in Fyi_Disclaimer_Typecode_PUT_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Disclaimer_Typecode_PUT_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Disclaimer_Typecode_PUT_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_PUT_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_PUT_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodePUT(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(in *jlexer.Lexer, out *Fyi_Disclaimer_Typecode_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "DT":
			out.DT = string(in.String())
		case "FC":
			out.FC = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(out *jwriter.Writer, in Fyi_Disclaimer_Typecode_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"DT\":"
		out.RawString(prefix[1:])
		out.String(string(in.DT))
	}
	{
		const prefix string = ",\"FC\":"
		out.RawString(prefix)
		out.String(string(in.FC))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Disclaimer_Typecode_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Disclaimer_Typecode_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Disclaimer_Typecode_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDisclaimerTypecodeGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200_E_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "A":
			out.A = string(in.String())
		case "I":
			out.I = string(in.String())
		case "NM":
			out.NM = string(in.String())
		case "UI":
			out.UI = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200_E_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"A\":"
		out.RawString(prefix[1:])
		out.String(string(in.A))
	}
	{
		const prefix string = ",\"I\":"
		out.RawString(prefix)
		out.String(string(in.I))
	}
	{
		const prefix string = ",\"NM\":"
		out.RawString(prefix)
		out.String(string(in.NM))
	}
	{
		const prefix string = ",\"UI\":"
		out.RawString(prefix)
		out.String(string(in.UI))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200EList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200_E_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Fyi_Deliveryoptions_GET_200_E_List, 0, 8)
			} else {
				*out = Fyi_Deliveryoptions_GET_200_E_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v253 *Fyi_Deliveryoptions_GET_200_E_List_Item
			if in.IsNull() {
				in.Skip()
				v253 = nil
			} else {
				if v253 == nil {
					v253 = new(Fyi_Deliveryoptions_GET_200_E_List_Item)
				}
				(*v253).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v253)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200_E_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v254, v255 := range in {
			if v254 > 0 {
				out.RawByte(',')
			}
			if v255 == nil {
				out.RawString("null")
			} else {
				(*v255).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200_E_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200_E_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET200E(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(in *jlexer.Lexer, out *Fyi_Deliveryoptions_GET_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "E":
			(out.E).UnmarshalEasyJSON(in)
		case "M":
			out.M = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(out *jwriter.Writer, in Fyi_Deliveryoptions_GET_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"E\":"
		out.RawString(prefix[1:])
		(in.E).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"M\":"
		out.RawString(prefix)
		out.Int64(int64(in.M))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_GET_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_GET_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsGET(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Email_PUT_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(out *jwriter.Writer, in Fyi_Deliveryoptions_Email_PUT_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Email_PUT_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Email_PUT_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Email_PUT_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Email_PUT_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsEmailPUT(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Device_POST_Request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "deviceId":
			out.DeviceId = string(in.String())
		case "devicename":
			out.Devicename = string(in.String())
		case "enabled":
			out.Enabled = bool(in.Bool())
		case "uiName":
			out.UiName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(out *jwriter.Writer, in Fyi_Deliveryoptions_Device_POST_Request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"deviceId\":"
		out.RawString(prefix[1:])
		out.String(string(in.DeviceId))
	}
	{
		const prefix string = ",\"devicename\":"
		out.RawString(prefix)
		out.String(string(in.Devicename))
	}
	{
		const prefix string = ",\"enabled\":"
		out.RawString(prefix)
		out.Bool(bool(in.Enabled))
	}
	{
		const prefix string = ",\"uiName\":"
		out.RawString(prefix)
		out.String(string(in.UiName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_Request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_Request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_Request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_Request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(in *jlexer.Lexer, out *Fyi_Deliveryoptions_Device_POST_200) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "T":
			out.T = int64(in.Int64())
		case "V":
			out.V = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(out *jwriter.Writer, in Fyi_Deliveryoptions_Device_POST_200) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"T\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.T))
	}
	{
		const prefix string = ",\"V\":"
		out.RawString(prefix)
		out.Int64(int64(in.V))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_200) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Fyi_Deliveryoptions_Device_POST_200) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_200) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Fyi_Deliveryoptions_Device_POST_200) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFyiDeliveryoptionsDevicePOST1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(in *jlexer.Lexer, out *Futures_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conid":
			out.Conid = int64(in.Int64())
		case "expirationDate":
			out.ExpirationDate = int64(in.Int64())
		case "ltd":
			out.Ltd = int64(in.Int64())
		case "symbol":
			out.Symbol = string(in.String())
		case "underlyingConid":
			out.UnderlyingConid = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(out *jwriter.Writer, in Futures_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conid\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Conid))
	}
	{
		const prefix string = ",\"expirationDate\":"
		out.RawString(prefix)
		out.Int64(int64(in.ExpirationDate))
	}
	{
		const prefix string = ",\"ltd\":"
		out.RawString(prefix)
		out.Int64(int64(in.Ltd))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"underlyingConid\":"
		out.RawString(prefix)
		out.Int64(int64(in.UnderlyingConid))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Futures_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Futures_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Futures_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Futures_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFuturesList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(in *jlexer.Lexer, out *Futures_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Futures_List, 0, 8)
			} else {
				*out = Futures_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v256 *Futures_List_Item
			if in.IsNull() {
				in.Skip()
				v256 = nil
			} else {
				if v256 == nil {
					v256 = new(Futures_List_Item)
				}
				(*v256).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v256)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(out *jwriter.Writer, in Futures_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v257, v258 := range in {
			if v257 > 0 {
				out.RawByte(',')
			}
			if v258 == nil {
				out.RawString("null")
			} else {
				(*v258).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Futures_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Futures_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelFutures(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Futures_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Futures_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelFutures(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(in *jlexer.Lexer, out *Events_List_Item_Conids_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Events_List_Item_Conids_List, 0, 4)
			} else {
				*out = Events_List_Item_Conids_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v259 string
			v259 = string(in.String())
			*out = append(*out, v259)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(out *jwriter.Writer, in Events_List_Item_Conids_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v260, v261 := range in {
			if v260 > 0 {
				out.RawByte(',')
			}
			out.String(string(v261))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List_Item_Conids_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List_Item_Conids_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List_Item_Conids_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List_Item_Conids_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsListItemConids(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(in *jlexer.Lexer, out *Events_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conids":
			(out.Conids).UnmarshalEasyJSON(in)
		case "data":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Data = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v262 interface{}
					if m, ok := v262.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v262.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v262 = in.Interface()
					}
					(out.Data)[key] = v262
					in.WantComma()
				}
				in.Delim('}')
			}
		case "event_key":
			out.Event_key = string(in.String())
		case "event_type":
			out.Event_type = string(in.String())
		case "index_date":
			out.Index_date = string(in.String())
		case "index_date_type":
			out.Index_date_type = string(in.String())
		case "source":
			out.Source = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "tooltips":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Tooltips = make(map[string]interface{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v263 interface{}
					if m, ok := v263.(easyjson.Unmarshaler); ok {
						m.UnmarshalEasyJSON(in)
					} else if m, ok := v263.(json.Unmarshaler); ok {
						_ = m.UnmarshalJSON(in.Raw())
					} else {
						v263 = in.Interface()
					}
					(out.Tooltips)[key] = v263
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(out *jwriter.Writer, in Events_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conids\":"
		out.RawString(prefix[1:])
		(in.Conids).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v264First := true
			for v264Name, v264Value := range in.Data {
				if v264First {
					v264First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v264Name))
				out.RawByte(':')
				if m, ok := v264Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v264Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v264Value))
				}
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"event_key\":"
		out.RawString(prefix)
		out.String(string(in.Event_key))
	}
	{
		const prefix string = ",\"event_type\":"
		out.RawString(prefix)
		out.String(string(in.Event_type))
	}
	{
		const prefix string = ",\"index_date\":"
		out.RawString(prefix)
		out.String(string(in.Index_date))
	}
	{
		const prefix string = ",\"index_date_type\":"
		out.RawString(prefix)
		out.String(string(in.Index_date_type))
	}
	{
		const prefix string = ",\"source\":"
		out.RawString(prefix)
		out.String(string(in.Source))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"tooltips\":"
		out.RawString(prefix)
		if in.Tooltips == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v265First := true
			for v265Name, v265Value := range in.Tooltips {
				if v265First {
					v265First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v265Name))
				out.RawByte(':')
				if m, ok := v265Value.(easyjson.Marshaler); ok {
					m.MarshalEasyJSON(out)
				} else if m, ok := v265Value.(json.Marshaler); ok {
					out.Raw(m.MarshalJSON())
				} else {
					out.Raw(json.Marshal(v265Value))
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEventsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(in *jlexer.Lexer, out *Events_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Events_List, 0, 8)
			} else {
				*out = Events_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v266 *Events_List_Item
			if in.IsNull() {
				in.Skip()
				v266 = nil
			} else {
				if v266 == nil {
					v266 = new(Events_List_Item)
				}
				(*v266).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v266)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(out *jwriter.Writer, in Events_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v267, v268 := range in {
			if v267 > 0 {
				out.RawByte(',')
			}
			if v268 == nil {
				out.RawString("null")
			} else {
				(*v268).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Events_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Events_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelEvents(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Events_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Events_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelEvents(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(in *jlexer.Lexer, out *Contract_Rules_TifTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_TifTypes_List, 0, 4)
			} else {
				*out = Contract_Rules_TifTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v269 string
			v269 = string(in.String())
			*out = append(*out, v269)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(out *jwriter.Writer, in Contract_Rules_TifTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v270, v271 := range in {
			if v270 > 0 {
				out.RawByte(',')
			}
			out.String(string(v271))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_TifTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_TifTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_TifTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_TifTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesTifTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(in *jlexer.Lexer, out *Contract_Rules_OrderTypes_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_OrderTypes_List, 0, 4)
			} else {
				*out = Contract_Rules_OrderTypes_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v272 string
			v272 = string(in.String())
			*out = append(*out, v272)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(out *jwriter.Writer, in Contract_Rules_OrderTypes_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v273, v274 := range in {
			if v273 > 0 {
				out.RawByte(',')
			}
			out.String(string(v274))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_OrderTypes_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_OrderTypes_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_OrderTypes_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_OrderTypes_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypes(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(in *jlexer.Lexer, out *Contract_Rules_OrderTypesOutside_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Contract_Rules_OrderTypesOutside_List, 0, 4)
			} else {
				*out = Contract_Rules_OrderTypesOutside_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v275 string
			v275 = string(in.String())
			*out = append(*out, v275)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(out *jwriter.Writer, in Contract_Rules_OrderTypesOutside_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v276, v277 := range in {
			if v276 > 0 {
				out.RawByte(',')
			}
			out.String(string(v277))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules_OrderTypesOutside_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules_OrderTypesOutside_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules_OrderTypesOutside_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules_OrderTypesOutside_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContractRulesOrderTypesOutside(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(in *jlexer.Lexer, out *Contract_Rules) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "defaultSize":
			out.DefaultSize = float64(in.Float64())
		case "displaySize":
			out.DisplaySize = string(in.String())
		case "increment":
			out.Increment = string(in.String())
		case "limitPrice":
			out.LimitPrice = float64(in.Float64())
		case "orderTypes":
			(out.OrderTypes).UnmarshalEasyJSON(in)
		case "orderTypesOutside":
			(out.OrderTypesOutside).UnmarshalEasyJSON(in)
		case "preview":
			out.Preview = bool(in.Bool())
		case "sizeIncrement":
			out.SizeIncrement = float64(in.Float64())
		case "stopprice":
			out.Stopprice = float64(in.Float64())
		case "tifTypes":
			(out.TifTypes).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(out *jwriter.Writer, in Contract_Rules) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"defaultSize\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.DefaultSize))
	}
	{
		const prefix string = ",\"displaySize\":"
		out.RawString(prefix)
		out.String(string(in.DisplaySize))
	}
	{
		const prefix string = ",\"increment\":"
		out.RawString(prefix)
		out.String(string(in.Increment))
	}
	{
		const prefix string = ",\"limitPrice\":"
		out.RawString(prefix)
		out.Float64(float64(in.LimitPrice))
	}
	{
		const prefix string = ",\"orderTypes\":"
		out.RawString(prefix)
		(in.OrderTypes).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"orderTypesOutside\":"
		out.RawString(prefix)
		(in.OrderTypesOutside).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"preview\":"
		out.RawString(prefix)
		out.Bool(bool(in.Preview))
	}
	{
		const prefix string = ",\"sizeIncrement\":"
		out.RawString(prefix)
		out.Float64(float64(in.SizeIncrement))
	}
	{
		const prefix string = ",\"stopprice\":"
		out.RawString(prefix)
		out.Float64(float64(in.Stopprice))
	}
	{
		const prefix string = ",\"tifTypes\":"
		out.RawString(prefix)
		(in.TifTypes).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Contract_Rules) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract_Rules) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelContract(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract_Rules) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract_Rules) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelContract(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(in *jlexer.Lexer, out *Contract) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "allow_sell_long":
			out.Allow_sell_long = bool(in.Bool())
		case "category":
			out.Category = string(in.String())
		case "cfi_code":
			out.Cfi_code = string(in.String())
		case "classifier":
			out.Classifier = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "company_name":
			out.Company_name = string(in.String())
		case "con_id":
			out.Con_id = int64(in.Int64())
		case "contract_month":
			out.Contract_month = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		case "cusip":
			out.Cusip = string(in.String())
		case "exchange":
			out.Exchange = string(in.String())
		case "expiry_full":
			out.Expiry_full = string(in.String())
		case "industry":
			out.Industry = string(in.String())
		case "instrument_type":
			out.Instrument_type = string(in.String())
		case "is_zero_commission_security":
			out.Is_zero_commission_security = bool(in.Bool())
		case "local_symbol":
			out.Local_symbol = string(in.String())
		case "maturity_date":
			out.Maturity_date = string(in.String())
		case "multiplier":
			out.Multiplier = string(in.String())
		case "r_t_h":
			out.R_t_h = bool(in.Bool())
		case "right":
			out.Right = string(in.String())
		case "rules":
			if in.IsNull() {
				in.Skip()
				out.Rules = nil
			} else {
				if out.Rules == nil {
					out.Rules = new(Contract_Rules)
				}
				(*out.Rules).UnmarshalEasyJSON(in)
			}
		case "strike":
			out.Strike = string(in.String())
		case "symbol":
			out.Symbol = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "trading_class":
			out.Trading_class = string(in.String())
		case "underlying_con_id":
			out.Underlying_con_id = int64(in.Int64())
		case "underlying_issuer":
			out.Underlying_issuer = string(in.String())
		case "valid_exchanges":
			out.Valid_exchanges = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(out *jwriter.Writer, in Contract) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"allow_sell_long\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Allow_sell_long))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"cfi_code\":"
		out.RawString(prefix)
		out.String(string(in.Cfi_code))
	}
	{
		const prefix string = ",\"classifier\":"
		out.RawString(prefix)
		out.String(string(in.Classifier))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"company_name\":"
		out.RawString(prefix)
		out.String(string(in.Company_name))
	}
	{
		const prefix string = ",\"con_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Con_id))
	}
	{
		const prefix string = ",\"contract_month\":"
		out.RawString(prefix)
		out.String(string(in.Contract_month))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"cusip\":"
		out.RawString(prefix)
		out.String(string(in.Cusip))
	}
	{
		const prefix string = ",\"exchange\":"
		out.RawString(prefix)
		out.String(string(in.Exchange))
	}
	{
		const prefix string = ",\"expiry_full\":"
		out.RawString(prefix)
		out.String(string(in.Expiry_full))
	}
	{
		const prefix string = ",\"industry\":"
		out.RawString(prefix)
		out.String(string(in.Industry))
	}
	{
		const prefix string = ",\"instrument_type\":"
		out.RawString(prefix)
		out.String(string(in.Instrument_type))
	}
	{
		const prefix string = ",\"is_zero_commission_security\":"
		out.RawString(prefix)
		out.Bool(bool(in.Is_zero_commission_security))
	}
	{
		const prefix string = ",\"local_symbol\":"
		out.RawString(prefix)
		out.String(string(in.Local_symbol))
	}
	{
		const prefix string = ",\"maturity_date\":"
		out.RawString(prefix)
		out.String(string(in.Maturity_date))
	}
	{
		const prefix string = ",\"multiplier\":"
		out.RawString(prefix)
		out.String(string(in.Multiplier))
	}
	{
		const prefix string = ",\"r_t_h\":"
		out.RawString(prefix)
		out.Bool(bool(in.R_t_h))
	}
	{
		const prefix string = ",\"right\":"
		out.RawString(prefix)
		out.String(string(in.Right))
	}
	{
		const prefix string = ",\"rules\":"
		out.RawString(prefix)
		if in.Rules == nil {
			out.RawString("null")
		} else {
			(*in.Rules).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"strike\":"
		out.RawString(prefix)
		out.String(string(in.Strike))
	}
	{
		const prefix string = ",\"symbol\":"
		out.RawString(prefix)
		out.String(string(in.Symbol))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"trading_class\":"
		out.RawString(prefix)
		out.String(string(in.Trading_class))
	}
	{
		const prefix string = ",\"underlying_con_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Underlying_con_id))
	}
	{
		const prefix string = ",\"underlying_issuer\":"
		out.RawString(prefix)
		out.String(string(in.Underlying_issuer))
	}
	{
		const prefix string = ",\"valid_exchanges\":"
		out.RawString(prefix)
		out.String(string(in.Valid_exchanges))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Contract) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Contract) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Contract) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Contract) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel17(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(in *jlexer.Lexer, out *Calendar_request_Filters) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "DivExDates":
			out.DivExDates = string(in.String())
		case "corporate_earnings":
			out.Corporate_earnings = string(in.String())
		case "corporate_events":
			out.Corporate_events = string(in.String())
		case "country":
			out.Country = string(in.String())
		case "economic_events":
			out.Economic_events = string(in.String())
		case "ipo":
			out.Ipo = string(in.String())
		case "limit":
			out.Limit = string(in.String())
		case "limit_region":
			out.Limit_region = string(in.String())
		case "option_show_monthly":
			out.Option_show_monthly = string(in.String())
		case "option_show_weekly":
			out.Option_show_weekly = string(in.String())
		case "recently_held":
			out.Recently_held = string(in.String())
		case "splits":
			out.Splits = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(out *jwriter.Writer, in Calendar_request_Filters) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"DivExDates\":"
		out.RawString(prefix[1:])
		out.String(string(in.DivExDates))
	}
	{
		const prefix string = ",\"corporate_earnings\":"
		out.RawString(prefix)
		out.String(string(in.Corporate_earnings))
	}
	{
		const prefix string = ",\"corporate_events\":"
		out.RawString(prefix)
		out.String(string(in.Corporate_events))
	}
	{
		const prefix string = ",\"country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"economic_events\":"
		out.RawString(prefix)
		out.String(string(in.Economic_events))
	}
	{
		const prefix string = ",\"ipo\":"
		out.RawString(prefix)
		out.String(string(in.Ipo))
	}
	{
		const prefix string = ",\"limit\":"
		out.RawString(prefix)
		out.String(string(in.Limit))
	}
	{
		const prefix string = ",\"limit_region\":"
		out.RawString(prefix)
		out.String(string(in.Limit_region))
	}
	{
		const prefix string = ",\"option_show_monthly\":"
		out.RawString(prefix)
		out.String(string(in.Option_show_monthly))
	}
	{
		const prefix string = ",\"option_show_weekly\":"
		out.RawString(prefix)
		out.String(string(in.Option_show_weekly))
	}
	{
		const prefix string = ",\"recently_held\":"
		out.RawString(prefix)
		out.String(string(in.Recently_held))
	}
	{
		const prefix string = ",\"splits\":"
		out.RawString(prefix)
		out.String(string(in.Splits))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request_Filters) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request_Filters) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request_Filters) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request_Filters) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(in *jlexer.Lexer, out *Calendar_request_Date) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "end":
			out.End = string(in.String())
		case "start":
			out.Start = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(out *jwriter.Writer, in Calendar_request_Date) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"end\":"
		out.RawString(prefix[1:])
		out.String(string(in.End))
	}
	{
		const prefix string = ",\"start\":"
		out.RawString(prefix)
		out.String(string(in.Start))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request_Date) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request_Date) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request_Date) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request_Date) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendarRequest1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(in *jlexer.Lexer, out *Calendar_request) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "date":
			if in.IsNull() {
				in.Skip()
				out.Date = nil
			} else {
				if out.Date == nil {
					out.Date = new(Calendar_request_Date)
				}
				(*out.Date).UnmarshalEasyJSON(in)
			}
		case "filters":
			if in.IsNull() {
				in.Skip()
				out.Filters = nil
			} else {
				if out.Filters == nil {
					out.Filters = new(Calendar_request_Filters)
				}
				(*out.Filters).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(out *jwriter.Writer, in Calendar_request) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix[1:])
		if in.Date == nil {
			out.RawString("null")
		} else {
			(*in.Date).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"filters\":"
		out.RawString(prefix)
		if in.Filters == nil {
			out.RawString("null")
		} else {
			(*in.Filters).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Calendar_request) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Calendar_request) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Calendar_request) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Calendar_request) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelCalendar(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(in *jlexer.Lexer, out *AuthStatus_Prompts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AuthStatus_Prompts_List, 0, 4)
			} else {
				*out = AuthStatus_Prompts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v278 string
			v278 = string(in.String())
			*out = append(*out, v278)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(out *jwriter.Writer, in AuthStatus_Prompts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v279, v280 := range in {
			if v279 > 0 {
				out.RawByte(',')
			}
			out.String(string(v280))
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AuthStatus_Prompts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AuthStatus_Prompts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AuthStatus_Prompts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AuthStatus_Prompts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAuthStatusPrompts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(in *jlexer.Lexer, out *AuthStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authenticated":
			out.Authenticated = bool(in.Bool())
		case "competing":
			out.Competing = bool(in.Bool())
		case "connected":
			out.Connected = bool(in.Bool())
		case "fail":
			out.Fail = string(in.String())
		case "message":
			out.Message = string(in.String())
		case "prompts":
			(out.Prompts).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(out *jwriter.Writer, in AuthStatus) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"authenticated\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Authenticated))
	}
	{
		const prefix string = ",\"competing\":"
		out.RawString(prefix)
		out.Bool(bool(in.Competing))
	}
	{
		const prefix string = ",\"connected\":"
		out.RawString(prefix)
		out.Bool(bool(in.Connected))
	}
	{
		const prefix string = ",\"fail\":"
		out.RawString(prefix)
		out.String(string(in.Fail))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"prompts\":"
		out.RawString(prefix)
		(in.Prompts).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AuthStatus) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AuthStatus) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AuthStatus) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AuthStatus) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel18(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(in *jlexer.Lexer, out *Any) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(Any)
		for !in.IsDelim('}') {
			key := string(in.String())
			in.WantColon()
			var v281 interface{}
			if m, ok := v281.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := v281.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				v281 = in.Interface()
			}
			(*out)[key] = v281
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(out *jwriter.Writer, in Any) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v282First := true
		for v282Name, v282Value := range in {
			if v282First {
				v282First = false
			} else {
				out.RawByte(',')
			}
			out.String(string(v282Name))
			out.RawByte(':')
			if m, ok := v282Value.(easyjson.Marshaler); ok {
				m.MarshalEasyJSON(out)
			} else if m, ok := v282Value.(json.Marshaler); ok {
				out.Raw(m.MarshalJSON())
			} else {
				out.Raw(json.Marshal(v282Value))
			}
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Any) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Any) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Any) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Any) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel19(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(in *jlexer.Lexer, out *Allocation_List_Item_Sector_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Consumer":
			out.Consumer = float64(in.Float64())
		case "Diversified":
			out.Diversified = float64(in.Float64())
		case "Industrial":
			out.Industrial = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(out *jwriter.Writer, in Allocation_List_Item_Sector_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Consumer\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Consumer))
	}
	{
		const prefix string = ",\"Diversified\":"
		out.RawString(prefix)
		out.Float64(float64(in.Diversified))
	}
	{
		const prefix string = ",\"Industrial\":"
		out.RawString(prefix)
		out.Float64(float64(in.Industrial))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(in *jlexer.Lexer, out *Allocation_List_Item_Sector_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Communications":
			out.Communications = float64(in.Float64())
		case "Energy":
			out.Energy = float64(in.Float64())
		case "Financial":
			out.Financial = float64(in.Float64())
		case "Others":
			out.Others = float64(in.Float64())
		case "Technology":
			out.Technology = float64(in.Float64())
		case "Utilities":
			out.Utilities = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(out *jwriter.Writer, in Allocation_List_Item_Sector_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Communications\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Communications))
	}
	{
		const prefix string = ",\"Energy\":"
		out.RawString(prefix)
		out.Float64(float64(in.Energy))
	}
	{
		const prefix string = ",\"Financial\":"
		out.RawString(prefix)
		out.Float64(float64(in.Financial))
	}
	{
		const prefix string = ",\"Others\":"
		out.RawString(prefix)
		out.Float64(float64(in.Others))
	}
	{
		const prefix string = ",\"Technology\":"
		out.RawString(prefix)
		out.Float64(float64(in.Technology))
	}
	{
		const prefix string = ",\"Utilities\":"
		out.RawString(prefix)
		out.Float64(float64(in.Utilities))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemSector1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(in *jlexer.Lexer, out *Allocation_List_Item_Sector) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_Sector_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_Sector_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(out *jwriter.Writer, in Allocation_List_Item_Sector) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Sector) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Sector) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Sector) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Sector) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(in *jlexer.Lexer, out *Allocation_List_Item_Group_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Airlines":
			out.Airlines = float64(in.Float64())
		case "Banks":
			out.Banks = float64(in.Float64())
		case "Internet":
			out.Internet = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(out *jwriter.Writer, in Allocation_List_Item_Group_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Airlines\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Airlines))
	}
	{
		const prefix string = ",\"Banks\":"
		out.RawString(prefix)
		out.Float64(float64(in.Banks))
	}
	{
		const prefix string = ",\"Internet\":"
		out.RawString(prefix)
		out.Float64(float64(in.Internet))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(in *jlexer.Lexer, out *Allocation_List_Item_Group_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Apparel":
			out.Apparel = float64(in.Float64())
		case "Chemicals":
			out.Chemicals = float64(in.Float64())
		case "Communications":
			out.Communications = float64(in.Float64())
		case "Computers":
			out.Computers = float64(in.Float64())
		case "Others":
			out.Others = float64(in.Float64())
		case "Semiconductors":
			out.Semiconductors = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(out *jwriter.Writer, in Allocation_List_Item_Group_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Apparel\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Apparel))
	}
	{
		const prefix string = ",\"Chemicals\":"
		out.RawString(prefix)
		out.Float64(float64(in.Chemicals))
	}
	{
		const prefix string = ",\"Communications\":"
		out.RawString(prefix)
		out.Float64(float64(in.Communications))
	}
	{
		const prefix string = ",\"Computers\":"
		out.RawString(prefix)
		out.Float64(float64(in.Computers))
	}
	{
		const prefix string = ",\"Others\":"
		out.RawString(prefix)
		out.Float64(float64(in.Others))
	}
	{
		const prefix string = ",\"Semiconductors\":"
		out.RawString(prefix)
		out.Float64(float64(in.Semiconductors))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemGroup1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(in *jlexer.Lexer, out *Allocation_List_Item_Group) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_Group_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_Group_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(out *jwriter.Writer, in Allocation_List_Item_Group) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_Group) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_Group) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_Group) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_Group) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass_Short) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BOND":
			out.BOND = float64(in.Float64())
		case "CASH":
			out.CASH = float64(in.Float64())
		case "FUT":
			out.FUT = float64(in.Float64())
		case "OPT":
			out.OPT = float64(in.Float64())
		case "STK":
			out.STK = float64(in.Float64())
		case "WAR":
			out.WAR = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(out *jwriter.Writer, in Allocation_List_Item_AssetClass_Short) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BOND\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.BOND))
	}
	{
		const prefix string = ",\"CASH\":"
		out.RawString(prefix)
		out.Float64(float64(in.CASH))
	}
	{
		const prefix string = ",\"FUT\":"
		out.RawString(prefix)
		out.Float64(float64(in.FUT))
	}
	{
		const prefix string = ",\"OPT\":"
		out.RawString(prefix)
		out.Float64(float64(in.OPT))
	}
	{
		const prefix string = ",\"STK\":"
		out.RawString(prefix)
		out.Float64(float64(in.STK))
	}
	{
		const prefix string = ",\"WAR\":"
		out.RawString(prefix)
		out.Float64(float64(in.WAR))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass_Short) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass_Short) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Short) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Short) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass_Long) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "BOND":
			out.BOND = float64(in.Float64())
		case "CASH":
			out.CASH = float64(in.Float64())
		case "FUT":
			out.FUT = float64(in.Float64())
		case "OPT":
			out.OPT = float64(in.Float64())
		case "STK":
			out.STK = float64(in.Float64())
		case "WAR":
			out.WAR = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(out *jwriter.Writer, in Allocation_List_Item_AssetClass_Long) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"BOND\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.BOND))
	}
	{
		const prefix string = ",\"CASH\":"
		out.RawString(prefix)
		out.Float64(float64(in.CASH))
	}
	{
		const prefix string = ",\"FUT\":"
		out.RawString(prefix)
		out.Float64(float64(in.FUT))
	}
	{
		const prefix string = ",\"OPT\":"
		out.RawString(prefix)
		out.Float64(float64(in.OPT))
	}
	{
		const prefix string = ",\"STK\":"
		out.RawString(prefix)
		out.Float64(float64(in.STK))
	}
	{
		const prefix string = ",\"WAR\":"
		out.RawString(prefix)
		out.Float64(float64(in.WAR))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass_Long) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass_Long) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Long) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass_Long) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItemAssetClass1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(in *jlexer.Lexer, out *Allocation_List_Item_AssetClass) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long":
			if in.IsNull() {
				in.Skip()
				out.Long = nil
			} else {
				if out.Long == nil {
					out.Long = new(Allocation_List_Item_AssetClass_Long)
				}
				(*out.Long).UnmarshalEasyJSON(in)
			}
		case "short":
			if in.IsNull() {
				in.Skip()
				out.Short = nil
			} else {
				if out.Short == nil {
					out.Short = new(Allocation_List_Item_AssetClass_Short)
				}
				(*out.Short).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(out *jwriter.Writer, in Allocation_List_Item_AssetClass) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long\":"
		out.RawString(prefix[1:])
		if in.Long == nil {
			out.RawString("null")
		} else {
			(*in.Long).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"short\":"
		out.RawString(prefix)
		if in.Short == nil {
			out.RawString("null")
		} else {
			(*in.Short).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item_AssetClass) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item_AssetClass) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item_AssetClass) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationListItem2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(in *jlexer.Lexer, out *Allocation_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "assetClass":
			if in.IsNull() {
				in.Skip()
				out.AssetClass = nil
			} else {
				if out.AssetClass == nil {
					out.AssetClass = new(Allocation_List_Item_AssetClass)
				}
				(*out.AssetClass).UnmarshalEasyJSON(in)
			}
		case "group":
			if in.IsNull() {
				in.Skip()
				out.Group = nil
			} else {
				if out.Group == nil {
					out.Group = new(Allocation_List_Item_Group)
				}
				(*out.Group).UnmarshalEasyJSON(in)
			}
		case "sector":
			if in.IsNull() {
				in.Skip()
				out.Sector = nil
			} else {
				if out.Sector == nil {
					out.Sector = new(Allocation_List_Item_Sector)
				}
				(*out.Sector).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(out *jwriter.Writer, in Allocation_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"assetClass\":"
		out.RawString(prefix[1:])
		if in.AssetClass == nil {
			out.RawString("null")
		} else {
			(*in.AssetClass).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"group\":"
		out.RawString(prefix)
		if in.Group == nil {
			out.RawString("null")
		} else {
			(*in.Group).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"sector\":"
		out.RawString(prefix)
		if in.Sector == nil {
			out.RawString("null")
		} else {
			(*in.Sector).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocationList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(in *jlexer.Lexer, out *Allocation_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Allocation_List, 0, 8)
			} else {
				*out = Allocation_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v283 *Allocation_List_Item
			if in.IsNull() {
				in.Skip()
				v283 = nil
			} else {
				if v283 == nil {
					v283 = new(Allocation_List_Item)
				}
				(*v283).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v283)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(out *jwriter.Writer, in Allocation_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v284, v285 := range in {
			if v284 > 0 {
				out.RawByte(',')
			}
			if v285 == nil {
				out.RawString("null")
			} else {
				(*v285).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Allocation_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Allocation_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Allocation_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Allocation_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAllocation(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(in *jlexer.Lexer, out *AlertResponse_Conditions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "condition_logic_bind":
			out.Condition_logic_bind = string(in.String())
		case "condition_operator":
			out.Condition_operator = string(in.String())
		case "condition_time_zone":
			out.Condition_time_zone = string(in.String())
		case "condition_trigger_method":
			out.Condition_trigger_method = string(in.String())
		case "condition_type":
			out.Condition_type = int64(in.Int64())
		case "condition_value":
			out.Condition_value = string(in.String())
		case "conidex":
			out.Conidex = string(in.String())
		case "contract_description_1":
			out.Contract_description_1 = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(out *jwriter.Writer, in AlertResponse_Conditions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"condition_logic_bind\":"
		out.RawString(prefix[1:])
		out.String(string(in.Condition_logic_bind))
	}
	{
		const prefix string = ",\"condition_operator\":"
		out.RawString(prefix)
		out.String(string(in.Condition_operator))
	}
	{
		const prefix string = ",\"condition_time_zone\":"
		out.RawString(prefix)
		out.String(string(in.Condition_time_zone))
	}
	{
		const prefix string = ",\"condition_trigger_method\":"
		out.RawString(prefix)
		out.String(string(in.Condition_trigger_method))
	}
	{
		const prefix string = ",\"condition_type\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_type))
	}
	{
		const prefix string = ",\"condition_value\":"
		out.RawString(prefix)
		out.String(string(in.Condition_value))
	}
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix)
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"contract_description_1\":"
		out.RawString(prefix)
		out.String(string(in.Contract_description_1))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse_Conditions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse_Conditions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse_Conditions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse_Conditions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(in *jlexer.Lexer, out *AlertResponse_Conditions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AlertResponse_Conditions_List, 0, 8)
			} else {
				*out = AlertResponse_Conditions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v286 *AlertResponse_Conditions_List_Item
			if in.IsNull() {
				in.Skip()
				v286 = nil
			} else {
				if v286 == nil {
					v286 = new(AlertResponse_Conditions_List_Item)
				}
				(*v286).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v286)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(out *jwriter.Writer, in AlertResponse_Conditions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v287, v288 := range in {
			if v287 > 0 {
				out.RawByte(',')
			}
			if v288 == nil {
				out.RawString("null")
			} else {
				(*v288).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse_Conditions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse_Conditions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse_Conditions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse_Conditions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertResponseConditions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(in *jlexer.Lexer, out *AlertResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "account":
			out.Account = string(in.String())
		case "alert_active":
			out.Alert_active = int64(in.Int64())
		case "alert_default_type":
			out.Alert_default_type = string(in.String())
		case "alert_email":
			out.Alert_email = string(in.String())
		case "alert_message":
			out.Alert_message = string(in.String())
		case "alert_mta_currency":
			out.Alert_mta_currency = string(in.String())
		case "alert_mta_defaults":
			out.Alert_mta_defaults = string(in.String())
		case "alert_name":
			out.Alert_name = string(in.String())
		case "alert_play_audio":
			out.Alert_play_audio = string(in.String())
		case "alert_repeatable":
			out.Alert_repeatable = int64(in.Int64())
		case "alert_send_message":
			out.Alert_send_message = int64(in.Int64())
		case "alert_show_popup":
			out.Alert_show_popup = int64(in.Int64())
		case "alert_triggered":
			out.Alert_triggered = bool(in.Bool())
		case "condition_outside_rth":
			out.Condition_outside_rth = int64(in.Int64())
		case "condition_size":
			out.Condition_size = int64(in.Int64())
		case "conditions":
			(out.Conditions).UnmarshalEasyJSON(in)
		case "expire_time":
			out.Expire_time = string(in.String())
		case "itws_orders_only":
			out.Itws_orders_only = int64(in.Int64())
		case "order_id":
			out.Order_id = int64(in.Int64())
		case "order_not_editable":
			out.Order_not_editable = bool(in.Bool())
		case "order_status":
			out.Order_status = string(in.String())
		case "outsideRth":
			out.OutsideRth = int64(in.Int64())
		case "tif":
			out.Tif = string(in.String())
		case "time_zone":
			out.Time_zone = string(in.String())
		case "tool_id":
			out.Tool_id = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(out *jwriter.Writer, in AlertResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"account\":"
		out.RawString(prefix[1:])
		out.String(string(in.Account))
	}
	{
		const prefix string = ",\"alert_active\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_active))
	}
	{
		const prefix string = ",\"alert_default_type\":"
		out.RawString(prefix)
		out.String(string(in.Alert_default_type))
	}
	{
		const prefix string = ",\"alert_email\":"
		out.RawString(prefix)
		out.String(string(in.Alert_email))
	}
	{
		const prefix string = ",\"alert_message\":"
		out.RawString(prefix)
		out.String(string(in.Alert_message))
	}
	{
		const prefix string = ",\"alert_mta_currency\":"
		out.RawString(prefix)
		out.String(string(in.Alert_mta_currency))
	}
	{
		const prefix string = ",\"alert_mta_defaults\":"
		out.RawString(prefix)
		out.String(string(in.Alert_mta_defaults))
	}
	{
		const prefix string = ",\"alert_name\":"
		out.RawString(prefix)
		out.String(string(in.Alert_name))
	}
	{
		const prefix string = ",\"alert_play_audio\":"
		out.RawString(prefix)
		out.String(string(in.Alert_play_audio))
	}
	{
		const prefix string = ",\"alert_repeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_repeatable))
	}
	{
		const prefix string = ",\"alert_send_message\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_send_message))
	}
	{
		const prefix string = ",\"alert_show_popup\":"
		out.RawString(prefix)
		out.Int64(int64(in.Alert_show_popup))
	}
	{
		const prefix string = ",\"alert_triggered\":"
		out.RawString(prefix)
		out.Bool(bool(in.Alert_triggered))
	}
	{
		const prefix string = ",\"condition_outside_rth\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_outside_rth))
	}
	{
		const prefix string = ",\"condition_size\":"
		out.RawString(prefix)
		out.Int64(int64(in.Condition_size))
	}
	{
		const prefix string = ",\"conditions\":"
		out.RawString(prefix)
		(in.Conditions).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"expire_time\":"
		out.RawString(prefix)
		out.String(string(in.Expire_time))
	}
	{
		const prefix string = ",\"itws_orders_only\":"
		out.RawString(prefix)
		out.Int64(int64(in.Itws_orders_only))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Order_id))
	}
	{
		const prefix string = ",\"order_not_editable\":"
		out.RawString(prefix)
		out.Bool(bool(in.Order_not_editable))
	}
	{
		const prefix string = ",\"order_status\":"
		out.RawString(prefix)
		out.String(string(in.Order_status))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Int64(int64(in.OutsideRth))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"time_zone\":"
		out.RawString(prefix)
		out.String(string(in.Time_zone))
	}
	{
		const prefix string = ",\"tool_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.Tool_id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel20(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(in *jlexer.Lexer, out *AlertRequest_Conditions_List_Item) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "conidex":
			out.Conidex = string(in.String())
		case "logicBind":
			out.LogicBind = string(in.String())
		case "operator":
			out.Operator = string(in.String())
		case "timeZone":
			out.TimeZone = string(in.String())
		case "triggerMethod":
			out.TriggerMethod = string(in.String())
		case "type":
			out.Type = int64(in.Int64())
		case "value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(out *jwriter.Writer, in AlertRequest_Conditions_List_Item) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"conidex\":"
		out.RawString(prefix[1:])
		out.String(string(in.Conidex))
	}
	{
		const prefix string = ",\"logicBind\":"
		out.RawString(prefix)
		out.String(string(in.LogicBind))
	}
	{
		const prefix string = ",\"operator\":"
		out.RawString(prefix)
		out.String(string(in.Operator))
	}
	{
		const prefix string = ",\"timeZone\":"
		out.RawString(prefix)
		out.String(string(in.TimeZone))
	}
	{
		const prefix string = ",\"triggerMethod\":"
		out.RawString(prefix)
		out.String(string(in.TriggerMethod))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int64(int64(in.Type))
	}
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest_Conditions_List_Item) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest_Conditions_List_Item) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest_Conditions_List_Item) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest_Conditions_List_Item) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditionsList(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(in *jlexer.Lexer, out *AlertRequest_Conditions_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AlertRequest_Conditions_List, 0, 8)
			} else {
				*out = AlertRequest_Conditions_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v289 *AlertRequest_Conditions_List_Item
			if in.IsNull() {
				in.Skip()
				v289 = nil
			} else {
				if v289 == nil {
					v289 = new(AlertRequest_Conditions_List_Item)
				}
				(*v289).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v289)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(out *jwriter.Writer, in AlertRequest_Conditions_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v290, v291 := range in {
			if v290 > 0 {
				out.RawByte(',')
			}
			if v291 == nil {
				out.RawString("null")
			} else {
				(*v291).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest_Conditions_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest_Conditions_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest_Conditions_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest_Conditions_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAlertRequestConditions(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(in *jlexer.Lexer, out *AlertRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "alertMessage":
			out.AlertMessage = string(in.String())
		case "alertName":
			out.AlertName = string(in.String())
		case "alertRepeatable":
			out.AlertRepeatable = int64(in.Int64())
		case "conditions":
			(out.Conditions).UnmarshalEasyJSON(in)
		case "email":
			out.Email = string(in.String())
		case "expireTime":
			out.ExpireTime = string(in.String())
		case "iTWSOrdersOnly":
			out.ITWSOrdersOnly = int64(in.Int64())
		case "orderId":
			out.OrderId = int64(in.Int64())
		case "outsideRth":
			out.OutsideRth = int64(in.Int64())
		case "playAudio":
			out.PlayAudio = string(in.String())
		case "sendMessage":
			out.SendMessage = int64(in.Int64())
		case "showPopup":
			out.ShowPopup = int64(in.Int64())
		case "tif":
			out.Tif = string(in.String())
		case "toolId":
			out.ToolId = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(out *jwriter.Writer, in AlertRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"alertMessage\":"
		out.RawString(prefix[1:])
		out.String(string(in.AlertMessage))
	}
	{
		const prefix string = ",\"alertName\":"
		out.RawString(prefix)
		out.String(string(in.AlertName))
	}
	{
		const prefix string = ",\"alertRepeatable\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlertRepeatable))
	}
	{
		const prefix string = ",\"conditions\":"
		out.RawString(prefix)
		(in.Conditions).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"expireTime\":"
		out.RawString(prefix)
		out.String(string(in.ExpireTime))
	}
	{
		const prefix string = ",\"iTWSOrdersOnly\":"
		out.RawString(prefix)
		out.Int64(int64(in.ITWSOrdersOnly))
	}
	{
		const prefix string = ",\"orderId\":"
		out.RawString(prefix)
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"outsideRth\":"
		out.RawString(prefix)
		out.Int64(int64(in.OutsideRth))
	}
	{
		const prefix string = ",\"playAudio\":"
		out.RawString(prefix)
		out.String(string(in.PlayAudio))
	}
	{
		const prefix string = ",\"sendMessage\":"
		out.RawString(prefix)
		out.Int64(int64(in.SendMessage))
	}
	{
		const prefix string = ",\"showPopup\":"
		out.RawString(prefix)
		out.Int64(int64(in.ShowPopup))
	}
	{
		const prefix string = ",\"tif\":"
		out.RawString(prefix)
		out.String(string(in.Tif))
	}
	{
		const prefix string = ",\"toolId\":"
		out.RawString(prefix)
		out.Int64(int64(in.ToolId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlertRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlertRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlertRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlertRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel21(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(in *jlexer.Lexer, out *Accounts_List) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Accounts_List, 0, 8)
			} else {
				*out = Accounts_List{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v292 *Account
			if in.IsNull() {
				in.Skip()
				v292 = nil
			} else {
				if v292 == nil {
					v292 = new(Account)
				}
				(*v292).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v292)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(out *jwriter.Writer, in Accounts_List) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v293, v294 := range in {
			if v293 > 0 {
				out.RawByte(',')
			}
			if v294 == nil {
				out.RawString("null")
			} else {
				(*v294).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Accounts_List) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Accounts_List) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Accounts_List) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Accounts_List) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccounts(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(in *jlexer.Lexer, out *Account_Master) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "officialTitle":
			out.OfficialTitle = string(in.String())
		case "title":
			out.Title = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(out *jwriter.Writer, in Account_Master) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"officialTitle\":"
		out.RawString(prefix[1:])
		out.String(string(in.OfficialTitle))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Account_Master) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Account_Master) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModelAccount(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Account_Master) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Account_Master) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModelAccount(l, v)
}
func easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(in *jlexer.Lexer, out *Account) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "accountAlias":
			out.AccountAlias = string(in.String())
		case "accountId":
			out.AccountId = string(in.String())
		case "accountStatus":
			out.AccountStatus = float64(in.Float64())
		case "accountTitle":
			out.AccountTitle = string(in.String())
		case "accountVan":
			out.AccountVan = string(in.String())
		case "covestor":
			out.Covestor = bool(in.Bool())
		case "currency":
			out.Currency = string(in.String())
		case "desc":
			out.Desc = string(in.String())
		case "displayName":
			out.DisplayName = string(in.String())
		case "faclient":
			out.Faclient = bool(in.Bool())
		case "id":
			out.Id = string(in.String())
		case "master":
			if in.IsNull() {
				in.Skip()
				out.Master = nil
			} else {
				if out.Master == nil {
					out.Master = new(Account_Master)
				}
				(*out.Master).UnmarshalEasyJSON(in)
			}
		case "parent":
			out.Parent = string(in.String())
		case "tradingType":
			out.TradingType = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(out *jwriter.Writer, in Account) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"accountAlias\":"
		out.RawString(prefix[1:])
		out.String(string(in.AccountAlias))
	}
	{
		const prefix string = ",\"accountId\":"
		out.RawString(prefix)
		out.String(string(in.AccountId))
	}
	{
		const prefix string = ",\"accountStatus\":"
		out.RawString(prefix)
		out.Float64(float64(in.AccountStatus))
	}
	{
		const prefix string = ",\"accountTitle\":"
		out.RawString(prefix)
		out.String(string(in.AccountTitle))
	}
	{
		const prefix string = ",\"accountVan\":"
		out.RawString(prefix)
		out.String(string(in.AccountVan))
	}
	{
		const prefix string = ",\"covestor\":"
		out.RawString(prefix)
		out.Bool(bool(in.Covestor))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"desc\":"
		out.RawString(prefix)
		out.String(string(in.Desc))
	}
	{
		const prefix string = ",\"displayName\":"
		out.RawString(prefix)
		out.String(string(in.DisplayName))
	}
	{
		const prefix string = ",\"faclient\":"
		out.RawString(prefix)
		out.Bool(bool(in.Faclient))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.String(string(in.Id))
	}
	{
		const prefix string = ",\"master\":"
		out.RawString(prefix)
		if in.Master == nil {
			out.RawString("null")
		} else {
			(*in.Master).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"parent\":"
		out.RawString(prefix)
		out.String(string(in.Parent))
	}
	{
		const prefix string = ",\"tradingType\":"
		out.RawString(prefix)
		out.String(string(in.TradingType))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Account) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Account) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKamaiuIbCpGoClientV1RestModel22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Account) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Account) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKamaiuIbCpGoClientV1RestModel22(l, v)
}
